<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_alignment" kind="class" language="C++" prot="public">
    <compoundname>Alignment</compoundname>
    <derivedcompoundref refid="class_firmware_unit" prot="public" virt="non-virtual">FirmwareUnit</derivedcompoundref>
    <includes refid="_alignment_8hpp" local="no">Alignment.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" prot="public" static="no" mutable="no">
        <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
        <definition>Nema8* Alignment::Motor_x</definition>
        <argsstring></argsstring>
        <name>Motor_x</name>
        <qualifiedname>Alignment::Motor_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="21" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="21" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1a668b9598d17990bcb2132444d44d7cde" compoundref="_alignment_8cpp" startline="1786" endline="1808">CheckBoundaryX</referencedby>
        <referencedby refid="class_alignment_1a8d94944e72243b20184157206984ac6d" compoundref="_alignment_8cpp" startline="1196" endline="1202">DisableAll</referencedby>
        <referencedby refid="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" compoundref="_alignment_8cpp" startline="1189" endline="1195">EnableAll</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a23c457adf671d3113fe80733bc726e12" compoundref="_alignment_8cpp" startline="546" endline="552">incrementTotalStepCounted</referencedby>
        <referencedby refid="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" compoundref="_alignment_8cpp" startline="1182" endline="1188">InitAlign</referencedby>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
        <referencedby refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" compoundref="_alignment_8cpp" startline="266" endline="281">MoveAngleX</referencedby>
        <referencedby refid="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" compoundref="_alignment_8cpp" startline="808" endline="832">MoveAngleXSafe</referencedby>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
        <referencedby refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</referencedby>
        <referencedby refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" compoundref="_alignment_8cpp" startline="79" endline="93">MoveDistanceXloop</referencedby>
        <referencedby refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" compoundref="_alignment_8cpp" startline="705" endline="727">MoveDistanceXSafe</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
        <referencedby refid="class_alignment_1a54e8fdfb336ca187d816f71afc482889" compoundref="_alignment_8cpp" startline="554" endline="561">resetStepCounter</referencedby>
        <referencedby refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" prot="public" static="no" mutable="no">
        <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
        <definition>Nema8* Alignment::Motor_y</definition>
        <argsstring></argsstring>
        <name>Motor_y</name>
        <qualifiedname>Alignment::Motor_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="22" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1a8d94944e72243b20184157206984ac6d" compoundref="_alignment_8cpp" startline="1196" endline="1202">DisableAll</referencedby>
        <referencedby refid="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" compoundref="_alignment_8cpp" startline="1189" endline="1195">EnableAll</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a23c457adf671d3113fe80733bc726e12" compoundref="_alignment_8cpp" startline="546" endline="552">incrementTotalStepCounted</referencedby>
        <referencedby refid="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" compoundref="_alignment_8cpp" startline="1182" endline="1188">InitAlign</referencedby>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
        <referencedby refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" compoundref="_alignment_8cpp" startline="282" endline="297">MoveAngleY</referencedby>
        <referencedby refid="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" compoundref="_alignment_8cpp" startline="833" endline="857">MoveAngleYSafe</referencedby>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
        <referencedby refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</referencedby>
        <referencedby refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" compoundref="_alignment_8cpp" startline="94" endline="108">MoveDistanceYloop</referencedby>
        <referencedby refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" compoundref="_alignment_8cpp" startline="728" endline="752">MoveDistanceYSafe</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
        <referencedby refid="class_alignment_1a54e8fdfb336ca187d816f71afc482889" compoundref="_alignment_8cpp" startline="554" endline="561">resetStepCounter</referencedby>
        <referencedby refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" prot="public" static="no" mutable="no">
        <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
        <definition>Nema8* Alignment::Motor_z</definition>
        <argsstring></argsstring>
        <name>Motor_z</name>
        <qualifiedname>Alignment::Motor_z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="23" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1a8d94944e72243b20184157206984ac6d" compoundref="_alignment_8cpp" startline="1196" endline="1202">DisableAll</referencedby>
        <referencedby refid="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" compoundref="_alignment_8cpp" startline="1189" endline="1195">EnableAll</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a23c457adf671d3113fe80733bc726e12" compoundref="_alignment_8cpp" startline="546" endline="552">incrementTotalStepCounted</referencedby>
        <referencedby refid="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" compoundref="_alignment_8cpp" startline="1182" endline="1188">InitAlign</referencedby>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
        <referencedby refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" compoundref="_alignment_8cpp" startline="298" endline="313">MoveAngleZ</referencedby>
        <referencedby refid="class_alignment_1ace1287639428d2c45606677eb6287bc2" compoundref="_alignment_8cpp" startline="858" endline="882">MoveAngleZSafe</referencedby>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
        <referencedby refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</referencedby>
        <referencedby refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" compoundref="_alignment_8cpp" startline="109" endline="123">MoveDistanceZloop</referencedby>
        <referencedby refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" compoundref="_alignment_8cpp" startline="753" endline="777">MoveDistanceZSafe</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
        <referencedby refid="class_alignment_1a54e8fdfb336ca187d816f71afc482889" compoundref="_alignment_8cpp" startline="554" endline="561">resetStepCounter</referencedby>
        <referencedby refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a1670266fe11fc62edfdac779742f94e8" prot="public" static="no" mutable="no">
        <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
        <definition>Nema8* Alignment::Motor_PrintHead</definition>
        <argsstring></argsstring>
        <name>Motor_PrintHead</name>
        <qualifiedname>Alignment::Motor_PrintHead</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="24" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="24" bodyend="-1"/>
        <referencedby refid="class_alignment_1a95391c1741e07d4c91435e5d4ed44e4f" compoundref="_alignment_8cpp" startline="44" endline="61">Alignment</referencedby>
        <referencedby refid="class_alignment_1a8d94944e72243b20184157206984ac6d" compoundref="_alignment_8cpp" startline="1196" endline="1202">DisableAll</referencedby>
        <referencedby refid="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" compoundref="_alignment_8cpp" startline="1189" endline="1195">EnableAll</referencedby>
        <referencedby refid="class_alignment_1a23c457adf671d3113fe80733bc726e12" compoundref="_alignment_8cpp" startline="546" endline="552">incrementTotalStepCounted</referencedby>
        <referencedby refid="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" compoundref="_alignment_8cpp" startline="1182" endline="1188">InitAlign</referencedby>
        <referencedby refid="class_alignment_1a5cc726da25a362e1312506703809c608" compoundref="_alignment_8cpp" startline="146" endline="151">initFirmwareUnit</referencedby>
        <referencedby refid="class_alignment_1ab5378ab4e1db1bd90dc0ed3854079a4c" compoundref="_alignment_8cpp" startline="949" endline="969">movePhToRefX</referencedby>
        <referencedby refid="class_alignment_1a54e8fdfb336ca187d816f71afc482889" compoundref="_alignment_8cpp" startline="554" endline="561">resetStepCounter</referencedby>
        <referencedby refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</referencedby>
        <referencedby refid="class_alignment_1a42ca106fc6688ad6f4e17685f9c07589" compoundref="_alignment_8cpp" startline="124" endline="137">RotateAnglePHloop</referencedby>
        <referencedby refid="class_alignment_1a7a971878b2e1c3234429fce2d8baa454" compoundref="_alignment_8cpp" startline="914" endline="919">StepOncePH</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a91f199d88034ab646d037e362921998f" prot="public" static="no" mutable="no">
        <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
        <definition>endSwitch* Alignment::endSwitch_x</definition>
        <argsstring></argsstring>
        <name>endSwitch_x</name>
        <qualifiedname>Alignment::endSwitch_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="25" column="15" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</referencedby>
        <referencedby refid="class_alignment_1a0973326d2762dd758eb1d7f6740b69f5" compoundref="_alignment_8cpp" startline="336" endline="339">getReadingEndstopX</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" prot="public" static="no" mutable="no">
        <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
        <definition>endSwitch* Alignment::endSwitch_y</definition>
        <argsstring></argsstring>
        <name>endSwitch_y</name>
        <qualifiedname>Alignment::endSwitch_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="26" column="15" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</referencedby>
        <referencedby refid="class_alignment_1a3fd39f62a10172bfd8c63e7cbf5983bd" compoundref="_alignment_8cpp" startline="340" endline="343">getReadingEndstopY</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ad765e3454ed5e893007595790ef850ca" prot="public" static="no" mutable="no">
        <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
        <definition>endSwitch* Alignment::endSwitch_z</definition>
        <argsstring></argsstring>
        <name>endSwitch_z</name>
        <qualifiedname>Alignment::endSwitch_z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="27" column="15" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</referencedby>
        <referencedby refid="class_alignment_1a54ac0ddea519c9c51c185a03174f643d" compoundref="_alignment_8cpp" startline="344" endline="347">getReadingEndstopZ</referencedby>
        <referencedby refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a064d13de8c775c7b63fa9a854bde3f1a" prot="public" static="no" mutable="no">
        <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
        <definition>endSwitch* Alignment::endSwitch_stop</definition>
        <argsstring></argsstring>
        <name>endSwitch_stop</name>
        <qualifiedname>Alignment::endSwitch_stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="28" column="15" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" compoundref="_alignment_8cpp" startline="27" endline="43">Alignment</referencedby>
        <referencedby refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" compoundref="_alignment_8cpp" startline="140" endline="144">isStopButtonPressed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" prot="public" static="no" mutable="no">
        <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
        <definition>lightBarrier* Alignment::lightBarrier_x</definition>
        <argsstring></argsstring>
        <name>lightBarrier_x</name>
        <qualifiedname>Alignment::lightBarrier_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="29" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" compoundref="_alignment_8cpp" startline="27" endline="43">Alignment</referencedby>
        <referencedby refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</referencedby>
        <referencedby refid="class_alignment_1ad66e261f955a7ff82655ad9dc40511d4" compoundref="_alignment_8cpp" startline="349" endline="352">getReadingLightBarrierX</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" prot="public" static="no" mutable="no">
        <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
        <definition>lightBarrier* Alignment::lightBarrier_y</definition>
        <argsstring></argsstring>
        <name>lightBarrier_y</name>
        <qualifiedname>Alignment::lightBarrier_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="30" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" compoundref="_alignment_8cpp" startline="27" endline="43">Alignment</referencedby>
        <referencedby refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</referencedby>
        <referencedby refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</referencedby>
        <referencedby refid="class_alignment_1aac7394937e1dc058fb929abca3465dd1" compoundref="_alignment_8cpp" startline="353" endline="356">getReadingLightBarrierY</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" prot="public" static="no" mutable="no">
        <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
        <definition>lightBarrier* Alignment::lightBarrier_z</definition>
        <argsstring></argsstring>
        <name>lightBarrier_z</name>
        <qualifiedname>Alignment::lightBarrier_z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="31" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" compoundref="_alignment_8cpp" startline="27" endline="43">Alignment</referencedby>
        <referencedby refid="class_alignment_1ad8475ba7636ed61ab7b3a70f54d5a26f" compoundref="_alignment_8cpp" startline="357" endline="360">getReadingLightBarrierZ</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" prot="public" static="no" mutable="no">
        <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
        <definition>DistanceSensor* Alignment::DistanceM_x</definition>
        <argsstring></argsstring>
        <name>DistanceM_x</name>
        <qualifiedname>Alignment::DistanceM_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="32" column="20" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a4ce0756a95f2b8cbf5511c6ff5b3d095" compoundref="_alignment_8cpp" startline="1770" endline="1774">getCurrentPosX</referencedby>
        <referencedby refid="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" compoundref="_alignment_8cpp" startline="1729" endline="1734">getMinX</referencedby>
        <referencedby refid="class_alignment_1a1485eb9145464fdbd9739de9977a196e" compoundref="_alignment_8cpp" startline="1717" endline="1723">getRemainingDistanceX</referencedby>
        <referencedby refid="class_alignment_1a3e235378adac9e2ffd3fa6a6d9e67534" compoundref="_alignment_8cpp" startline="323" endline="326">getValueSensorX</referencedby>
        <referencedby refid="class_alignment_1ab5378ab4e1db1bd90dc0ed3854079a4c" compoundref="_alignment_8cpp" startline="949" endline="969">movePhToRefX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ae48c99c465830ad4218d9969dc073372" prot="public" static="no" mutable="no">
        <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
        <definition>DistanceSensor* Alignment::DistanceM_y</definition>
        <argsstring></argsstring>
        <name>DistanceM_y</name>
        <qualifiedname>Alignment::DistanceM_y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="33" column="20" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="33" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1ad5e4bba6bb06a18a2f6e9b07bf6dfc70" compoundref="_alignment_8cpp" startline="1775" endline="1779">getCurrentPosY</referencedby>
        <referencedby refid="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" compoundref="_alignment_8cpp" startline="1736" endline="1741">getMinY</referencedby>
        <referencedby refid="class_alignment_1a2a1c2efba6ebe26730bf78649ad982db" compoundref="_alignment_8cpp" startline="1710" endline="1716">getRemainingDistanceY</referencedby>
        <referencedby refid="class_alignment_1a3e2eb068cd046b322da4d4a6d8b24059" compoundref="_alignment_8cpp" startline="327" endline="330">getValueSensorY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a5420c8ac11245cdd84994197382e5b21" prot="public" static="no" mutable="no">
        <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
        <definition>DistanceSensor* Alignment::DistanceM_z</definition>
        <argsstring></argsstring>
        <name>DistanceM_z</name>
        <qualifiedname>Alignment::DistanceM_z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="34" column="20" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" compoundref="_alignment_8cpp" startline="13" endline="25">Alignment</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a7129f8f955b8f6b6ceeb4531a1dd2950" compoundref="_alignment_8cpp" startline="1780" endline="1784">getCurrentPosZ</referencedby>
        <referencedby refid="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" compoundref="_alignment_8cpp" startline="1743" endline="1748">getMinZ</referencedby>
        <referencedby refid="class_alignment_1a8e672d92ef34e5e3fab4cae4d8b8f4cf" compoundref="_alignment_8cpp" startline="1702" endline="1708">getRemainingDistanceZ</referencedby>
        <referencedby refid="class_alignment_1a9adb4c7efa88979fcca71e8c57b02528" compoundref="_alignment_8cpp" startline="331" endline="334">getValueSensorZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a51100f220f7e987aa37d1a4f43332111" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float Alignment::MinDistanceToML</definition>
        <argsstring></argsstring>
        <name>MinDistanceToML</name>
        <qualifiedname>Alignment::MinDistanceToML</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="36" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1afad0188cf4e9df73809ed1eec1c419a4" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float Alignment::MaxDistanceToMl</definition>
        <argsstring></argsstring>
        <name>MaxDistanceToMl</name>
        <qualifiedname>Alignment::MaxDistanceToMl</qualifiedname>
        <initializer>= 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="37" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a4b2493720baea6813b7a7903aed549c7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Alignment::TargetDistancePHToMl</definition>
        <argsstring></argsstring>
        <name>TargetDistancePHToMl</name>
        <qualifiedname>Alignment::TargetDistancePHToMl</qualifiedname>
        <initializer>=70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="38" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a9f3eee5f60bc1591e1895d7c4cd7c410" compoundref="_alignment_8cpp" startline="1825" endline="1832">setTargetDistancePHToML</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ab80d1f8535037116d0a86121f8436bf2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Alignment::TargetDistanceSensorToMl</definition>
        <argsstring></argsstring>
        <name>TargetDistanceSensorToMl</name>
        <qualifiedname>Alignment::TargetDistanceSensorToMl</qualifiedname>
        <initializer>=165</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="39" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="39" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1ac8054a4a002284fae13081f16d3cee65" compoundref="_alignment_8cpp" startline="1833" endline="1840">setTargetDistanceSensorToML</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ad7c7f7334cba06913bbe10d457a95f09" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Alignment::NumOfCycles</definition>
        <argsstring></argsstring>
        <name>NumOfCycles</name>
        <qualifiedname>Alignment::NumOfCycles</qualifiedname>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="41" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a8c429a0bde39f3aeb0716688343d8407" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::homed</definition>
        <argsstring></argsstring>
        <name>homed</name>
        <qualifiedname>Alignment::homed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="44" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a3adb6cbe96e306b14b89c2e5156795b5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::aligned</definition>
        <argsstring></argsstring>
        <name>aligned</name>
        <qualifiedname>Alignment::aligned</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="45" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ae7c51051725c6b8e664520fbaa91ecad" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::allDownMax</definition>
        <argsstring></argsstring>
        <name>allDownMax</name>
        <qualifiedname>Alignment::allDownMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="46" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a17f1f93ac35dac591ed757b11410d585" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::xDownMax</definition>
        <argsstring></argsstring>
        <name>xDownMax</name>
        <qualifiedname>Alignment::xDownMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="47" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1adbc990948f9388f2812fe23056fcffdc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::yDownMax</definition>
        <argsstring></argsstring>
        <name>yDownMax</name>
        <qualifiedname>Alignment::yDownMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="48" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ac48d8b33eca9abe68e29b0ba14ba7cd7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::zDownMax</definition>
        <argsstring></argsstring>
        <name>zDownMax</name>
        <qualifiedname>Alignment::zDownMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="49" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a020e2e3168adea3c1748f8519d858466" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::allUpMax</definition>
        <argsstring></argsstring>
        <name>allUpMax</name>
        <qualifiedname>Alignment::allUpMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="50" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a4950411fd5a2a8d6b576f72c545c63fd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::xUpMax</definition>
        <argsstring></argsstring>
        <name>xUpMax</name>
        <qualifiedname>Alignment::xUpMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="51" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a6f2d3872a6b87b249f47d4bd4507e8bc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::yUpMax</definition>
        <argsstring></argsstring>
        <name>yUpMax</name>
        <qualifiedname>Alignment::yUpMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="52" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a95ebab1e6078bd65bdedfe4eb29dfb8c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::zUpMax</definition>
        <argsstring></argsstring>
        <name>zUpMax</name>
        <qualifiedname>Alignment::zUpMax</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="53" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1abc4879d71a306310d6204f05bd87b6a0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::xUpDistanceArrived</definition>
        <argsstring></argsstring>
        <name>xUpDistanceArrived</name>
        <qualifiedname>Alignment::xUpDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="54" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="54" bodyend="-1"/>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a65b4fe89adf15ded764b816987073109" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::yUpDistanceArrived</definition>
        <argsstring></argsstring>
        <name>yUpDistanceArrived</name>
        <qualifiedname>Alignment::yUpDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="55" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="55" bodyend="-1"/>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a602b18d1b538c84f3f08cbcd79f708ab" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::zUpDistanceArrived</definition>
        <argsstring></argsstring>
        <name>zUpDistanceArrived</name>
        <qualifiedname>Alignment::zUpDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="56" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="56" bodyend="-1"/>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a07ddf895fd58066aa53924a118e3f9f6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::allUpDistanceArrived</definition>
        <argsstring></argsstring>
        <name>allUpDistanceArrived</name>
        <qualifiedname>Alignment::allUpDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="57" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="57" bodyend="-1"/>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ac4f9226904b8cadabf0e9a4216f2fc89" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::xDownDistanceArrived</definition>
        <argsstring></argsstring>
        <name>xDownDistanceArrived</name>
        <qualifiedname>Alignment::xDownDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="58" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="58" bodyend="-1"/>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a69d1bca030eb1ec158ad27512f504eaa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::yDownDistanceArrived</definition>
        <argsstring></argsstring>
        <name>yDownDistanceArrived</name>
        <qualifiedname>Alignment::yDownDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="59" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="59" bodyend="-1"/>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a58b5967e6ab6b6f015eb68aa33626aab" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::zDownDistanceArrived</definition>
        <argsstring></argsstring>
        <name>zDownDistanceArrived</name>
        <qualifiedname>Alignment::zDownDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="60" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="60" bodyend="-1"/>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1ab9aec297532b4d70b1c6e835a05b5b0e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::allDownDistanceArrived</definition>
        <argsstring></argsstring>
        <name>allDownDistanceArrived</name>
        <qualifiedname>Alignment::allDownDistanceArrived</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="61" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="61" bodyend="-1"/>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a823a490beace9894af4600c3f7747446" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::XAligned</definition>
        <argsstring></argsstring>
        <name>XAligned</name>
        <qualifiedname>Alignment::XAligned</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="63" column="8" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="63" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a6eb54776bebde131b223cb04442ca95c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::YAligned</definition>
        <argsstring></argsstring>
        <name>YAligned</name>
        <qualifiedname>Alignment::YAligned</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="63" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="63" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_alignment_1a36a613d094db5f895f03efce75aa1dc9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Alignment::ZAligned</definition>
        <argsstring></argsstring>
        <name>ZAligned</name>
        <qualifiedname>Alignment::ZAligned</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="63" column="28" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="63" bodyend="-1"/>
        <referencedby refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" compoundref="_alignment_8cpp" startline="1282" endline="1381">AlignLoop</referencedby>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alignment::Alignment</definition>
        <argsstring>(Nema8 *Motor_x, Nema8 *Motor_y, Nema8 *Motor_z, DistanceSensor *DistanceM_x, DistanceSensor *DistanceM_y, DistanceSensor *DistanceM_z, endSwitch *endSwitch_x, endSwitch *endSwitch_y, endSwitch *endSwitch_z)</argsstring>
        <name>Alignment</name>
        <qualifiedname>Alignment::Alignment</qualifiedname>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_x</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_y</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_z</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_x</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_y</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_z</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_x</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_y</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="66" column="5" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="13" bodyend="25"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alignment::Alignment</definition>
        <argsstring>(Nema8 *Motor_x, Nema8 *Motor_y, Nema8 *Motor_z, DistanceSensor *DistanceM_x, DistanceSensor *DistanceM_y, DistanceSensor *DistanceM_z, endSwitch *endSwitch_x, endSwitch *endSwitch_y, endSwitch *endSwitch_z, endSwitch *endSwitch_stop, lightBarrier *lightBarrier_x, lightBarrier *lightBarrier_y, lightBarrier *lightBarrier_z)</argsstring>
        <name>Alignment</name>
        <qualifiedname>Alignment::Alignment</qualifiedname>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_x</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_y</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_z</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_x</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_y</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_z</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_x</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_y</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_z</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_stop</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_x</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_y</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="69" column="5" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="27" bodyend="43"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="class_alignment_1a064d13de8c775c7b63fa9a854bde3f1a" compoundref="_alignment_8hpp" startline="28">endSwitch_stop</references>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" compoundref="_alignment_8hpp" startline="29">lightBarrier_x</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <references refid="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" compoundref="_alignment_8hpp" startline="31">lightBarrier_z</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a95391c1741e07d4c91435e5d4ed44e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alignment::Alignment</definition>
        <argsstring>(Nema8 *Motor_x, Nema8 *Motor_y, Nema8 *Motor_z, Nema8 *Motor_PrintHead, DistanceSensor *DistanceM_x, DistanceSensor *DistanceM_y, DistanceSensor *DistanceM_z, endSwitch *endSwitch_x, endSwitch *endSwitch_y, endSwitch *endSwitch_z, endSwitch *endSwitch_stop, lightBarrier *lightBarrier_x, lightBarrier *lightBarrier_y, lightBarrier *lightBarrier_z)</argsstring>
        <name>Alignment</name>
        <qualifiedname>Alignment::Alignment</qualifiedname>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_x</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_y</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_z</declname>
        </param>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Motor_PrintHead</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_x</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_y</declname>
        </param>
        <param>
          <type><ref refid="class_distance_sensor" kindref="compound">DistanceSensor</ref> *</type>
          <declname>DistanceM_z</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_x</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_y</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_z</declname>
        </param>
        <param>
          <type><ref refid="classend_switch" kindref="compound">endSwitch</ref> *</type>
          <declname>endSwitch_stop</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_x</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_y</declname>
        </param>
        <param>
          <type><ref refid="classlight_barrier" kindref="compound">lightBarrier</ref> *</type>
          <declname>lightBarrier_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="72" column="5" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="44" bodyend="61"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="class_alignment_1a064d13de8c775c7b63fa9a854bde3f1a" compoundref="_alignment_8hpp" startline="28">endSwitch_stop</references>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" compoundref="_alignment_8hpp" startline="29">lightBarrier_x</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <references refid="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" compoundref="_alignment_8hpp" startline="31">lightBarrier_z</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceMSafe</definition>
        <argsstring>(Nema8 *Mref, int direction, float distance)</argsstring>
        <name>MoveDistanceMSafe</name>
        <qualifiedname>Alignment::MoveDistanceMSafe</qualifiedname>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Mref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="83" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="72" bodyend="77"/>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" compoundref="_alignment_8cpp" startline="79" endline="93">MoveDistanceXloop</references>
        <references refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" compoundref="_alignment_8cpp" startline="94" endline="108">MoveDistanceYloop</references>
        <references refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" compoundref="_alignment_8cpp" startline="109" endline="123">MoveDistanceZloop</references>
        <referencedby refid="class_move_motor_up_cmd_1abe4d84e2c2bd89bf875820aa96f7acb0" compoundref="_cmd_pattern_classes_8h" startline="249" endline="253">MoveMotorUpCmd::execute</referencedby>
        <referencedby refid="class_move_motor_down_cmd_1ac319973b67f7df5f252f2849aae38f40" compoundref="_cmd_pattern_classes_8h" startline="266" endline="270">MoveMotorDownCmd::execute</referencedby>
        <referencedby refid="class_move_motor_up_cmd_1a592fda0f55d367d5be29244036034b6b" compoundref="_cmd_pattern_classes_8h" startline="254" endline="257">MoveMotorUpCmd::undo</referencedby>
        <referencedby refid="class_move_motor_down_cmd_1ac2931312dd7e4a46455b6c11a551b700" compoundref="_cmd_pattern_classes_8h" startline="271" endline="274">MoveMotorDownCmd::undo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceXloop</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceXloop</name>
        <qualifiedname>Alignment::MoveDistanceXloop</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="84" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="79" bodyend="93"/>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" compoundref="_alignment_8cpp" startline="140" endline="144">isStopButtonPressed</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="main_8cpp_1a7cb51f5c2b5cad3766f19eb69c92793b" compoundref="main_8cpp" startline="36" endline="39">yield</references>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceYloop</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceYloop</name>
        <qualifiedname>Alignment::MoveDistanceYloop</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="85" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="94" bodyend="108"/>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" compoundref="_alignment_8cpp" startline="140" endline="144">isStopButtonPressed</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="main_8cpp_1a7cb51f5c2b5cad3766f19eb69c92793b" compoundref="main_8cpp" startline="36" endline="39">yield</references>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceZloop</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceZloop</name>
        <qualifiedname>Alignment::MoveDistanceZloop</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="86" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="109" bodyend="123"/>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" compoundref="_alignment_8cpp" startline="140" endline="144">isStopButtonPressed</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="main_8cpp_1a7cb51f5c2b5cad3766f19eb69c92793b" compoundref="main_8cpp" startline="36" endline="39">yield</references>
        <referencedby refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" compoundref="_alignment_8cpp" startline="72" endline="77">MoveDistanceMSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a42ca106fc6688ad6f4e17685f9c07589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::RotateAnglePHloop</definition>
        <argsstring>(Nema8 *Mref, int direction, float angle)</argsstring>
        <name>RotateAnglePHloop</name>
        <qualifiedname>Alignment::RotateAnglePHloop</qualifiedname>
        <param>
          <type><ref refid="class_nema8" kindref="compound">Nema8</ref> *</type>
          <declname>Mref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="87" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="124" bodyend="137"/>
        <references refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" compoundref="_alignment_8cpp" startline="140" endline="144">isStopButtonPressed</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</references>
        <references refid="main_8cpp_1a7cb51f5c2b5cad3766f19eb69c92793b" compoundref="main_8cpp" startline="36" endline="39">yield</references>
        <referencedby refid="class_rotate_motor_clk_cmd_1a56a9f5b4304d8ead3ef66175f0134dc6" compoundref="_cmd_pattern_classes_8h" startline="300" endline="304">RotateMotorClkCmd::execute</referencedby>
        <referencedby refid="class_rotate_motor_cclk_cmd_1a9cd0bf2d88fd1cf6dc55eb09d13df733" compoundref="_cmd_pattern_classes_8h" startline="317" endline="321">RotateMotorCclkCmd::execute</referencedby>
        <referencedby refid="class_rotate_motor_clk_cmd_1a58d79afd386f2f2329bc4e9bb72d3ed5" compoundref="_cmd_pattern_classes_8h" startline="305" endline="308">RotateMotorClkCmd::undo</referencedby>
        <referencedby refid="class_rotate_motor_cclk_cmd_1a3f8d23a9165ff286158bec7c962edff5" compoundref="_cmd_pattern_classes_8h" startline="322" endline="325">RotateMotorCclkCmd::undo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::isStopButtonPressed</definition>
        <argsstring>()</argsstring>
        <name>isStopButtonPressed</name>
        <qualifiedname>Alignment::isStopButtonPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="88" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="140" bodyend="144"/>
        <references refid="class_alignment_1a064d13de8c775c7b63fa9a854bde3f1a" compoundref="_alignment_8hpp" startline="28">endSwitch_stop</references>
        <references refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" compoundref="_end_switch_8cpp" startline="28" endline="37">endSwitch::get_current_state</references>
        <referencedby refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" compoundref="_alignment_8cpp" startline="79" endline="93">MoveDistanceXloop</referencedby>
        <referencedby refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" compoundref="_alignment_8cpp" startline="94" endline="108">MoveDistanceYloop</referencedby>
        <referencedby refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" compoundref="_alignment_8cpp" startline="109" endline="123">MoveDistanceZloop</referencedby>
        <referencedby refid="class_alignment_1a42ca106fc6688ad6f4e17685f9c07589" compoundref="_alignment_8cpp" startline="124" endline="137">RotateAnglePHloop</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a5cc726da25a362e1312506703809c608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alignment::initFirmwareUnit</definition>
        <argsstring>()</argsstring>
        <name>initFirmwareUnit</name>
        <qualifiedname>Alignment::initFirmwareUnit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="89" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="146" bodyend="151"/>
        <references refid="class_alignment_1a8d94944e72243b20184157206984ac6d" compoundref="_alignment_8cpp" startline="1196" endline="1202">DisableAll</references>
        <references refid="class_alignment_1a0f1e1c3d11367c668db4f9f3553f8f5d">initSensors</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="classa4988_1af905ad2bb5a9e5465e83f081067a139c" compoundref="_driver_a4988_8cpp" startline="75" endline="78">a4988::setDelay</references>
        <references refid="_configs_8h_1a790b08a66883965c770333ecce9177cd" compoundref="_configs_8h" startline="32">STEP_DELAY_PRINTHEAD_MOTOR</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepOnceX</definition>
        <argsstring>(int direction)</argsstring>
        <name>StepOnceX</name>
        <qualifiedname>Alignment::StepOnceX</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="95" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="163" bodyend="168"/>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" compoundref="_alignment_8cpp" startline="266" endline="281">MoveAngleX</referencedby>
        <referencedby refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</referencedby>
        <referencedby refid="class_alignment_1af567addd1ef086c37b11a36f4199a47f" compoundref="_alignment_8cpp" startline="662" endline="668">StepDownXMax</referencedby>
        <referencedby refid="class_alignment_1af9dd2a0d59543d4418ed13e90cd54277" compoundref="_alignment_8cpp" startline="683" endline="689">StepUpXMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepOnceY</definition>
        <argsstring>(int direction)</argsstring>
        <name>StepOnceY</name>
        <qualifiedname>Alignment::StepOnceY</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="96" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="169" bodyend="174"/>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" compoundref="_alignment_8cpp" startline="282" endline="297">MoveAngleY</referencedby>
        <referencedby refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</referencedby>
        <referencedby refid="class_alignment_1ad40c3c9200a0909056d53f7403ed882e" compoundref="_alignment_8cpp" startline="669" endline="675">StepDownYMax</referencedby>
        <referencedby refid="class_alignment_1a1e97f98b33329f49c6c1976d38964101" compoundref="_alignment_8cpp" startline="690" endline="696">StepUpYMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4011b1521cc136081115518c677a455d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepOnceZ</definition>
        <argsstring>(int direction)</argsstring>
        <name>StepOnceZ</name>
        <qualifiedname>Alignment::StepOnceZ</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="97" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="175" bodyend="180"/>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" compoundref="_alignment_8cpp" startline="298" endline="313">MoveAngleZ</referencedby>
        <referencedby refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</referencedby>
        <referencedby refid="class_alignment_1aaa86c7ff58188ac84255e2450bd27b7b" compoundref="_alignment_8cpp" startline="676" endline="682">StepDownZMax</referencedby>
        <referencedby refid="class_alignment_1a9e8ccedc0f07184904e6878dfb991e65" compoundref="_alignment_8cpp" startline="697" endline="703">StepUpZMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceX</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceX</name>
        <qualifiedname>Alignment::MoveDistanceX</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="98" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="181" bodyend="205"/>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" compoundref="_alignment_8cpp" startline="257" endline="264">MoveDistanceAll</referencedby>
        <referencedby refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" compoundref="_alignment_8cpp" startline="79" endline="93">MoveDistanceXloop</referencedby>
        <referencedby refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" compoundref="_alignment_8cpp" startline="705" endline="727">MoveDistanceXSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceY</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceY</name>
        <qualifiedname>Alignment::MoveDistanceY</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="99" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="207" bodyend="231"/>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" compoundref="_alignment_8cpp" startline="257" endline="264">MoveDistanceAll</referencedby>
        <referencedby refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" compoundref="_alignment_8cpp" startline="94" endline="108">MoveDistanceYloop</referencedby>
        <referencedby refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" compoundref="_alignment_8cpp" startline="728" endline="752">MoveDistanceYSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceZ</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceZ</name>
        <qualifiedname>Alignment::MoveDistanceZ</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="100" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="232" bodyend="256"/>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" compoundref="_alignment_8cpp" startline="257" endline="264">MoveDistanceAll</referencedby>
        <referencedby refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" compoundref="_alignment_8cpp" startline="109" endline="123">MoveDistanceZloop</referencedby>
        <referencedby refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" compoundref="_alignment_8cpp" startline="753" endline="777">MoveDistanceZSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceAll</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceAll</name>
        <qualifiedname>Alignment::MoveDistanceAll</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="101" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="257" bodyend="264"/>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</references>
        <references refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</references>
        <references refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleX</definition>
        <argsstring>(int direction, float angle)</argsstring>
        <name>MoveAngleX</name>
        <qualifiedname>Alignment::MoveAngleX</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="103" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="266" bodyend="281"/>
        <references refid="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" compoundref="_alignment_8cpp" startline="414" endline="417">convertAngleToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
        <referencedby refid="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" compoundref="_alignment_8cpp" startline="314" endline="321">MoveAngleAll</referencedby>
        <referencedby refid="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" compoundref="_alignment_8cpp" startline="808" endline="832">MoveAngleXSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleY</definition>
        <argsstring>(int direction, float angle)</argsstring>
        <name>MoveAngleY</name>
        <qualifiedname>Alignment::MoveAngleY</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="104" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="282" bodyend="297"/>
        <references refid="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" compoundref="_alignment_8cpp" startline="414" endline="417">convertAngleToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
        <referencedby refid="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" compoundref="_alignment_8cpp" startline="314" endline="321">MoveAngleAll</referencedby>
        <referencedby refid="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" compoundref="_alignment_8cpp" startline="833" endline="857">MoveAngleYSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleZ</definition>
        <argsstring>(int direction, float angle)</argsstring>
        <name>MoveAngleZ</name>
        <qualifiedname>Alignment::MoveAngleZ</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="105" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="298" bodyend="313"/>
        <references refid="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" compoundref="_alignment_8cpp" startline="414" endline="417">convertAngleToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
        <referencedby refid="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" compoundref="_alignment_8cpp" startline="314" endline="321">MoveAngleAll</referencedby>
        <referencedby refid="class_alignment_1ace1287639428d2c45606677eb6287bc2" compoundref="_alignment_8cpp" startline="858" endline="882">MoveAngleZSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleAll</definition>
        <argsstring>(int direction, float angle)</argsstring>
        <name>MoveAngleAll</name>
        <qualifiedname>Alignment::MoveAngleAll</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="106" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="314" bodyend="321"/>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" compoundref="_alignment_8cpp" startline="266" endline="281">MoveAngleX</references>
        <references refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" compoundref="_alignment_8cpp" startline="282" endline="297">MoveAngleY</references>
        <references refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" compoundref="_alignment_8cpp" startline="298" endline="313">MoveAngleZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a3e235378adac9e2ffd3fa6a6d9e67534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Alignment::getValueSensorX</definition>
        <argsstring>()</argsstring>
        <name>getValueSensorX</name>
        <qualifiedname>Alignment::getValueSensorX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="108" column="19" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="323" bodyend="326"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <referencedby refid="class_alignment_1af6449fe438cdaeff341627ae30975a16" compoundref="_alignment_8cpp" startline="457" endline="460">getDistancePlatformToMlX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a3e2eb068cd046b322da4d4a6d8b24059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Alignment::getValueSensorY</definition>
        <argsstring>()</argsstring>
        <name>getValueSensorY</name>
        <qualifiedname>Alignment::getValueSensorY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="109" column="19" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="327" bodyend="330"/>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <referencedby refid="class_alignment_1a1c3d5514e6d018a7be4cb35fea59a13a" compoundref="_alignment_8cpp" startline="461" endline="464">getDistancePlatformToMlY</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9adb4c7efa88979fcca71e8c57b02528" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Alignment::getValueSensorZ</definition>
        <argsstring>()</argsstring>
        <name>getValueSensorZ</name>
        <qualifiedname>Alignment::getValueSensorZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="110" column="19" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="331" bodyend="334"/>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <referencedby refid="class_alignment_1a91d75f00c7849e32844279003a8d4072" compoundref="_alignment_8cpp" startline="465" endline="468">getDistancePlatformToMlZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a0973326d2762dd758eb1d7f6740b69f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingEndstopX</definition>
        <argsstring>()</argsstring>
        <name>getReadingEndstopX</name>
        <qualifiedname>Alignment::getReadingEndstopX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="111" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="336" bodyend="339"/>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" compoundref="_end_switch_8cpp" startline="28" endline="37">endSwitch::get_current_state</references>
        <referencedby refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a3fd39f62a10172bfd8c63e7cbf5983bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingEndstopY</definition>
        <argsstring>()</argsstring>
        <name>getReadingEndstopY</name>
        <qualifiedname>Alignment::getReadingEndstopY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="112" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="340" bodyend="343"/>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" compoundref="_end_switch_8cpp" startline="28" endline="37">endSwitch::get_current_state</references>
        <referencedby refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a54ac0ddea519c9c51c185a03174f643d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingEndstopZ</definition>
        <argsstring>()</argsstring>
        <name>getReadingEndstopZ</name>
        <qualifiedname>Alignment::getReadingEndstopZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="113" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="344" bodyend="347"/>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" compoundref="_end_switch_8cpp" startline="28" endline="37">endSwitch::get_current_state</references>
        <referencedby refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ad66e261f955a7ff82655ad9dc40511d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingLightBarrierX</definition>
        <argsstring>()</argsstring>
        <name>getReadingLightBarrierX</name>
        <qualifiedname>Alignment::getReadingLightBarrierX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="114" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="349" bodyend="352"/>
        <references refid="classlight_barrier_1a9f75c7d7640cf9aab7f67f1b16e27077" compoundref="light__barrier_8cpp" startline="28" endline="31">lightBarrier::get_current_state</references>
        <references refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" compoundref="_alignment_8hpp" startline="29">lightBarrier_x</references>
        <referencedby refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aac7394937e1dc058fb929abca3465dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingLightBarrierY</definition>
        <argsstring>()</argsstring>
        <name>getReadingLightBarrierY</name>
        <qualifiedname>Alignment::getReadingLightBarrierY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="115" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="353" bodyend="356"/>
        <references refid="classlight_barrier_1a9f75c7d7640cf9aab7f67f1b16e27077" compoundref="light__barrier_8cpp" startline="28" endline="31">lightBarrier::get_current_state</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <referencedby refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ad8475ba7636ed61ab7b3a70f54d5a26f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::getReadingLightBarrierZ</definition>
        <argsstring>()</argsstring>
        <name>getReadingLightBarrierZ</name>
        <qualifiedname>Alignment::getReadingLightBarrierZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="116" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="357" bodyend="360"/>
        <references refid="classlight_barrier_1a9f75c7d7640cf9aab7f67f1b16e27077" compoundref="light__barrier_8cpp" startline="28" endline="31">lightBarrier::get_current_state</references>
        <references refid="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" compoundref="_alignment_8hpp" startline="31">lightBarrier_z</references>
        <referencedby refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af8cef514867fa9f798efbb7788c27561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::GoToReferenceDown</definition>
        <argsstring>()</argsstring>
        <name>GoToReferenceDown</name>
        <qualifiedname>Alignment::GoToReferenceDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="118" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="406" bodyend="409"/>
        <references refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" compoundref="_alignment_8cpp" startline="1208" endline="1276">MoveHomeAll</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a757427c09a259dbce691c7b91bd46a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Alignment::convertDistanceToStepMicros</definition>
        <argsstring>(float distance)</argsstring>
        <name>convertDistanceToStepMicros</name>
        <qualifiedname>Alignment::convertDistanceToStepMicros</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="119" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="410" bodyend="413"/>
        <references refid="_configs_8h_1acba27573a33a062e331dd2a9d96f5e83" compoundref="_configs_8h" startline="136">Linear_travel_per_step</references>
        <references refid="_configs_8h_1af61ad80a87bf5d6a8bf698ad0d6b5d93" compoundref="_configs_8h" startline="148">MicroResolution</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Alignment::convertAngleToStep</definition>
        <argsstring>(float angle)</argsstring>
        <name>convertAngleToStep</name>
        <qualifiedname>Alignment::convertAngleToStep</qualifiedname>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="120" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="414" bodyend="417"/>
        <references refid="_configs_8h_1a6eb25972098f2e79011638673cfc3b47" compoundref="_configs_8h" startline="137">Angle_per_step</references>
        <referencedby refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" compoundref="_alignment_8cpp" startline="266" endline="281">MoveAngleX</referencedby>
        <referencedby refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" compoundref="_alignment_8cpp" startline="282" endline="297">MoveAngleY</referencedby>
        <referencedby refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" compoundref="_alignment_8cpp" startline="298" endline="313">MoveAngleZ</referencedby>
        <referencedby refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af792b2883cfa344c2ffbc1a2eff93499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePrintHeadToMl</definition>
        <argsstring>()</argsstring>
        <name>getDistancePrintHeadToMl</name>
        <qualifiedname>Alignment::getDistancePrintHeadToMl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="122" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="419" bodyend="427"/>
        <references refid="_configs_8h_1a12e9637e7fc0470224e0887d573c66e8" compoundref="_configs_8h" startline="142">DISTANCE_PRINTHEAD_PLATFORM</references>
        <references refid="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" compoundref="_alignment_8cpp" startline="469" endline="472">getDistancePlatformToMlXYZ</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4de5b7c33ac520e346a065e35338815b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePrintHeadToMlX</definition>
        <argsstring>()</argsstring>
        <name>getDistancePrintHeadToMlX</name>
        <qualifiedname>Alignment::getDistancePrintHeadToMlX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="123" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="429" bodyend="437"/>
        <references refid="_configs_8h_1a12e9637e7fc0470224e0887d573c66e8" compoundref="_configs_8h" startline="142">DISTANCE_PRINTHEAD_PLATFORM</references>
        <references refid="class_alignment_1af6449fe438cdaeff341627ae30975a16" compoundref="_alignment_8cpp" startline="457" endline="460">getDistancePlatformToMlX</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a83cdfe384f89d1dc391007f1acbc587d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePrintHeadToMlY</definition>
        <argsstring>()</argsstring>
        <name>getDistancePrintHeadToMlY</name>
        <qualifiedname>Alignment::getDistancePrintHeadToMlY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="124" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="438" bodyend="446"/>
        <references refid="_configs_8h_1a12e9637e7fc0470224e0887d573c66e8" compoundref="_configs_8h" startline="142">DISTANCE_PRINTHEAD_PLATFORM</references>
        <references refid="class_alignment_1a1c3d5514e6d018a7be4cb35fea59a13a" compoundref="_alignment_8cpp" startline="461" endline="464">getDistancePlatformToMlY</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a7def4b65d52dd42fe6a90fc70fd412d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePrintHeadToMlZ</definition>
        <argsstring>()</argsstring>
        <name>getDistancePrintHeadToMlZ</name>
        <qualifiedname>Alignment::getDistancePrintHeadToMlZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="125" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="447" bodyend="455"/>
        <references refid="_configs_8h_1a12e9637e7fc0470224e0887d573c66e8" compoundref="_configs_8h" startline="142">DISTANCE_PRINTHEAD_PLATFORM</references>
        <references refid="class_alignment_1a91d75f00c7849e32844279003a8d4072" compoundref="_alignment_8cpp" startline="465" endline="468">getDistancePlatformToMlZ</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af6449fe438cdaeff341627ae30975a16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePlatformToMlX</definition>
        <argsstring>()</argsstring>
        <name>getDistancePlatformToMlX</name>
        <qualifiedname>Alignment::getDistancePlatformToMlX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="126" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="457" bodyend="460"/>
        <references refid="class_alignment_1a3e235378adac9e2ffd3fa6a6d9e67534" compoundref="_alignment_8cpp" startline="323" endline="326">getValueSensorX</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" compoundref="_alignment_8cpp" startline="469" endline="472">getDistancePlatformToMlXYZ</referencedby>
        <referencedby refid="class_alignment_1a4de5b7c33ac520e346a065e35338815b" compoundref="_alignment_8cpp" startline="429" endline="437">getDistancePrintHeadToMlX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a1c3d5514e6d018a7be4cb35fea59a13a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePlatformToMlY</definition>
        <argsstring>()</argsstring>
        <name>getDistancePlatformToMlY</name>
        <qualifiedname>Alignment::getDistancePlatformToMlY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="127" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="461" bodyend="464"/>
        <references refid="class_alignment_1a3e2eb068cd046b322da4d4a6d8b24059" compoundref="_alignment_8cpp" startline="327" endline="330">getValueSensorY</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" compoundref="_alignment_8cpp" startline="469" endline="472">getDistancePlatformToMlXYZ</referencedby>
        <referencedby refid="class_alignment_1a83cdfe384f89d1dc391007f1acbc587d" compoundref="_alignment_8cpp" startline="438" endline="446">getDistancePrintHeadToMlY</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a91d75f00c7849e32844279003a8d4072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePlatformToMlZ</definition>
        <argsstring>()</argsstring>
        <name>getDistancePlatformToMlZ</name>
        <qualifiedname>Alignment::getDistancePlatformToMlZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="128" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="465" bodyend="468"/>
        <references refid="class_alignment_1a9adb4c7efa88979fcca71e8c57b02528" compoundref="_alignment_8cpp" startline="331" endline="334">getValueSensorZ</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" compoundref="_alignment_8cpp" startline="469" endline="472">getDistancePlatformToMlXYZ</referencedby>
        <referencedby refid="class_alignment_1a7def4b65d52dd42fe6a90fc70fd412d7" compoundref="_alignment_8cpp" startline="447" endline="455">getDistancePrintHeadToMlZ</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getDistancePlatformToMlXYZ</definition>
        <argsstring>()</argsstring>
        <name>getDistancePlatformToMlXYZ</name>
        <qualifiedname>Alignment::getDistancePlatformToMlXYZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="129" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="469" bodyend="472"/>
        <references refid="class_alignment_1af6449fe438cdaeff341627ae30975a16" compoundref="_alignment_8cpp" startline="457" endline="460">getDistancePlatformToMlX</references>
        <references refid="class_alignment_1a1c3d5514e6d018a7be4cb35fea59a13a" compoundref="_alignment_8cpp" startline="461" endline="464">getDistancePlatformToMlY</references>
        <references refid="class_alignment_1a91d75f00c7849e32844279003a8d4072" compoundref="_alignment_8cpp" startline="465" endline="468">getDistancePlatformToMlZ</references>
        <referencedby refid="class_alignment_1af792b2883cfa344c2ffbc1a2eff93499" compoundref="_alignment_8cpp" startline="419" endline="427">getDistancePrintHeadToMl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::GoToReferenceUp</definition>
        <argsstring>()</argsstring>
        <name>GoToReferenceUp</name>
        <qualifiedname>Alignment::GoToReferenceUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>go to ref up</para>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="130" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="473" bodyend="544"/>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="classlight_barrier_1a8c66abe8395b93c58d4d0e6876667835" compoundref="light__barrier_8hpp" startline="18">lightBarrier::IsTraversed</references>
        <references refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" compoundref="_alignment_8hpp" startline="29">lightBarrier_x</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <references refid="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" compoundref="_alignment_8hpp" startline="31">lightBarrier_z</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</references>
        <references refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</references>
        <references refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::calibratePrintHead</definition>
        <argsstring>()</argsstring>
        <name>calibratePrintHead</name>
        <qualifiedname>Alignment::calibratePrintHead</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>calibrate Print Head based on target distance @algorithm: get distance to ML on every Axis (X,Y,Z), move axis in respect to target distance to printhead ( deduced from another fucntion) until target distance is same on all axis <simplesect kind="return"><para>retVal</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="131" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="562" bodyend="659"/>
        <references refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</references>
        <references refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</references>
        <references refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</references>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="class_alignment_1a4de5b7c33ac520e346a065e35338815b" compoundref="_alignment_8cpp" startline="429" endline="437">getDistancePrintHeadToMlX</references>
        <references refid="class_alignment_1a83cdfe384f89d1dc391007f1acbc587d" compoundref="_alignment_8cpp" startline="438" endline="446">getDistancePrintHeadToMlY</references>
        <references refid="class_alignment_1a7def4b65d52dd42fe6a90fc70fd412d7" compoundref="_alignment_8cpp" startline="447" endline="455">getDistancePrintHeadToMlZ</references>
        <references refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" compoundref="_keyence___a_p_i_8cpp" startline="202" endline="259">Keyence_rs232_interface::getValueOutputHeadAll</references>
        <references refid="class_distance_sensor_1ac97d894ab1bbd43fd3e22c1fb7aa6585" compoundref="_distance_sensor_8hpp" startline="26">DistanceSensor::IkeyenceRS232</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
        <references refid="class_alignment_1a4b2493720baea6813b7a7903aed549c7" compoundref="_alignment_8hpp" startline="38">TargetDistancePHToMl</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <references refid="class_alignment_1a823a490beace9894af4600c3f7747446" compoundref="_alignment_8hpp" startline="63">XAligned</references>
        <references refid="class_alignment_1a6eb54776bebde131b223cb04442ca95c" compoundref="_alignment_8hpp" startline="63">YAligned</references>
        <references refid="class_alignment_1a36a613d094db5f895f03efce75aa1dc9" compoundref="_alignment_8hpp" startline="63">ZAligned</references>
        <referencedby refid="class_calibrate_cmd_1a9c979e62ff060e9218efe359812de2ea" compoundref="_cmd_pattern_classes_8h" startline="380" endline="384">CalibrateCmd::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitUpX</definition>
        <argsstring>()</argsstring>
        <name>checkLimitUpX</name>
        <qualifiedname>Alignment::checkLimitUpX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="132" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="363" bodyend="367"/>
        <references refid="class_alignment_1ad66e261f955a7ff82655ad9dc40511d4" compoundref="_alignment_8cpp" startline="349" endline="352">getReadingLightBarrierX</references>
        <references refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" compoundref="_alignment_8hpp" startline="29">lightBarrier_x</references>
        <references refid="classlight_barrier_1a74c6017b8039066c582d5541df43dbd9" compoundref="light__barrier_8hpp" startline="20">lightBarrier::TraversedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" compoundref="_alignment_8cpp" startline="378" endline="382">checkLimitUpXYZ</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" compoundref="_alignment_8cpp" startline="808" endline="832">MoveAngleXSafe</referencedby>
        <referencedby refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" compoundref="_alignment_8cpp" startline="79" endline="93">MoveDistanceXloop</referencedby>
        <referencedby refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" compoundref="_alignment_8cpp" startline="705" endline="727">MoveDistanceXSafe</referencedby>
        <referencedby refid="class_alignment_1af9dd2a0d59543d4418ed13e90cd54277" compoundref="_alignment_8cpp" startline="683" endline="689">StepUpXMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitUpY</definition>
        <argsstring>()</argsstring>
        <name>checkLimitUpY</name>
        <qualifiedname>Alignment::checkLimitUpY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="133" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="368" bodyend="372"/>
        <references refid="class_alignment_1aac7394937e1dc058fb929abca3465dd1" compoundref="_alignment_8cpp" startline="353" endline="356">getReadingLightBarrierY</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <references refid="classlight_barrier_1a74c6017b8039066c582d5541df43dbd9" compoundref="light__barrier_8hpp" startline="20">lightBarrier::TraversedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" compoundref="_alignment_8cpp" startline="378" endline="382">checkLimitUpXYZ</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" compoundref="_alignment_8cpp" startline="833" endline="857">MoveAngleYSafe</referencedby>
        <referencedby refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" compoundref="_alignment_8cpp" startline="94" endline="108">MoveDistanceYloop</referencedby>
        <referencedby refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" compoundref="_alignment_8cpp" startline="728" endline="752">MoveDistanceYSafe</referencedby>
        <referencedby refid="class_alignment_1a1e97f98b33329f49c6c1976d38964101" compoundref="_alignment_8cpp" startline="690" endline="696">StepUpYMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitUpZ</definition>
        <argsstring>()</argsstring>
        <name>checkLimitUpZ</name>
        <qualifiedname>Alignment::checkLimitUpZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="134" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="373" bodyend="377"/>
        <references refid="class_alignment_1ad8475ba7636ed61ab7b3a70f54d5a26f" compoundref="_alignment_8cpp" startline="357" endline="360">getReadingLightBarrierZ</references>
        <references refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" compoundref="_alignment_8hpp" startline="30">lightBarrier_y</references>
        <references refid="classlight_barrier_1a74c6017b8039066c582d5541df43dbd9" compoundref="light__barrier_8hpp" startline="20">lightBarrier::TraversedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" compoundref="_alignment_8cpp" startline="378" endline="382">checkLimitUpXYZ</referencedby>
        <referencedby refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" compoundref="_alignment_8cpp" startline="473" endline="544">GoToReferenceUp</referencedby>
        <referencedby refid="class_alignment_1ace1287639428d2c45606677eb6287bc2" compoundref="_alignment_8cpp" startline="858" endline="882">MoveAngleZSafe</referencedby>
        <referencedby refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" compoundref="_alignment_8cpp" startline="109" endline="123">MoveDistanceZloop</referencedby>
        <referencedby refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" compoundref="_alignment_8cpp" startline="753" endline="777">MoveDistanceZSafe</referencedby>
        <referencedby refid="class_alignment_1a9e8ccedc0f07184904e6878dfb991e65" compoundref="_alignment_8cpp" startline="697" endline="703">StepUpZMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitUpXYZ</definition>
        <argsstring>()</argsstring>
        <name>checkLimitUpXYZ</name>
        <qualifiedname>Alignment::checkLimitUpXYZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="135" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="378" bodyend="382"/>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitDownX</definition>
        <argsstring>()</argsstring>
        <name>checkLimitDownX</name>
        <qualifiedname>Alignment::checkLimitDownX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="136" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="384" bodyend="388"/>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="class_alignment_1a0973326d2762dd758eb1d7f6740b69f5" compoundref="_alignment_8cpp" startline="336" endline="339">getReadingEndstopX</references>
        <references refid="classend_switch_1add742dd51c36b16fecc6421341bf1949" compoundref="_end_switch_8hpp" startline="21">endSwitch::PressedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" compoundref="_alignment_8cpp" startline="399" endline="403">checkLimitDownXYZ</referencedby>
        <referencedby refid="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" compoundref="_alignment_8cpp" startline="808" endline="832">MoveAngleXSafe</referencedby>
        <referencedby refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" compoundref="_alignment_8cpp" startline="705" endline="727">MoveDistanceXSafe</referencedby>
        <referencedby refid="class_alignment_1af567addd1ef086c37b11a36f4199a47f" compoundref="_alignment_8cpp" startline="662" endline="668">StepDownXMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitDownY</definition>
        <argsstring>()</argsstring>
        <name>checkLimitDownY</name>
        <qualifiedname>Alignment::checkLimitDownY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="137" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="389" bodyend="393"/>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="class_alignment_1a3fd39f62a10172bfd8c63e7cbf5983bd" compoundref="_alignment_8cpp" startline="340" endline="343">getReadingEndstopY</references>
        <references refid="classend_switch_1add742dd51c36b16fecc6421341bf1949" compoundref="_end_switch_8hpp" startline="21">endSwitch::PressedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" compoundref="_alignment_8cpp" startline="399" endline="403">checkLimitDownXYZ</referencedby>
        <referencedby refid="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" compoundref="_alignment_8cpp" startline="833" endline="857">MoveAngleYSafe</referencedby>
        <referencedby refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" compoundref="_alignment_8cpp" startline="728" endline="752">MoveDistanceYSafe</referencedby>
        <referencedby refid="class_alignment_1ad40c3c9200a0909056d53f7403ed882e" compoundref="_alignment_8cpp" startline="669" endline="675">StepDownYMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af0794341994b69753b31b5665ab56c34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitDownZ</definition>
        <argsstring>()</argsstring>
        <name>checkLimitDownZ</name>
        <qualifiedname>Alignment::checkLimitDownZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="138" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="394" bodyend="398"/>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="class_alignment_1a54ac0ddea519c9c51c185a03174f643d" compoundref="_alignment_8cpp" startline="344" endline="347">getReadingEndstopZ</references>
        <references refid="classend_switch_1add742dd51c36b16fecc6421341bf1949" compoundref="_end_switch_8hpp" startline="21">endSwitch::PressedState</references>
        <referencedby refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" compoundref="_alignment_8cpp" startline="562" endline="659">calibratePrintHead</referencedby>
        <referencedby refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" compoundref="_alignment_8cpp" startline="399" endline="403">checkLimitDownXYZ</referencedby>
        <referencedby refid="class_alignment_1ace1287639428d2c45606677eb6287bc2" compoundref="_alignment_8cpp" startline="858" endline="882">MoveAngleZSafe</referencedby>
        <referencedby refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" compoundref="_alignment_8cpp" startline="753" endline="777">MoveDistanceZSafe</referencedby>
        <referencedby refid="class_alignment_1aaa86c7ff58188ac84255e2450bd27b7b" compoundref="_alignment_8cpp" startline="676" endline="682">StepDownZMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alignment::checkLimitDownXYZ</definition>
        <argsstring>()</argsstring>
        <name>checkLimitDownXYZ</name>
        <qualifiedname>Alignment::checkLimitDownXYZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="139" column="17" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="399" bodyend="403"/>
        <references refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</references>
        <references refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</references>
        <references refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</references>
        <referencedby refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" compoundref="_alignment_8cpp" startline="883" endline="911">MoveAngleAllSafe</referencedby>
        <referencedby refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" compoundref="_alignment_8cpp" startline="778" endline="806">MoveDistanceAllSafe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af567addd1ef086c37b11a36f4199a47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepDownXMax</definition>
        <argsstring>()</argsstring>
        <name>StepDownXMax</name>
        <qualifiedname>Alignment::StepDownXMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="140" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="662" bodyend="668"/>
        <references refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ad40c3c9200a0909056d53f7403ed882e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepDownYMax</definition>
        <argsstring>()</argsstring>
        <name>StepDownYMax</name>
        <qualifiedname>Alignment::StepDownYMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="141" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="669" bodyend="675"/>
        <references refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aaa86c7ff58188ac84255e2450bd27b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepDownZMax</definition>
        <argsstring>()</argsstring>
        <name>StepDownZMax</name>
        <qualifiedname>Alignment::StepDownZMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="142" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="676" bodyend="682"/>
        <references refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af9dd2a0d59543d4418ed13e90cd54277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepUpXMax</definition>
        <argsstring>()</argsstring>
        <name>StepUpXMax</name>
        <qualifiedname>Alignment::StepUpXMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="143" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="683" bodyend="689"/>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" compoundref="_alignment_8cpp" startline="163" endline="168">StepOnceX</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a1e97f98b33329f49c6c1976d38964101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepUpYMax</definition>
        <argsstring>()</argsstring>
        <name>StepUpYMax</name>
        <qualifiedname>Alignment::StepUpYMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="144" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="690" bodyend="696"/>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" compoundref="_alignment_8cpp" startline="169" endline="174">StepOnceY</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9e8ccedc0f07184904e6878dfb991e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepUpZMax</definition>
        <argsstring>()</argsstring>
        <name>StepUpZMax</name>
        <qualifiedname>Alignment::StepUpZMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="145" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="697" bodyend="703"/>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a4011b1521cc136081115518c677a455d" compoundref="_alignment_8cpp" startline="175" endline="180">StepOnceZ</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a01a1103e23dd986877681907d20cc1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceXSafe</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceXSafe</name>
        <qualifiedname>Alignment::MoveDistanceXSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="147" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="705" bodyend="727"/>
        <references refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</references>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <referencedby refid="class_alignment_1a579959f28393df8251df1bd2b8137984" compoundref="_alignment_8cpp" startline="971" endline="1166">oscillateSys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceYSafe</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceYSafe</name>
        <qualifiedname>Alignment::MoveDistanceYSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="148" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="728" bodyend="752"/>
        <references refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</references>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <referencedby refid="class_alignment_1a579959f28393df8251df1bd2b8137984" compoundref="_alignment_8cpp" startline="971" endline="1166">oscillateSys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceZSafe</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceZSafe</name>
        <qualifiedname>Alignment::MoveDistanceZSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="149" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="753" bodyend="777"/>
        <references refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</references>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <referencedby refid="class_alignment_1a579959f28393df8251df1bd2b8137984" compoundref="_alignment_8cpp" startline="971" endline="1166">oscillateSys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDistanceAllSafe</definition>
        <argsstring>(int direction, float distance)</argsstring>
        <name>MoveDistanceAllSafe</name>
        <qualifiedname>Alignment::MoveDistanceAllSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="150" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="778" bodyend="806"/>
        <references refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" compoundref="_alignment_8cpp" startline="399" endline="403">checkLimitDownXYZ</references>
        <references refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" compoundref="_alignment_8cpp" startline="378" endline="382">checkLimitUpXYZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" compoundref="_alignment_8cpp" startline="257" endline="264">MoveDistanceAll</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleXSafe</definition>
        <argsstring>(int direction, float Angle)</argsstring>
        <name>MoveAngleXSafe</name>
        <qualifiedname>Alignment::MoveAngleXSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="152" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="808" bodyend="832"/>
        <references refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" compoundref="_alignment_8cpp" startline="384" endline="388">checkLimitDownX</references>
        <references refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" compoundref="_alignment_8cpp" startline="363" endline="367">checkLimitUpX</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" compoundref="_alignment_8cpp" startline="266" endline="281">MoveAngleX</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleYSafe</definition>
        <argsstring>(int direction, float Angle)</argsstring>
        <name>MoveAngleYSafe</name>
        <qualifiedname>Alignment::MoveAngleYSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="153" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="833" bodyend="857"/>
        <references refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" compoundref="_alignment_8cpp" startline="389" endline="393">checkLimitDownY</references>
        <references refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" compoundref="_alignment_8cpp" startline="368" endline="372">checkLimitUpY</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" compoundref="_alignment_8cpp" startline="282" endline="297">MoveAngleY</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ace1287639428d2c45606677eb6287bc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleZSafe</definition>
        <argsstring>(int direction, float Angle)</argsstring>
        <name>MoveAngleZSafe</name>
        <qualifiedname>Alignment::MoveAngleZSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="154" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="858" bodyend="882"/>
        <references refid="class_alignment_1af0794341994b69753b31b5665ab56c34" compoundref="_alignment_8cpp" startline="394" endline="398">checkLimitDownZ</references>
        <references refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" compoundref="_alignment_8cpp" startline="373" endline="377">checkLimitUpZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" compoundref="_alignment_8cpp" startline="298" endline="313">MoveAngleZ</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveAngleAllSafe</definition>
        <argsstring>(int direction, float Angle)</argsstring>
        <name>MoveAngleAllSafe</name>
        <qualifiedname>Alignment::MoveAngleAllSafe</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="155" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="883" bodyend="911"/>
        <references refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" compoundref="_alignment_8cpp" startline="399" endline="403">checkLimitDownXYZ</references>
        <references refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" compoundref="_alignment_8cpp" startline="378" endline="382">checkLimitUpXYZ</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" compoundref="_alignment_8cpp" startline="314" endline="321">MoveAngleAll</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a7a971878b2e1c3234429fce2d8baa454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::StepOncePH</definition>
        <argsstring>(int direction)</argsstring>
        <name>StepOncePH</name>
        <qualifiedname>Alignment::StepOncePH</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="157" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="914" bodyend="919"/>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <referencedby refid="class_alignment_1a579959f28393df8251df1bd2b8137984" compoundref="_alignment_8cpp" startline="971" endline="1166">oscillateSys</referencedby>
        <referencedby refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ab0c766640e611118a13e1a59314e991e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::rotateFullRevPH</definition>
        <argsstring>(int direction)</argsstring>
        <name>rotateFullRevPH</name>
        <qualifiedname>Alignment::rotateFullRevPH</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="158" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="920" bodyend="923"/>
        <references refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::rotateAnglePH</definition>
        <argsstring>(int direction, float Angle)</argsstring>
        <name>rotateAnglePH</name>
        <qualifiedname>Alignment::rotateAnglePH</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="159" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="924" bodyend="946"/>
        <references refid="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" compoundref="_alignment_8cpp" startline="414" endline="417">convertAngleToStep</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="class_alignment_1a7a971878b2e1c3234429fce2d8baa454" compoundref="_alignment_8cpp" startline="914" endline="919">StepOncePH</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <referencedby refid="class_alignment_1ab5378ab4e1db1bd90dc0ed3854079a4c" compoundref="_alignment_8cpp" startline="949" endline="969">movePhToRefX</referencedby>
        <referencedby refid="class_alignment_1a42ca106fc6688ad6f4e17685f9c07589" compoundref="_alignment_8cpp" startline="124" endline="137">RotateAnglePHloop</referencedby>
        <referencedby refid="class_alignment_1ab0c766640e611118a13e1a59314e991e" compoundref="_alignment_8cpp" startline="920" endline="923">rotateFullRevPH</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a579959f28393df8251df1bd2b8137984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::oscillateSys</definition>
        <argsstring>(float desired_angle, int num_revolutions, bool default_sens=clk, bool reverse_sense=true)</argsstring>
        <name>oscillateSys</name>
        <qualifiedname>Alignment::oscillateSys</qualifiedname>
        <param>
          <type>float</type>
          <declname>desired_angle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_revolutions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>default_sens</declname>
          <defval><ref refid="_configs_8h_1ae4a6a5757fdb3dd50355cea42bab342c" kindref="member">clk</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse_sense</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="161" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="971" bodyend="1166"/>
        <references refid="_configs_8h_1a6eb25972098f2e79011638673cfc3b47" compoundref="_configs_8h" startline="137">Angle_per_step</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" compoundref="_alignment_8cpp" startline="705" endline="727">MoveDistanceXSafe</references>
        <references refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" compoundref="_alignment_8cpp" startline="728" endline="752">MoveDistanceYSafe</references>
        <references refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" compoundref="_alignment_8cpp" startline="753" endline="777">MoveDistanceZSafe</references>
        <references refid="class_alignment_1a7a971878b2e1c3234429fce2d8baa454" compoundref="_alignment_8cpp" startline="914" endline="919">StepOncePH</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ab5378ab4e1db1bd90dc0ed3854079a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::movePhToRefX</definition>
        <argsstring>()</argsstring>
        <name>movePhToRefX</name>
        <qualifiedname>Alignment::movePhToRefX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="162" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="949" bodyend="969"/>
        <references refid="classa4988_1a5acf890c4f8a6998d24b0693dd10cd9a" compoundref="_driver_a4988_8hpp" startline="59">a4988::direction</references>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" compoundref="_keyence___a_p_i_8cpp" startline="202" endline="259">Keyence_rs232_interface::getValueOutputHeadAll</references>
        <references refid="class_distance_sensor_1ac97d894ab1bbd43fd3e22c1fb7aa6585" compoundref="_distance_sensor_8hpp" startline="26">DistanceSensor::IkeyenceRS232</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" compoundref="_alignment_8cpp" startline="924" endline="946">rotateAnglePH</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a0f1e1c3d11367c668db4f9f3553f8f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::initSensors</definition>
        <argsstring>()</argsstring>
        <name>initSensors</name>
        <qualifiedname>Alignment::initSensors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="164" column="12"/>
        <referencedby refid="class_alignment_1a5cc726da25a362e1312506703809c608" compoundref="_alignment_8cpp" startline="146" endline="151">initFirmwareUnit</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a23c457adf671d3113fe80733bc726e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alignment::incrementTotalStepCounted</definition>
        <argsstring>()</argsstring>
        <name>incrementTotalStepCounted</name>
        <qualifiedname>Alignment::incrementTotalStepCounted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="166" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="546" bodyend="552"/>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a54e8fdfb336ca187d816f71afc482889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alignment::resetStepCounter</definition>
        <argsstring>()</argsstring>
        <name>resetStepCounter</name>
        <qualifiedname>Alignment::resetStepCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="168" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="554" bodyend="561"/>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="classa4988_1a58dce61bc6613bc5e7bd5cb77a3abaf8" compoundref="_driver_a4988_8hpp" startline="74">a4988::StepCounter</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a4ce0756a95f2b8cbf5511c6ff5b3d095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getCurrentPosX</definition>
        <argsstring>()</argsstring>
        <name>getCurrentPosX</name>
        <qualifiedname>Alignment::getCurrentPosX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="180" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1770" bodyend="1774"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
        <referencedby refid="class_alignment_1a668b9598d17990bcb2132444d44d7cde" compoundref="_alignment_8cpp" startline="1786" endline="1808">CheckBoundaryX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ad5e4bba6bb06a18a2f6e9b07bf6dfc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getCurrentPosY</definition>
        <argsstring>()</argsstring>
        <name>getCurrentPosY</name>
        <qualifiedname>Alignment::getCurrentPosY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="181" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1775" bodyend="1779"/>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a7129f8f955b8f6b6ceeb4531a1dd2950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getCurrentPosZ</definition>
        <argsstring>()</argsstring>
        <name>getCurrentPosZ</name>
        <qualifiedname>Alignment::getCurrentPosZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="182" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1780" bodyend="1784"/>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a668b9598d17990bcb2132444d44d7cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::CheckBoundaryX</definition>
        <argsstring>(float targetDistance, int direction)</argsstring>
        <name>CheckBoundaryX</name>
        <qualifiedname>Alignment::CheckBoundaryX</qualifiedname>
        <param>
          <type>float</type>
          <declname>targetDistance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="183" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1786" bodyend="1808"/>
        <references refid="_configs_8h_1ad26bd3059b83a3b0cfa6df25ac328bc8" compoundref="_configs_8h" startline="145">AllowedPath</references>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a4ce0756a95f2b8cbf5511c6ff5b3d095" compoundref="_alignment_8cpp" startline="1770" endline="1774">getCurrentPosX</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="classa4988_1ad66dadbb79c22bc3f507fe6d624c9fec" compoundref="_driver_a4988_8cpp" startline="117" endline="124">a4988::step</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::InitAlign</definition>
        <argsstring>(bool enable=on)</argsstring>
        <name>InitAlign</name>
        <qualifiedname>Alignment::InitAlign</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval><ref refid="_configs_8h_1a42cc7dae7a40abcb545fc41730fa1476" kindref="member">on</ref></defval>
        </param>
        <briefdescription>
<para>setup stuff to initialise enable, direction and so on </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>retVal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="188" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1182" bodyend="1188"/>
        <references refid="classa4988_1ad61ff3ecdea7afe55a30edf31f1e0323" compoundref="_driver_a4988_8cpp" startline="69" endline="72">a4988::enable</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::EnableAll</definition>
        <argsstring>(bool enable=on)</argsstring>
        <name>EnableAll</name>
        <qualifiedname>Alignment::EnableAll</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval><ref refid="_configs_8h_1a42cc7dae7a40abcb545fc41730fa1476" kindref="member">on</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="189" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1189" bodyend="1195"/>
        <references refid="classa4988_1ad61ff3ecdea7afe55a30edf31f1e0323" compoundref="_driver_a4988_8cpp" startline="69" endline="72">a4988::enable</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8d94944e72243b20184157206984ac6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::DisableAll</definition>
        <argsstring>(bool enable=off)</argsstring>
        <name>DisableAll</name>
        <qualifiedname>Alignment::DisableAll</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval><ref refid="_configs_8h_1aa8df4166084b06f1e80d3510e5dcf7e1" kindref="member">off</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="190" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1196" bodyend="1202"/>
        <references refid="classa4988_1ad61ff3ecdea7afe55a30edf31f1e0323" compoundref="_driver_a4988_8cpp" startline="69" endline="72">a4988::enable</references>
        <references refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" compoundref="_alignment_8hpp" startline="24">Motor_PrintHead</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <referencedby refid="class_alignment_1a5cc726da25a362e1312506703809c608" compoundref="_alignment_8cpp" startline="146" endline="151">initFirmwareUnit</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveHomeAll</definition>
        <argsstring>()</argsstring>
        <name>MoveHomeAll</name>
        <qualifiedname>Alignment::MoveHomeAll</qualifiedname>
        <briefdescription>
<para>Move all motors home @algorithm: check if every motor endswitch is not pressed, then move <ref refid="class_nema8" kindref="compound">Nema8</ref> up. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>retVal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>: move all motor down to ref</para>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="191" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1208" bodyend="1276"/>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a91f199d88034ab646d037e362921998f" compoundref="_alignment_8hpp" startline="25">endSwitch_x</references>
        <references refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" compoundref="_alignment_8hpp" startline="26">endSwitch_y</references>
        <references refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" compoundref="_alignment_8hpp" startline="27">endSwitch_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" compoundref="_end_switch_8cpp" startline="28" endline="37">endSwitch::get_current_state</references>
        <references refid="classend_switch_1a0f7fef40aacacc061e2ef40a86c798c8" compoundref="_end_switch_8hpp" startline="19">endSwitch::Ispressed</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="classend_switch_1add742dd51c36b16fecc6421341bf1949" compoundref="_end_switch_8hpp" startline="21">endSwitch::PressedState</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="classa4988_1a3b6a16a6b8162c6a3ba164fedeef0fb7" compoundref="_driver_a4988_8hpp" startline="76">a4988::TotalStepCounted</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <referencedby refid="class_alignment_1af8cef514867fa9f798efbb7788c27561" compoundref="_alignment_8cpp" startline="406" endline="409">GoToReferenceDown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::AlignLoop</definition>
        <argsstring>()</argsstring>
        <name>AlignLoop</name>
        <qualifiedname>Alignment::AlignLoop</qualifiedname>
        <briefdescription>
<para>This is the main function to keep track of alignment during process @algorithm: compare value of distance sensor for each motor with target and calibrate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>retVal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TODO_:Better for loop for each Motor</para>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="192" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1282" bodyend="1381"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ac16f69770bf5601fbace0a55304daa99" compoundref="_configs_8h" startline="153">err</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" compoundref="_keyence___a_p_i_8cpp" startline="202" endline="259">Keyence_rs232_interface::getValueOutputHeadAll</references>
        <references refid="class_distance_sensor_1ac97d894ab1bbd43fd3e22c1fb7aa6585" compoundref="_distance_sensor_8hpp" startline="26">DistanceSensor::IkeyenceRS232</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="class_alignment_1ab80d1f8535037116d0a86121f8436bf2" compoundref="_alignment_8hpp" startline="39">TargetDistanceSensorToMl</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <references refid="class_alignment_1a823a490beace9894af4600c3f7747446" compoundref="_alignment_8hpp" startline="63">XAligned</references>
        <references refid="class_alignment_1a6eb54776bebde131b223cb04442ca95c" compoundref="_alignment_8hpp" startline="63">YAligned</references>
        <references refid="class_alignment_1a36a613d094db5f895f03efce75aa1dc9" compoundref="_alignment_8hpp" startline="63">ZAligned</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a1485eb9145464fdbd9739de9977a196e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getRemainingDistanceX</definition>
        <argsstring>()</argsstring>
        <name>getRemainingDistanceX</name>
        <qualifiedname>Alignment::getRemainingDistanceX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="193" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1717" bodyend="1723"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a2a1c2efba6ebe26730bf78649ad982db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getRemainingDistanceY</definition>
        <argsstring>()</argsstring>
        <name>getRemainingDistanceY</name>
        <qualifiedname>Alignment::getRemainingDistanceY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="194" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1710" bodyend="1716"/>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a8e672d92ef34e5e3fab4cae4d8b8f4cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getRemainingDistanceZ</definition>
        <argsstring>()</argsstring>
        <name>getRemainingDistanceZ</name>
        <qualifiedname>Alignment::getRemainingDistanceZ</qualifiedname>
        <briefdescription>
<para>get the real distance based on mechanical construction in this setup </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="195" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1702" bodyend="1708"/>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="_configs_8h_1a91738b0db53cce48e643a66273a65ccd" compoundref="_configs_8h" startline="139">EndeffectorThickness</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a140cf22ef1c062dde45dbffa9a0fefbf" compoundref="_configs_8h" startline="140">RodLength</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMinX</definition>
        <argsstring>()</argsstring>
        <name>getMinX</name>
        <qualifiedname>Alignment::getMinX</qualifiedname>
        <briefdescription>
<para>get mesured values minus thickness of sensor: equal to 0 position </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="196" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1729" bodyend="1734"/>
        <references refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" compoundref="_alignment_8hpp" startline="32">DistanceM_x</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
        <referencedby refid="class_alignment_1af8ef3602f329c6422f25760fa874696f" compoundref="_alignment_8cpp" startline="1750" endline="1754">getMaxX</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMinY</definition>
        <argsstring>()</argsstring>
        <name>getMinY</name>
        <qualifiedname>Alignment::getMinY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="197" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1736" bodyend="1741"/>
        <references refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" compoundref="_alignment_8hpp" startline="33">DistanceM_y</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
        <referencedby refid="class_alignment_1a1489ef1736f929042f8a94d4d3c35cbb" compoundref="_alignment_8cpp" startline="1756" endline="1760">getMaxY</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMinZ</definition>
        <argsstring>()</argsstring>
        <name>getMinZ</name>
        <qualifiedname>Alignment::getMinZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="198" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1743" bodyend="1748"/>
        <references refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" compoundref="_alignment_8hpp" startline="34">DistanceM_z</references>
        <references refid="class_distance_sensor_1a1b5434dd7b12183ded0962f6e42a8f8d" compoundref="_distance_sensor_8cpp" startline="44" endline="69">DistanceSensor::getCurrentDistance</references>
        <references refid="_configs_8h_1a00bda082c545ccfafdb2afd9d920d9d1" compoundref="_configs_8h" startline="144">SensorThickness</references>
        <referencedby refid="class_alignment_1a29664935789dedc1275aec828ccd3ef9" compoundref="_alignment_8cpp" startline="1762" endline="1766">getMaxZ</referencedby>
        <referencedby refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" compoundref="_alignment_8cpp" startline="1461" endline="1540">MoveDown</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1af8ef3602f329c6422f25760fa874696f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMaxX</definition>
        <argsstring>()</argsstring>
        <name>getMaxX</name>
        <qualifiedname>Alignment::getMaxX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="199" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1750" bodyend="1754"/>
        <references refid="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" compoundref="_alignment_8cpp" startline="1729" endline="1734">getMinX</references>
        <references refid="_configs_8h_1ad4f9d9e94e32385ec6ac4aedc3cbb742" compoundref="_configs_8h" startline="135">LeadScrewLEngth</references>
        <references refid="_configs_8h_1a9ad1383635556487437e57e484e1eed4" compoundref="_configs_8h" startline="134">MotorLength</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a1489ef1736f929042f8a94d4d3c35cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMaxY</definition>
        <argsstring>()</argsstring>
        <name>getMaxY</name>
        <qualifiedname>Alignment::getMaxY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="200" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1756" bodyend="1760"/>
        <references refid="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" compoundref="_alignment_8cpp" startline="1736" endline="1741">getMinY</references>
        <references refid="_configs_8h_1ad4f9d9e94e32385ec6ac4aedc3cbb742" compoundref="_configs_8h" startline="135">LeadScrewLEngth</references>
        <references refid="_configs_8h_1a9ad1383635556487437e57e484e1eed4" compoundref="_configs_8h" startline="134">MotorLength</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a29664935789dedc1275aec828ccd3ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Alignment::getMaxZ</definition>
        <argsstring>()</argsstring>
        <name>getMaxZ</name>
        <qualifiedname>Alignment::getMaxZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="201" column="11" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1762" bodyend="1766"/>
        <references refid="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" compoundref="_alignment_8cpp" startline="1743" endline="1748">getMinZ</references>
        <references refid="_configs_8h_1ad4f9d9e94e32385ec6ac4aedc3cbb742" compoundref="_configs_8h" startline="135">LeadScrewLEngth</references>
        <references refid="_configs_8h_1a9ad1383635556487437e57e484e1eed4" compoundref="_configs_8h" startline="134">MotorLength</references>
        <references refid="_configs_8h_1a49cb17effaef8574de543a27392406ff" compoundref="_configs_8h" startline="141">MotorSensorHolderThickness</references>
        <referencedby refid="class_alignment_1abd04781467254f18f9c29e78941355b3" compoundref="_alignment_8cpp" startline="1384" endline="1460">MoveUp</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1abd04781467254f18f9c29e78941355b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveUp</definition>
        <argsstring>(bool x, bool y, bool z, bool checkLimit)</argsstring>
        <name>MoveUp</name>
        <qualifiedname>Alignment::MoveUp</qualifiedname>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="202" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1384" bodyend="1460"/>
        <references refid="class_alignment_1a020e2e3168adea3c1748f8519d858466" compoundref="_alignment_8hpp" startline="50">allUpMax</references>
        <references refid="class_alignment_1af8ef3602f329c6422f25760fa874696f" compoundref="_alignment_8cpp" startline="1750" endline="1754">getMaxX</references>
        <references refid="class_alignment_1a1489ef1736f929042f8a94d4d3c35cbb" compoundref="_alignment_8cpp" startline="1756" endline="1760">getMaxY</references>
        <references refid="class_alignment_1a29664935789dedc1275aec828ccd3ef9" compoundref="_alignment_8cpp" startline="1762" endline="1766">getMaxZ</references>
        <references refid="_configs_8h_1ad4f9d9e94e32385ec6ac4aedc3cbb742" compoundref="_configs_8h" startline="135">LeadScrewLEngth</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a35154810bebaf3c424300febabbb7bcf" compoundref="_configs_8h" startline="146">RodLength_EndeffectorThickness</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <references refid="class_alignment_1a4950411fd5a2a8d6b576f72c545c63fd" compoundref="_alignment_8hpp" startline="51">xUpMax</references>
        <references refid="class_alignment_1a6f2d3872a6b87b249f47d4bd4507e8bc" compoundref="_alignment_8hpp" startline="52">yUpMax</references>
        <references refid="class_alignment_1a95ebab1e6078bd65bdedfe4eb29dfb8c" compoundref="_alignment_8hpp" startline="53">zUpMax</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDown</definition>
        <argsstring>(bool x, bool y, bool z, bool checkLimit)</argsstring>
        <name>MoveDown</name>
        <qualifiedname>Alignment::MoveDown</qualifiedname>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="203" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1461" bodyend="1540"/>
        <references refid="class_alignment_1ae7c51051725c6b8e664520fbaa91ecad" compoundref="_alignment_8hpp" startline="46">allDownMax</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" compoundref="_alignment_8cpp" startline="1729" endline="1734">getMinX</references>
        <references refid="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" compoundref="_alignment_8cpp" startline="1736" endline="1741">getMinY</references>
        <references refid="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" compoundref="_alignment_8cpp" startline="1743" endline="1748">getMinZ</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a35154810bebaf3c424300febabbb7bcf" compoundref="_configs_8h" startline="146">RodLength_EndeffectorThickness</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="class_alignment_1a17f1f93ac35dac591ed757b11410d585" compoundref="_alignment_8hpp" startline="47">xDownMax</references>
        <references refid="class_alignment_1adbc990948f9388f2812fe23056fcffdc" compoundref="_alignment_8hpp" startline="48">yDownMax</references>
        <references refid="class_alignment_1ac48d8b33eca9abe68e29b0ba14ba7cd7" compoundref="_alignment_8hpp" startline="49">zDownMax</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a83588502ba1f7a06b1b9376d65223685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveUpTo</definition>
        <argsstring>(bool x, bool y, bool z, bool checkLimit, float distance)</argsstring>
        <name>MoveUpTo</name>
        <qualifiedname>Alignment::MoveUpTo</qualifiedname>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkLimit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="204" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1542" bodyend="1618"/>
        <references refid="class_alignment_1a07ddf895fd58066aa53924a118e3f9f6" compoundref="_alignment_8hpp" startline="57">allUpDistanceArrived</references>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="class_alignment_1af8ef3602f329c6422f25760fa874696f" compoundref="_alignment_8cpp" startline="1750" endline="1754">getMaxX</references>
        <references refid="class_alignment_1a1489ef1736f929042f8a94d4d3c35cbb" compoundref="_alignment_8cpp" startline="1756" endline="1760">getMaxY</references>
        <references refid="class_alignment_1a29664935789dedc1275aec828ccd3ef9" compoundref="_alignment_8cpp" startline="1762" endline="1766">getMaxZ</references>
        <references refid="_configs_8h_1ad4f9d9e94e32385ec6ac4aedc3cbb742" compoundref="_configs_8h" startline="135">LeadScrewLEngth</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a35154810bebaf3c424300febabbb7bcf" compoundref="_configs_8h" startline="146">RodLength_EndeffectorThickness</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1ad66dadbb79c22bc3f507fe6d624c9fec" compoundref="_driver_a4988_8cpp" startline="117" endline="124">a4988::step</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="_configs_8h_1a0337592b74197133c4203f6dce657a76" compoundref="_configs_8h" startline="103">up</references>
        <references refid="class_alignment_1abc4879d71a306310d6204f05bd87b6a0" compoundref="_alignment_8hpp" startline="54">xUpDistanceArrived</references>
        <references refid="class_alignment_1a65b4fe89adf15ded764b816987073109" compoundref="_alignment_8hpp" startline="55">yUpDistanceArrived</references>
        <references refid="class_alignment_1a602b18d1b538c84f3f08cbcd79f708ab" compoundref="_alignment_8hpp" startline="56">zUpDistanceArrived</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a02c85b7369d6366477d23c910e966991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::MoveDownTo</definition>
        <argsstring>(bool x, bool y, bool z, bool checkLimit, float distance)</argsstring>
        <name>MoveDownTo</name>
        <qualifiedname>Alignment::MoveDownTo</qualifiedname>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkLimit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="205" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1619" bodyend="1696"/>
        <references refid="class_alignment_1ab9aec297532b4d70b1c6e835a05b5b0e" compoundref="_alignment_8hpp" startline="61">allDownDistanceArrived</references>
        <references refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" compoundref="_alignment_8cpp" startline="1817" endline="1819">ConvertDistanceToStep</references>
        <references refid="_configs_8h_1a249d857dfa044493c7f29844b7b0baae" compoundref="_configs_8h" startline="104">down</references>
        <references refid="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" compoundref="_alignment_8cpp" startline="1729" endline="1734">getMinX</references>
        <references refid="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" compoundref="_alignment_8cpp" startline="1736" endline="1741">getMinY</references>
        <references refid="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" compoundref="_alignment_8cpp" startline="1743" endline="1748">getMinZ</references>
        <references refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" compoundref="_alignment_8hpp" startline="21">Motor_x</references>
        <references refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" compoundref="_alignment_8hpp" startline="22">Motor_y</references>
        <references refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" compoundref="_alignment_8hpp" startline="23">Motor_z</references>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="_configs_8h_1a35154810bebaf3c424300febabbb7bcf" compoundref="_configs_8h" startline="146">RodLength_EndeffectorThickness</references>
        <references refid="_configs_8h_1a066c71e9cc633358392c38ad2ddb5596" compoundref="_configs_8h" startline="143">SensorThreashold</references>
        <references refid="classa4988_1a6a37cf937b1f7a1f229904cdb9191b89" compoundref="_driver_a4988_8cpp" startline="91" endline="103">a4988::setDirection</references>
        <references refid="classa4988_1ad66dadbb79c22bc3f507fe6d624c9fec" compoundref="_driver_a4988_8cpp" startline="117" endline="124">a4988::step</references>
        <references refid="classa4988_1a2074f2e3fe7cd79e402f53a14ba68c89" compoundref="_driver_a4988_8cpp" startline="106" endline="114">a4988::stepOnce</references>
        <references refid="class_alignment_1ac4f9226904b8cadabf0e9a4216f2fc89" compoundref="_alignment_8hpp" startline="58">xDownDistanceArrived</references>
        <references refid="class_alignment_1a69d1bca030eb1ec158ad27512f504eaa" compoundref="_alignment_8hpp" startline="59">yDownDistanceArrived</references>
        <references refid="class_alignment_1a58b5967e6ab6b6f015eb68aa33626aab" compoundref="_alignment_8hpp" startline="60">zDownDistanceArrived</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1a9f3eee5f60bc1591e1895d7c4cd7c410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::setTargetDistancePHToML</definition>
        <argsstring>(float distance)</argsstring>
        <name>setTargetDistancePHToML</name>
        <qualifiedname>Alignment::setTargetDistancePHToML</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>set new target distance to ML </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>retVal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="206" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1825" bodyend="1832"/>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1a4b2493720baea6813b7a7903aed549c7" compoundref="_alignment_8hpp" startline="38">TargetDistancePHToMl</references>
        <referencedby refid="class_calibrate_cmd_1a9c979e62ff060e9218efe359812de2ea" compoundref="_cmd_pattern_classes_8h" startline="380" endline="384">CalibrateCmd::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ac8054a4a002284fae13081f16d3cee65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00" kindref="member">retVal</ref></type>
        <definition>retVal Alignment::setTargetDistanceSensorToML</definition>
        <argsstring>(float distance)</argsstring>
        <name>setTargetDistanceSensorToML</name>
        <qualifiedname>Alignment::setTargetDistanceSensorToML</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="207" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1833" bodyend="1840"/>
        <references refid="_configs_8h_1a93061f874d9c692900fb2616502f4b00ad8b76af209cd7ba83b4ebf33ba1637b2" compoundref="_configs_8h" startline="152">ok</references>
        <references refid="class_alignment_1ab80d1f8535037116d0a86121f8436bf2" compoundref="_alignment_8hpp" startline="39">TargetDistanceSensorToMl</references>
      </memberdef>
      <memberdef kind="function" id="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Alignment::ConvertDistanceToStep</definition>
        <argsstring>(float distance)</argsstring>
        <name>ConvertDistanceToStep</name>
        <qualifiedname>Alignment::ConvertDistanceToStep</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>convert distance in mm or µm to step or microstep </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="208" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Alignment.cpp" bodystart="1817" bodyend="1819"/>
        <references refid="_configs_8h_1acba27573a33a062e331dd2a9d96f5e83" compoundref="_configs_8h" startline="136">Linear_travel_per_step</references>
        <referencedby refid="class_alignment_1a668b9598d17990bcb2132444d44d7cde" compoundref="_alignment_8cpp" startline="1786" endline="1808">CheckBoundaryX</referencedby>
        <referencedby refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" compoundref="_alignment_8cpp" startline="181" endline="205">MoveDistanceX</referencedby>
        <referencedby refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" compoundref="_alignment_8cpp" startline="207" endline="231">MoveDistanceY</referencedby>
        <referencedby refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" compoundref="_alignment_8cpp" startline="232" endline="256">MoveDistanceZ</referencedby>
        <referencedby refid="class_alignment_1a02c85b7369d6366477d23c910e966991" compoundref="_alignment_8cpp" startline="1619" endline="1696">MoveDownTo</referencedby>
        <referencedby refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" compoundref="_alignment_8cpp" startline="1542" endline="1618">MoveUpTo</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Alignment</label>
        <link refid="class_alignment"/>
      </node>
      <node id="2">
        <label>FirmwareUnit</label>
        <link refid="class_firmware_unit"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Alignment</label>
        <link refid="class_alignment"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Motor_PrintHead</edgelabel>
          <edgelabel>Motor_x</edgelabel>
          <edgelabel>Motor_y</edgelabel>
          <edgelabel>Motor_z</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>endSwitch_stop</edgelabel>
          <edgelabel>endSwitch_x</edgelabel>
          <edgelabel>endSwitch_y</edgelabel>
          <edgelabel>endSwitch_z</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>lightBarrier_x</edgelabel>
          <edgelabel>lightBarrier_y</edgelabel>
          <edgelabel>lightBarrier_z</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>DistanceM_x</edgelabel>
          <edgelabel>DistanceM_y</edgelabel>
          <edgelabel>DistanceM_z</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>DistanceSensor</label>
        <link refid="class_distance_sensor"/>
        <childnode refid="7" relation="usage">
          <edgelabel>IkeyenceRS232</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>Kbase</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Keyence_base</label>
        <link refid="class_keyence__base"/>
      </node>
      <node id="7">
        <label>Keyence_rs232_interface</label>
        <link refid="class_keyence__rs232__interface"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Nema8</label>
        <link refid="class_nema8"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>a4988</label>
        <link refid="classa4988"/>
      </node>
      <node id="4">
        <label>endSwitch</label>
        <link refid="classend_switch"/>
      </node>
      <node id="5">
        <label>lightBarrier</label>
        <link refid="classlight_barrier"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" line="19" column="1" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Alignment.hpp" bodystart="19" bodyend="209"/>
    <listofallmembers>
      <member refid="class_alignment_1a3adb6cbe96e306b14b89c2e5156795b5" prot="public" virt="non-virtual"><scope>Alignment</scope><name>aligned</name></member>
      <member refid="class_alignment_1a0625570440d38f62bca91c8d5a3cb3eb" prot="public" virt="non-virtual"><scope>Alignment</scope><name>AlignLoop</name></member>
      <member refid="class_alignment_1aa2a11fdea7b6994bcbe5625772ef1843" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Alignment</name></member>
      <member refid="class_alignment_1a45e393c9b79186c8a9e2464a7e62c3f6" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Alignment</name></member>
      <member refid="class_alignment_1a95391c1741e07d4c91435e5d4ed44e4f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Alignment</name></member>
      <member refid="class_alignment_1ab9aec297532b4d70b1c6e835a05b5b0e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>allDownDistanceArrived</name></member>
      <member refid="class_alignment_1ae7c51051725c6b8e664520fbaa91ecad" prot="public" virt="non-virtual"><scope>Alignment</scope><name>allDownMax</name></member>
      <member refid="class_alignment_1a07ddf895fd58066aa53924a118e3f9f6" prot="public" virt="non-virtual"><scope>Alignment</scope><name>allUpDistanceArrived</name></member>
      <member refid="class_alignment_1a020e2e3168adea3c1748f8519d858466" prot="public" virt="non-virtual"><scope>Alignment</scope><name>allUpMax</name></member>
      <member refid="class_alignment_1aa10c40160fe39fa263b12f0e07d4f67c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>calibratePrintHead</name></member>
      <member refid="class_alignment_1a668b9598d17990bcb2132444d44d7cde" prot="public" virt="non-virtual"><scope>Alignment</scope><name>CheckBoundaryX</name></member>
      <member refid="class_alignment_1a5aab206d9d1e56c22b43e42f95014062" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitDownX</name></member>
      <member refid="class_alignment_1a8a526f1604f016f821fb17c914fb6c9c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitDownXYZ</name></member>
      <member refid="class_alignment_1a9ed6e9c6e5387111a33d892e9406a4f7" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitDownY</name></member>
      <member refid="class_alignment_1af0794341994b69753b31b5665ab56c34" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitDownZ</name></member>
      <member refid="class_alignment_1a2440f9acebf113fad04bb77d2c0b9e6e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitUpX</name></member>
      <member refid="class_alignment_1ab41a2d0326f4644e98d055badbe19d5d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitUpXYZ</name></member>
      <member refid="class_alignment_1a29a09538dce5388b0873b131ea2f66a7" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitUpY</name></member>
      <member refid="class_alignment_1aee871f24d8dc408d22c9e9b139e02daa" prot="public" virt="non-virtual"><scope>Alignment</scope><name>checkLimitUpZ</name></member>
      <member refid="class_alignment_1a8d96b0353f5ca2de6a01c562347e7f6a" prot="public" virt="non-virtual"><scope>Alignment</scope><name>convertAngleToStep</name></member>
      <member refid="class_alignment_1ac8aa65bdcfb551bb996ac59ee8d8db3d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>ConvertDistanceToStep</name></member>
      <member refid="class_alignment_1a757427c09a259dbce691c7b91bd46a5e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>convertDistanceToStepMicros</name></member>
      <member refid="class_alignment_1a8d94944e72243b20184157206984ac6d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>DisableAll</name></member>
      <member refid="class_alignment_1ade9bdf7a323597c4e6012fe0b6e0ff12" prot="public" virt="non-virtual"><scope>Alignment</scope><name>DistanceM_x</name></member>
      <member refid="class_alignment_1ae48c99c465830ad4218d9969dc073372" prot="public" virt="non-virtual"><scope>Alignment</scope><name>DistanceM_y</name></member>
      <member refid="class_alignment_1a5420c8ac11245cdd84994197382e5b21" prot="public" virt="non-virtual"><scope>Alignment</scope><name>DistanceM_z</name></member>
      <member refid="class_alignment_1adb8005a2b09b2a08bd618eba4b64ccc5" prot="public" virt="non-virtual"><scope>Alignment</scope><name>EnableAll</name></member>
      <member refid="class_alignment_1a064d13de8c775c7b63fa9a854bde3f1a" prot="public" virt="non-virtual"><scope>Alignment</scope><name>endSwitch_stop</name></member>
      <member refid="class_alignment_1a91f199d88034ab646d037e362921998f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>endSwitch_x</name></member>
      <member refid="class_alignment_1a12a51fc0b7ca663f5c595564dddffdfa" prot="public" virt="non-virtual"><scope>Alignment</scope><name>endSwitch_y</name></member>
      <member refid="class_alignment_1ad765e3454ed5e893007595790ef850ca" prot="public" virt="non-virtual"><scope>Alignment</scope><name>endSwitch_z</name></member>
      <member refid="class_alignment_1a4ce0756a95f2b8cbf5511c6ff5b3d095" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getCurrentPosX</name></member>
      <member refid="class_alignment_1ad5e4bba6bb06a18a2f6e9b07bf6dfc70" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getCurrentPosY</name></member>
      <member refid="class_alignment_1a7129f8f955b8f6b6ceeb4531a1dd2950" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getCurrentPosZ</name></member>
      <member refid="class_alignment_1af6449fe438cdaeff341627ae30975a16" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePlatformToMlX</name></member>
      <member refid="class_alignment_1af716860e0718d4e9fab63d347f0fe7e2" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePlatformToMlXYZ</name></member>
      <member refid="class_alignment_1a1c3d5514e6d018a7be4cb35fea59a13a" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePlatformToMlY</name></member>
      <member refid="class_alignment_1a91d75f00c7849e32844279003a8d4072" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePlatformToMlZ</name></member>
      <member refid="class_alignment_1af792b2883cfa344c2ffbc1a2eff93499" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePrintHeadToMl</name></member>
      <member refid="class_alignment_1a4de5b7c33ac520e346a065e35338815b" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePrintHeadToMlX</name></member>
      <member refid="class_alignment_1a83cdfe384f89d1dc391007f1acbc587d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePrintHeadToMlY</name></member>
      <member refid="class_alignment_1a7def4b65d52dd42fe6a90fc70fd412d7" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getDistancePrintHeadToMlZ</name></member>
      <member refid="class_alignment_1af8ef3602f329c6422f25760fa874696f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMaxX</name></member>
      <member refid="class_alignment_1a1489ef1736f929042f8a94d4d3c35cbb" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMaxY</name></member>
      <member refid="class_alignment_1a29664935789dedc1275aec828ccd3ef9" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMaxZ</name></member>
      <member refid="class_alignment_1a96e67d40338632e2a6c4ad46fcbab196" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMinX</name></member>
      <member refid="class_alignment_1afd11bcb71a14ef4bce94da2f6d256a55" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMinY</name></member>
      <member refid="class_alignment_1ae48f4e3dce19e74b11592103a3eda27c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getMinZ</name></member>
      <member refid="class_alignment_1a0973326d2762dd758eb1d7f6740b69f5" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingEndstopX</name></member>
      <member refid="class_alignment_1a3fd39f62a10172bfd8c63e7cbf5983bd" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingEndstopY</name></member>
      <member refid="class_alignment_1a54ac0ddea519c9c51c185a03174f643d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingEndstopZ</name></member>
      <member refid="class_alignment_1ad66e261f955a7ff82655ad9dc40511d4" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingLightBarrierX</name></member>
      <member refid="class_alignment_1aac7394937e1dc058fb929abca3465dd1" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingLightBarrierY</name></member>
      <member refid="class_alignment_1ad8475ba7636ed61ab7b3a70f54d5a26f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getReadingLightBarrierZ</name></member>
      <member refid="class_alignment_1a1485eb9145464fdbd9739de9977a196e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getRemainingDistanceX</name></member>
      <member refid="class_alignment_1a2a1c2efba6ebe26730bf78649ad982db" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getRemainingDistanceY</name></member>
      <member refid="class_alignment_1a8e672d92ef34e5e3fab4cae4d8b8f4cf" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getRemainingDistanceZ</name></member>
      <member refid="class_alignment_1a3e235378adac9e2ffd3fa6a6d9e67534" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getValueSensorX</name></member>
      <member refid="class_alignment_1a3e2eb068cd046b322da4d4a6d8b24059" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getValueSensorY</name></member>
      <member refid="class_alignment_1a9adb4c7efa88979fcca71e8c57b02528" prot="public" virt="non-virtual"><scope>Alignment</scope><name>getValueSensorZ</name></member>
      <member refid="class_alignment_1af8cef514867fa9f798efbb7788c27561" prot="public" virt="non-virtual"><scope>Alignment</scope><name>GoToReferenceDown</name></member>
      <member refid="class_alignment_1a624dd240b0142db6b9c4e10ca1475246" prot="public" virt="non-virtual"><scope>Alignment</scope><name>GoToReferenceUp</name></member>
      <member refid="class_alignment_1a8c429a0bde39f3aeb0716688343d8407" prot="public" virt="non-virtual"><scope>Alignment</scope><name>homed</name></member>
      <member refid="class_alignment_1a23c457adf671d3113fe80733bc726e12" prot="public" virt="non-virtual"><scope>Alignment</scope><name>incrementTotalStepCounted</name></member>
      <member refid="class_alignment_1ae0fcf4e983882fae40ac8c4494dbf7b0" prot="public" virt="non-virtual"><scope>Alignment</scope><name>InitAlign</name></member>
      <member refid="class_alignment_1a5cc726da25a362e1312506703809c608" prot="public" virt="non-virtual"><scope>Alignment</scope><name>initFirmwareUnit</name></member>
      <member refid="class_alignment_1a0f1e1c3d11367c668db4f9f3553f8f5d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>initSensors</name></member>
      <member refid="class_alignment_1adcc6aceb95f7f9c40463009ea686b25e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>isStopButtonPressed</name></member>
      <member refid="class_alignment_1aa38477e0eca08bd3cb407bc4de345343" prot="public" virt="non-virtual"><scope>Alignment</scope><name>lightBarrier_x</name></member>
      <member refid="class_alignment_1a134e3a8e765c40a5466381e6d1941c9c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>lightBarrier_y</name></member>
      <member refid="class_alignment_1ad218024648a032d6e97133bc2ca3d6b6" prot="public" virt="non-virtual"><scope>Alignment</scope><name>lightBarrier_z</name></member>
      <member refid="class_alignment_1afad0188cf4e9df73809ed1eec1c419a4" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MaxDistanceToMl</name></member>
      <member refid="class_alignment_1a51100f220f7e987aa37d1a4f43332111" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MinDistanceToML</name></member>
      <member refid="class_alignment_1a1670266fe11fc62edfdac779742f94e8" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Motor_PrintHead</name></member>
      <member refid="class_alignment_1ad85229a057de3aabd68187e69f6ffbd1" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Motor_x</name></member>
      <member refid="class_alignment_1a9f283802f29f7ab8055b5a4ee5c48d41" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Motor_y</name></member>
      <member refid="class_alignment_1ae363694f1cc3dbf5b350d20aa6d9c915" prot="public" virt="non-virtual"><scope>Alignment</scope><name>Motor_z</name></member>
      <member refid="class_alignment_1ae074cb8d75f0d9de31b552842acc96ed" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleAll</name></member>
      <member refid="class_alignment_1a97f0c9cbacf45c6a73e4535db0c55d43" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleAllSafe</name></member>
      <member refid="class_alignment_1a4a58c2a272b49f6cb794f3766d10f712" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleX</name></member>
      <member refid="class_alignment_1ab8c075766ec6ff9b8f66ade49139879d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleXSafe</name></member>
      <member refid="class_alignment_1a128ba6db0f413f23c78b222ba98bda4c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleY</name></member>
      <member refid="class_alignment_1a050f3ae23879c74437bfe3a82bc3a432" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleYSafe</name></member>
      <member refid="class_alignment_1a00909c4e7791e7a3c98c6022e7239ff1" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleZ</name></member>
      <member refid="class_alignment_1ace1287639428d2c45606677eb6287bc2" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveAngleZSafe</name></member>
      <member refid="class_alignment_1a5b07a13524b1d7919aaa09837254ca01" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceAll</name></member>
      <member refid="class_alignment_1a4cacf6c33dbaec2e424f752f678aeaa9" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceAllSafe</name></member>
      <member refid="class_alignment_1ab7e9da9ded962b937b7df23e116f3b0e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceMSafe</name></member>
      <member refid="class_alignment_1a9a308ec9c53310e89e79b84c5274fa6c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceX</name></member>
      <member refid="class_alignment_1aea699b9dbfd70c662031b7c5e60acd7f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceXloop</name></member>
      <member refid="class_alignment_1a01a1103e23dd986877681907d20cc1f8" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceXSafe</name></member>
      <member refid="class_alignment_1a04e9899bf752e59d8f69ba2df62dbf62" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceY</name></member>
      <member refid="class_alignment_1a4b02693ded07e1e0975e21fcae48b22b" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceYloop</name></member>
      <member refid="class_alignment_1abbd45543d5f6dcdaf88633fcade036bf" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceYSafe</name></member>
      <member refid="class_alignment_1a24e83e729b3b6b9d5c9fee02a42e26cb" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceZ</name></member>
      <member refid="class_alignment_1a934a3a3bb589ce0bf137f4d7230d5f9c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceZloop</name></member>
      <member refid="class_alignment_1ade2162aba2ca25114a6edefcbbb0ea94" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDistanceZSafe</name></member>
      <member refid="class_alignment_1a9ee2f855eaef73efc23e402fe350affe" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDown</name></member>
      <member refid="class_alignment_1a02c85b7369d6366477d23c910e966991" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveDownTo</name></member>
      <member refid="class_alignment_1aebf2eaacef3587f39e049941e7bc2a4d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveHomeAll</name></member>
      <member refid="class_alignment_1ab5378ab4e1db1bd90dc0ed3854079a4c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>movePhToRefX</name></member>
      <member refid="class_alignment_1abd04781467254f18f9c29e78941355b3" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveUp</name></member>
      <member refid="class_alignment_1a83588502ba1f7a06b1b9376d65223685" prot="public" virt="non-virtual"><scope>Alignment</scope><name>MoveUpTo</name></member>
      <member refid="class_alignment_1ad7c7f7334cba06913bbe10d457a95f09" prot="public" virt="non-virtual"><scope>Alignment</scope><name>NumOfCycles</name></member>
      <member refid="class_alignment_1a579959f28393df8251df1bd2b8137984" prot="public" virt="non-virtual"><scope>Alignment</scope><name>oscillateSys</name></member>
      <member refid="class_alignment_1a54e8fdfb336ca187d816f71afc482889" prot="public" virt="non-virtual"><scope>Alignment</scope><name>resetStepCounter</name></member>
      <member refid="class_alignment_1a8a71770c29f90dbf22dd7818c5108f00" prot="public" virt="non-virtual"><scope>Alignment</scope><name>rotateAnglePH</name></member>
      <member refid="class_alignment_1a42ca106fc6688ad6f4e17685f9c07589" prot="public" virt="non-virtual"><scope>Alignment</scope><name>RotateAnglePHloop</name></member>
      <member refid="class_alignment_1ab0c766640e611118a13e1a59314e991e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>rotateFullRevPH</name></member>
      <member refid="class_alignment_1a9f3eee5f60bc1591e1895d7c4cd7c410" prot="public" virt="non-virtual"><scope>Alignment</scope><name>setTargetDistancePHToML</name></member>
      <member refid="class_alignment_1ac8054a4a002284fae13081f16d3cee65" prot="public" virt="non-virtual"><scope>Alignment</scope><name>setTargetDistanceSensorToML</name></member>
      <member refid="class_alignment_1af567addd1ef086c37b11a36f4199a47f" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepDownXMax</name></member>
      <member refid="class_alignment_1ad40c3c9200a0909056d53f7403ed882e" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepDownYMax</name></member>
      <member refid="class_alignment_1aaa86c7ff58188ac84255e2450bd27b7b" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepDownZMax</name></member>
      <member refid="class_alignment_1a7a971878b2e1c3234429fce2d8baa454" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepOncePH</name></member>
      <member refid="class_alignment_1ac82e5ad8712ea3408ec29899202cae65" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepOnceX</name></member>
      <member refid="class_alignment_1a8aa856f47fad52fd553f0d933edcb23b" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepOnceY</name></member>
      <member refid="class_alignment_1a4011b1521cc136081115518c677a455d" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepOnceZ</name></member>
      <member refid="class_alignment_1af9dd2a0d59543d4418ed13e90cd54277" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepUpXMax</name></member>
      <member refid="class_alignment_1a1e97f98b33329f49c6c1976d38964101" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepUpYMax</name></member>
      <member refid="class_alignment_1a9e8ccedc0f07184904e6878dfb991e65" prot="public" virt="non-virtual"><scope>Alignment</scope><name>StepUpZMax</name></member>
      <member refid="class_alignment_1a4b2493720baea6813b7a7903aed549c7" prot="public" virt="non-virtual"><scope>Alignment</scope><name>TargetDistancePHToMl</name></member>
      <member refid="class_alignment_1ab80d1f8535037116d0a86121f8436bf2" prot="public" virt="non-virtual"><scope>Alignment</scope><name>TargetDistanceSensorToMl</name></member>
      <member refid="class_alignment_1a823a490beace9894af4600c3f7747446" prot="public" virt="non-virtual"><scope>Alignment</scope><name>XAligned</name></member>
      <member refid="class_alignment_1ac4f9226904b8cadabf0e9a4216f2fc89" prot="public" virt="non-virtual"><scope>Alignment</scope><name>xDownDistanceArrived</name></member>
      <member refid="class_alignment_1a17f1f93ac35dac591ed757b11410d585" prot="public" virt="non-virtual"><scope>Alignment</scope><name>xDownMax</name></member>
      <member refid="class_alignment_1abc4879d71a306310d6204f05bd87b6a0" prot="public" virt="non-virtual"><scope>Alignment</scope><name>xUpDistanceArrived</name></member>
      <member refid="class_alignment_1a4950411fd5a2a8d6b576f72c545c63fd" prot="public" virt="non-virtual"><scope>Alignment</scope><name>xUpMax</name></member>
      <member refid="class_alignment_1a6eb54776bebde131b223cb04442ca95c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>YAligned</name></member>
      <member refid="class_alignment_1a69d1bca030eb1ec158ad27512f504eaa" prot="public" virt="non-virtual"><scope>Alignment</scope><name>yDownDistanceArrived</name></member>
      <member refid="class_alignment_1adbc990948f9388f2812fe23056fcffdc" prot="public" virt="non-virtual"><scope>Alignment</scope><name>yDownMax</name></member>
      <member refid="class_alignment_1a65b4fe89adf15ded764b816987073109" prot="public" virt="non-virtual"><scope>Alignment</scope><name>yUpDistanceArrived</name></member>
      <member refid="class_alignment_1a6f2d3872a6b87b249f47d4bd4507e8bc" prot="public" virt="non-virtual"><scope>Alignment</scope><name>yUpMax</name></member>
      <member refid="class_alignment_1a36a613d094db5f895f03efce75aa1dc9" prot="public" virt="non-virtual"><scope>Alignment</scope><name>ZAligned</name></member>
      <member refid="class_alignment_1a58b5967e6ab6b6f015eb68aa33626aab" prot="public" virt="non-virtual"><scope>Alignment</scope><name>zDownDistanceArrived</name></member>
      <member refid="class_alignment_1ac48d8b33eca9abe68e29b0ba14ba7cd7" prot="public" virt="non-virtual"><scope>Alignment</scope><name>zDownMax</name></member>
      <member refid="class_alignment_1a602b18d1b538c84f3f08cbcd79f708ab" prot="public" virt="non-virtual"><scope>Alignment</scope><name>zUpDistanceArrived</name></member>
      <member refid="class_alignment_1a95ebab1e6078bd65bdedfe4eb29dfb8c" prot="public" virt="non-virtual"><scope>Alignment</scope><name>zUpMax</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
