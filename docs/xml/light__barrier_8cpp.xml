<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="light__barrier_8cpp" kind="file" language="C++">
    <compoundname>light_barrier.cpp</compoundname>
    <includes refid="light__barrier_8hpp" local="yes">light_barrier.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>ArduinoSTL.h</label>
      </node>
      <node id="2">
        <label>light_barrier.hpp</label>
        <link refid="light__barrier_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/light_barrier.cpp</label>
        <link refid="light__barrier_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>sami dhiab (<ulink url="mailto:sami@theion.de">sami@theion.de</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-02-11</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="light__barrier_8hpp" kindref="compound">light_barrier.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classlight_barrier_1a89cd452d9687398612660afcf5ed186b" refkind="member"><highlight class="normal"><ref refid="classlight_barrier_1abe3b51968b52630bda53cebcb6f74b69" kindref="member">lightBarrier::lightBarrier</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TraversedState){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;TraversedState=<ref refid="classlight_barrier_1a74c6017b8039066c582d5541df43dbd9" kindref="member">TraversedState</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Pin=<ref refid="classlight_barrier_1aa575efa3d00382a47849d323fba08637" kindref="member">Pin</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="classlight_barrier_1aa575efa3d00382a47849d323fba08637" kindref="member">Pin</ref>,<sp/>INPUT_PULLUP);<sp/></highlight><highlight class="comment">//the<sp/>input<sp/>pin<sp/>to<sp/>mcu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28" refid="classlight_barrier_1a9f75c7d7640cf9aab7f67f1b16e27077" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlight_barrier_1a9f75c7d7640cf9aab7f67f1b16e27077" kindref="member">lightBarrier::get_current_state</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digitalRead(<ref refid="classlight_barrier_1aa575efa3d00382a47849d323fba08637" kindref="member">Pin</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/light_barrier.cpp"/>
  </compounddef>
</doxygen>
