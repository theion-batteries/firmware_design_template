<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_keyence___a_p_i_8cpp" kind="file" language="C++">
    <compoundname>Keyence_API.cpp</compoundname>
    <includes refid="_keyence___a_p_i_8h" local="yes">Keyence_API.h</includes>
    <incdepgraph>
      <node id="3">
        <label>ArduinoSTL.h</label>
      </node>
      <node id="5">
        <label>Configs.h</label>
        <link refid="_configs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Keyence_API.h</label>
        <link refid="_keyence___a_p_i_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Keyence_API.cpp</label>
        <link refid="_keyence___a_p_i_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>map</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_keyence___a_p_i_8h" kindref="compound">Keyence_API.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//keyence<sp/>base<sp/>class<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" kindref="member">Keyence_base::HeadsCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::vector&lt;int&gt;<sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">Keyence_base::NumUsedHeads</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">Keyence_base::HeadsArray</ref>[12];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__base_1a3b9220df65b8fcc3acdb16dca31272a5" kindref="member">Keyence_base::LookUpValues</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<ref refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" kindref="member">Keyence_base::HeadsCount</ref>]{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>list<sp/>heads<sp/>availble</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_keyence__base_1a054bc92a833cb7d11ee3144e587ec672" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a054bc92a833cb7d11ee3144e587ec672" kindref="member">Keyence_base::listHeads</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__base_1a5b9de50cb4430de65267b5aacdb1bda5" kindref="member">transformArrayToVector</ref>(<ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>,<sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>.resize(<ref refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" kindref="member">HeadsCount</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(&quot;listing<sp/>heads<sp/>in<sp/>vector<sp/>container&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>loop<sp/>using<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>.empty())</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;int&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;next<sp/>head<sp/>number:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(*it);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;empty<sp/>heads<sp/>container&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//commands<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>method<sp/>to<sp/>retrieve<sp/>commands<sp/>from<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" refkind="member"><highlight class="normal">String<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">Keyence_base::findCommand</ref>(String&amp;<sp/>command,<sp/>std::map&lt;String,<sp/>String&gt;&amp;<sp/>CommandMap)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>CommandMap.begin();<sp/>it<sp/>!=<sp/>CommandMap.end();<sp/>++it)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).first<sp/>==<sp/>command)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keyence<sp/>rs232<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//constructor:<sp/>take<sp/>a<sp/>serial<sp/>handler<sp/>and<sp/>baudrate<sp/>by<sp/>default<sp/>defined<sp/>in<sp/>config<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_keyence__rs232__interface_1a7c4e926bb32658c80ca277032f2b6ab3" refkind="member"><highlight class="normal"><ref refid="class_keyence__rs232__interface_1a7c4e926bb32658c80ca277032f2b6ab3" kindref="member">Keyence_rs232_interface::Keyence_rs232_interface</ref>(HardwareSerial&amp;<sp/>serHandler<sp/>=<sp/><ref refid="_configs_8h_1a005a72831297d00f495e084eb64a5bed" kindref="member">KEYENCE_SERIAL_HANDLER</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baud<sp/>=<sp/><ref refid="_configs_8h_1ac5512a940a57198b0d9b9f2e366c7ee8" kindref="member">KEYENCE_SERIAL_BAUDRATE</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref><sp/>=<sp/>&amp;serHandler;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_keyence__rs232__interface_1a64dd14bd7eb46191aeda572d048b2b49" kindref="member">baudrate</ref><sp/>=<sp/>baud;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>serial<sp/>handler<sp/>is<sp/>changed<sp/>dynamicly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_keyence__rs232__interface_1ad32645333a71b52bad892dfd45b8d930" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1ad32645333a71b52bad892dfd45b8d930" kindref="member">Keyence_rs232_interface::setSerialHandler</ref>(HardwareSerial&amp;<sp/>serHandler)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref><sp/>=<sp/>&amp;serHandler;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>baudrate<sp/>is<sp/>changed<sp/>dynamicly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_keyence__rs232__interface_1a5e4e89b0e72492942b3dbfe59d1c4a8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a5e4e89b0e72492942b3dbfe59d1c4a8d" kindref="member">Keyence_rs232_interface::setSerialBaudrate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baud)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_keyence__rs232__interface_1a64dd14bd7eb46191aeda572d048b2b49" kindref="member">baudrate</ref><sp/>=<sp/>baud;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//init<sp/>the<sp/>com<sp/>with<sp/>keyence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_keyence__rs232__interface_1a3171bb643c8988df2f3195bb67a1392e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a3171bb643c8988df2f3195bb67a1392e" kindref="member">Keyence_rs232_interface::initKeyenceCom</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;begin(<ref refid="class_keyence__rs232__interface_1a64dd14bd7eb46191aeda572d048b2b49" kindref="member">baudrate</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>a<sp/>output<sp/>value<sp/>of<sp/>single<sp/>head:<sp/>head<sp/>number<sp/>format<sp/>is<sp/>01,02,03...<sp/>but<sp/>param<sp/>is<sp/>given<sp/>as<sp/>int<sp/>1,2,3...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_keyence__rs232__interface_1a94a9b8b38fc656ff6edc2fd7043ce243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a94a9b8b38fc656ff6edc2fd7043ce243" kindref="member">Keyence_rs232_interface::getValueSingleOutputHead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_head_Nr)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>String<sp/>Zero<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>String<sp/>Response;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>head<sp/>specific<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>String<sp/>Soutput_head_Nr<sp/>=<sp/>String(output_head_Nr);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>get<sp/>value<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>String<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesure_value_outputN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>String<sp/>cmd<sp/>=<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">findCommand</ref>(command,<sp/><ref refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" kindref="member">commands</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_head_Nr<sp/>&lt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Soutput_head_Nr<sp/>=<sp/>Zero<sp/>+<sp/>Soutput_head_Nr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>cmd<sp/>+=<sp/>Soutput_head_Nr;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>hear<sp/>comes<sp/>magic<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>buffer<sp/>is<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(&quot;buffer<sp/>already<sp/>full<sp/>with:<sp/>&quot;+Response);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Response.substring(0,<sp/>5)<sp/>==<sp/>cmd)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;full<sp/>response:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Response);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Response.remove(0,<sp/>6);<sp/></highlight><highlight class="comment">//remove<sp/>default<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>Response.toDouble();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;filtered<sp/>response<sp/>for<sp/>head:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Soutput_head_Nr<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>equal<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Response<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>double<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>val);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;flush();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;print(cmd<sp/>+<sp/><ref refid="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(&quot;sending<sp/>command:<sp/>&quot;+cmd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>need<sp/>of<sp/>time<sp/>between<sp/>cmd<sp/>and<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>last_time<sp/>&gt;=<sp/>200)<sp/></highlight><highlight class="comment">//time<sp/>to<sp/>send/receive<sp/>response<sp/>from<sp/>1<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>rs232<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>other<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MS,OUT01,value<sp/>CR:<sp/>remove<sp/>M-&gt;,:<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(&quot;cmd:<sp/>&quot;+cmd+&quot;<sp/>Response:<sp/>&quot;+<sp/>Response.substring(0,5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Response.substring(0,<sp/>5)<sp/>==<sp/>cmd)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;full<sp/>response:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Response);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Response.remove(0,<sp/>6);<sp/></highlight><highlight class="comment">//remove<sp/>default<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>Response.toDouble();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;filtered<sp/>response<sp/>for<sp/>head:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Soutput_head_Nr<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>equal<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Response<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>double<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>val);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;flush();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_time<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>output<sp/>multiple<sp/>heads<sp/>in<sp/>this<sp/>format:<sp/>&quot;0-12&quot;<sp/>example:<sp/>head<sp/>1,2<sp/>and<sp/>3<sp/>will<sp/>be<sp/>111000000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_keyence__rs232__interface_1a67984df4c8e54eff602f0cb174069e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__rs232__interface_1a67984df4c8e54eff602f0cb174069e3d" kindref="member">Keyence_rs232_interface::getValueMultipleOutputHead</ref>(String<sp/>HeadsArray)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumOfOutputs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>get<sp/>value<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumOfOutputs<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element<sp/>:<sp/><ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOfOutputs++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Values<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[NumOfOutputs];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>Values[NumOfOutputs];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>String<sp/>valuesHolder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ValuesCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>heads&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>Serial.println(NumOfOutputs);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>String<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesure_value_multipleN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>String<sp/>cmd<sp/>=<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">findCommand</ref>(command,<sp/><ref refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" kindref="member">commands</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//cmd:MM,010010000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>cmd<sp/>+=<sp/>String(<ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;command<sp/>sent:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>Serial.println(cmd);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;println(cmd);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>rs232<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>other<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;response:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(Response);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Response:<sp/>MM,010010000000,value[,value,value]:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>Response.replace(cmd,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//remove<sp/>default<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(Response);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>response<sp/>and<sp/>extract<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Response.length();i++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>,val1,val2,val3,val4,val5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Response[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valuesHolder<sp/>=<sp/>Response.substring(i<sp/>+<sp/>1,<sp/>Response.indexOf(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;value<sp/>holder<sp/>got&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(valuesHolder);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Values[ValuesCounter]<sp/>=<sp/>valuesHolder.toDouble();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuesCounter++;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valuesHolder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValuesCounter<sp/>==<sp/>NumOfOutputs)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumOfOutputs;<sp/>i++)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;extracted<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(*(Values<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Values;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>output<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" kindref="member">Keyence_rs232_interface::getValueOutputHeadAll</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>String<sp/>Response;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>String<sp/>valuesHolder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ValuesCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>get<sp/>value<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>String<sp/>cmd;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;number<sp/>of<sp/>heads:<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(HeadsCount);</highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;timer:<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(timer_send_cmd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>String<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesure_value_All&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//cmd<sp/>=<sp/>findCommand(command,<sp/>commands);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>speed<sp/>purpose<sp/>we<sp/>skip<sp/>any<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MA&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;print(cmd<sp/>+<sp/><ref refid="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;command<sp/>sent:<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(cmd+CR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>rs232<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MA,value[,value,value]:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>Response.replace(cmd,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//remove<sp/>default<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(Response);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Values<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<ref refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" kindref="member">HeadsCount</ref>]<sp/>{0};<sp/></highlight><highlight class="comment">//heap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>response<sp/>and<sp/>extract<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Response.length();i++)</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>{//<sp/>,val1,val2,val3,val4,val5</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Response[i]<sp/>==<sp/>&apos;,&apos;)</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valuesHolder<sp/>=<sp/>Response.substring(i<sp/>+<sp/>1,<sp/>Response.indexOf(&apos;,&apos;,<sp/>i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Serial.print(&quot;value<sp/>holder<sp/>got:<sp/>&quot;);</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Serial.println(valuesHolder.toDouble());</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Values[ValuesCounter]<sp/>=<sp/>valuesHolder.toDouble();</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValuesCounter++;</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Serial.print(&quot;extracted<sp/>values:<sp/>&quot;);</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Serial.println(*(Values<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ValuesCounter<sp/>==<sp/>HeadsCount)<sp/>break;</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>gte<sp/>rid<sp/>of<sp/>any<sp/>loop<sp/>that<sp/>slow<sp/>down<sp/>the<sp/>main<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>know<sp/>that<sp/>we<sp/>use<sp/>three<sp/>heads,<sp/>we<sp/>can<sp/>just<sp/>add<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_occurance=Response.indexOf(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>second_occurance=Response.indexOf(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>first_occurance+1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>third_occurance=Response.indexOf(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,second_occurance+1);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Values[0]<sp/>=<sp/>Response.substring(first_occurance+1,second_occurance+1).toDouble();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Values[1]<sp/>=<sp/>Response.substring(second_occurance+1,third_occurance+1).toDouble();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Values[2]<sp/>=<sp/>Response.substring(third_occurance+1,Response.length()).toDouble();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(Values[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(Values[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(Values[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_keyence__base_1a3b9220df65b8fcc3acdb16dca31272a5" kindref="member">Keyence_base::LookUpValues</ref><sp/>=<sp/>Values;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>Values;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a3b9220df65b8fcc3acdb16dca31272a5" kindref="member">Keyence_base::LookUpValues</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>general<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_keyence__rs232__interface_1a2b0d0b535e0fb2c9f11ab1fe755f108f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a2b0d0b535e0fb2c9f11ab1fe755f108f" kindref="member">Keyence_rs232_interface::setGeneralMode</ref>()</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>get<sp/>value<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>String<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set_general_mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>String<sp/>cmd<sp/>=<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">findCommand</ref>(command,<sp/><ref refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" kindref="member">commands</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;print(cmd<sp/>+<sp/><ref refid="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>rs232<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>other<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;response:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(Response);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>communication<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_keyence__rs232__interface_1a366c821905c00f922a1a7ff86891d68b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a366c821905c00f922a1a7ff86891d68b" kindref="member">Keyence_rs232_interface::setCommunicationMode</ref>()</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>get<sp/>value<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>String<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set_communication_mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>String<sp/>cmd<sp/>=<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">findCommand</ref>(command,<sp/><ref refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" kindref="member">commands</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;print(cmd<sp/>+<sp/><ref refid="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" kindref="member">CR</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>delay(100);<sp/></highlight><highlight class="comment">//this<sp/>delay<sp/>is<sp/>obligatory<sp/>to<sp/>clear<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;available()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>rs232<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>Response<sp/>=<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;readStringUntil(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>other<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;response:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(Response);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;write(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>-&gt;flush();</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Keyence_API.cpp"/>
  </compounddef>
</doxygen>
