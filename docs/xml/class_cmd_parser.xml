<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_cmd_parser" kind="class" language="C++" prot="public">
    <compoundname>CmdParser</compoundname>
    <includes refid="_cmd_parser_8hpp" local="no">CmdParser.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cmd_parser_1a63e3a33727f7147612adb8d20fface72" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CmdParser::m_ignoreQuote</definition>
        <argsstring></argsstring>
        <name>m_ignoreQuote</name>
        <qualifiedname>CmdParser::m_ignoreQuote</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parser obtion <simplesect kind="see"><para><ref refid="class_cmd_parser_1a3d1088255605de22783562edc0672474" kindref="member">setOptIgnoreQuote</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="266" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_parser_1a55fff4c2e716386f1464448b53ba941c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CmdParser::m_useKeyValue</definition>
        <argsstring></argsstring>
        <name>m_useKeyValue</name>
        <qualifiedname>CmdParser::m_useKeyValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parser option <simplesect kind="see"><para><ref refid="class_cmd_parser_1aee137cf60aa0c94f0a662ced8c4e0aae" kindref="member">setOptKeyValue</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="269" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_parser_1ac85fb595442587bfd6dccb2b098a41e7" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char CmdParser::m_seperator</definition>
        <argsstring></argsstring>
        <name>m_seperator</name>
        <qualifiedname>CmdParser::m_seperator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parser option <simplesect kind="see"><para><ref refid="class_cmd_parser_1a1ebf11340588db861d4b5383a67b1d04" kindref="member">setOptSeperator</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="272" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_parser_1a8b384282fa1081e4398d8905c15c3a17" prot="private" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* CmdParser::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <qualifiedname>CmdParser::m_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to cmd buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="275" column="13" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_parser_1a817a159699c2ed1cefb1b39ebc5c358c" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CmdParser::m_bufferSize</definition>
        <argsstring></argsstring>
        <name>m_bufferSize</name>
        <qualifiedname>CmdParser::m_bufferSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of cmd buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="278" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_parser_1a84bf860714c519fb5ac519996195a645" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t CmdParser::m_paramCount</definition>
        <argsstring></argsstring>
        <name>m_paramCount</name>
        <qualifiedname>CmdParser::m_paramCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of parsed params </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="281" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cmd_parser_1a2ea6dfe5c12c9effc1419764e46e076e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CmdParser::CmdParser</definition>
        <argsstring>()</argsstring>
        <name>CmdParser</name>
        <qualifiedname>CmdParser::CmdParser</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set member to default values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="40" column="5" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdParser.cpp" bodystart="9" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CmdParser::parseCmd</definition>
        <argsstring>(uint8_t *buffer, size_t bufferSize)</argsstring>
        <name>parseCmd</name>
        <qualifiedname>CmdParser::parseCmd</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a buffer with commands. <simplesect kind="warning"><para>This function change the buffer and only this object can handle the new buffer!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer with cmd string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of params or CMDPARSER_ERROR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="51" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdParser.cpp" bodystart="19" bodyend="67"/>
        <references refid="_cmd_parser_8hpp_1a3d8e1545a55d983629b4b23d00b88c1c" compoundref="_cmd_parser_8hpp" startline="21">CMDPARSER_CHAR_DQ</references>
        <references refid="_cmd_parser_8hpp_1a293a7e2fc54bbfec5b0e8da10ec9a7fc" compoundref="_cmd_parser_8hpp" startline="22">CMDPARSER_CHAR_EQ</references>
        <references refid="_cmd_parser_8hpp_1aa84115565fbd5d676715b34f14228b26" compoundref="_cmd_parser_8hpp" startline="23">CMDPARSER_ERROR</references>
        <referencedby refid="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" compoundref="_cmd_callback_8cpp" startline="27" endline="42">CmdCallbackObject::loopCmdProcessing</referencedby>
        <referencedby refid="class_cmd_parser_1a1ae4ac725a5b549a7c3679a72d7d26e9" compoundref="_cmd_parser_8hpp" startline="53" endline="57">parseCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" compoundref="_cmd_callback_8cpp" startline="105" endline="120">CmdCallbackObject::updateCmdProcessing</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a1ae4ac725a5b549a7c3679a72d7d26e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CmdParser::parseCmd</definition>
        <argsstring>(CmdBufferObject *cmdBuffer)</argsstring>
        <name>parseCmd</name>
        <qualifiedname>CmdParser::parseCmd</qualifiedname>
        <param>
          <type><ref refid="class_cmd_buffer_object" kindref="compound">CmdBufferObject</ref> *</type>
          <declname>cmdBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="53" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="53" bodyend="57"/>
        <references refid="class_cmd_buffer_object_1a6513ed8d2466fd0560a692de7a79e0a9">CmdBufferObject::getBuffer</references>
        <references refid="class_cmd_buffer_object_1a6925a16fab8b9b13fb4372e5f0a88b7e">CmdBufferObject::getBufferSize</references>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">parseCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1ae95693cfd4aeff4b246f986f7aef55c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CmdParser::parseCmd</definition>
        <argsstring>(char *cmdStr)</argsstring>
        <name>parseCmd</name>
        <qualifiedname>CmdParser::parseCmd</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="59" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="59" bodyend="63"/>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">parseCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char * CmdParser::getCommand</definition>
        <argsstring>()</argsstring>
        <name>getCommand</name>
        <qualifiedname>CmdParser::getCommand</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the initial command line word.</para>
<para><simplesect kind="return"><para>String with cmd word or NULL if not exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="70" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="70" bodyend="70"/>
        <references refid="class_cmd_parser_1a49170df1a0052fa1fdb28235a488e7c6" compoundref="_cmd_parser_8cpp" startline="69" endline="93">getCmdParam</references>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">CmdCallbackObject::processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" compoundref="_cmd_callback_8cpp" startline="65" endline="85">CmdCallbackObject::processCmdVoid</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a49170df1a0052fa1fdb28235a488e7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * CmdParser::getCmdParam</definition>
        <argsstring>(uint16_t idx)</argsstring>
        <name>getCmdParam</name>
        <qualifiedname>CmdParser::getCmdParam</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the param IDX from command line.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of param to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String with param or NULL if not exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="78" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdParser.cpp" bodystart="69" bodyend="93"/>
        <referencedby refid="_cmd_pattern_callbacks_8h_1a905f26acafc5d817d3d4f2dc88bceb2a" compoundref="_cmd_pattern_callbacks_8cpp" startline="318" endline="325">calibrate_cmd</referencedby>
        <referencedby refid="class_cmd_parser_1a41408f0cf3162798275b5c3afddf1924" compoundref="_cmd_parser_8hpp" startline="106" endline="122">equalCmdParam</referencedby>
        <referencedby refid="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" compoundref="_cmd_parser_8hpp" startline="70" endline="70">getCommand</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1ac82a0068988fe425288370e121b04f00" compoundref="_cmd_pattern_callbacks_8cpp" startline="242" endline="291">move_cmd</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1a3d3ec91c1ee0b0c2a2e47d99fcbd6b61" compoundref="_cmd_pattern_callbacks_8cpp" startline="293" endline="312">rotate_cmd</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1adcae3b60a9fcfef183dd0b91967e2ad6" compoundref="_cmd_pattern_callbacks_8cpp" startline="173" endline="240">set_cmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a54becb4ba1ef11de3e51c98b449d0c87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CmdParser::getParamCount</definition>
        <argsstring>()</argsstring>
        <name>getParamCount</name>
        <qualifiedname>CmdParser::getParamCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the counter of parameter from cmd.</para>
<para><simplesect kind="return"><para>Return the param counter of command </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="85" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a83141b1acb2583532801b2cddce225a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char * CmdParser::getValueFromKey</definition>
        <argsstring>(CmdParserString key)</argsstring>
        <name>getValueFromKey</name>
        <qualifiedname>CmdParser::getValueFromKey</qualifiedname>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If KeyValue option is set, search the value from a key pair. KEY=Value i.e. KEY is upper case <simplesect kind="see"><para>setOptCmdUpper.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key for search in cmd </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String with value or NULL if not exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="94" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="94" bodyend="97"/>
        <references refid="class_cmd_parser_1a83141b1acb2583532801b2cddce225a5" compoundref="_cmd_parser_8hpp" startline="94" endline="97">getValueFromKey</references>
        <referencedby refid="class_cmd_parser_1aa8d0e9342798672f251b695c8629d347" compoundref="_cmd_parser_8hpp" startline="142" endline="158">equalValueFromKey</referencedby>
        <referencedby refid="class_cmd_parser_1a83141b1acb2583532801b2cddce225a5" compoundref="_cmd_parser_8hpp" startline="94" endline="97">getValueFromKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a41408f0cf3162798275b5c3afddf1924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdParser::equalCmdParam</definition>
        <argsstring>(uint16_t idx, CmdParserString value)</argsstring>
        <name>equalCmdParam</name>
        <qualifiedname>CmdParser::equalCmdParam</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if param equal with value case sensitive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of param to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>String to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="106" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="106" bodyend="122"/>
        <references refid="class_cmd_parser_1a49170df1a0052fa1fdb28235a488e7c6" compoundref="_cmd_parser_8cpp" startline="69" endline="93">getCmdParam</references>
        <referencedby refid="_cmd_pattern_callbacks_8h_1a905f26acafc5d817d3d4f2dc88bceb2a" compoundref="_cmd_pattern_callbacks_8cpp" startline="318" endline="325">calibrate_cmd</referencedby>
        <referencedby refid="class_cmd_parser_1a20afcca43b5a5231eb1d63ab0f564f91" compoundref="_cmd_parser_8hpp" startline="167" endline="176">cmdParamExists</referencedby>
        <referencedby refid="class_cmd_parser_1ae111b4908ad9a8092488fffaf897ad6f" compoundref="_cmd_parser_8hpp" startline="130" endline="133">equalCommand</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1aa0a1bd035c01b447c32e0a9e128c7611" compoundref="_cmd_pattern_callbacks_8cpp" startline="98" endline="170">get_cmd</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1ad2b16cf5e3d9d45db6380d3731c3211f" compoundref="_cmd_pattern_callbacks_8cpp" startline="76" endline="97">get_help</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1ac82a0068988fe425288370e121b04f00" compoundref="_cmd_pattern_callbacks_8cpp" startline="242" endline="291">move_cmd</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1a3d3ec91c1ee0b0c2a2e47d99fcbd6b61" compoundref="_cmd_pattern_callbacks_8cpp" startline="293" endline="312">rotate_cmd</referencedby>
        <referencedby refid="_cmd_pattern_callbacks_8h_1adcae3b60a9fcfef183dd0b91967e2ad6" compoundref="_cmd_pattern_callbacks_8cpp" startline="173" endline="240">set_cmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1ae111b4908ad9a8092488fffaf897ad6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdParser::equalCommand</definition>
        <argsstring>(CmdParserString value)</argsstring>
        <name>equalCommand</name>
        <qualifiedname>CmdParser::equalCommand</qualifiedname>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if command equal with value case sensitive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>String to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="130" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="130" bodyend="133"/>
        <references refid="class_cmd_parser_1a41408f0cf3162798275b5c3afddf1924" compoundref="_cmd_parser_8hpp" startline="106" endline="122">equalCmdParam</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1aa8d0e9342798672f251b695c8629d347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdParser::equalValueFromKey</definition>
        <argsstring>(CmdParserString key, CmdParserString value)</argsstring>
        <name>equalValueFromKey</name>
        <qualifiedname>CmdParser::equalValueFromKey</qualifiedname>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if value equal from key case sensitive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key store in SRAM for search in cmd </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>String to compare in PROGMEM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="142" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="142" bodyend="158"/>
        <references refid="class_cmd_parser_1a83141b1acb2583532801b2cddce225a5" compoundref="_cmd_parser_8hpp" startline="94" endline="97">getValueFromKey</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a20afcca43b5a5231eb1d63ab0f564f91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdParser::cmdParamExists</definition>
        <argsstring>(CmdParserString value)</argsstring>
        <name>cmdParamExists</name>
        <qualifiedname>CmdParser::cmdParamExists</qualifiedname>
        <param>
          <type><ref refid="_cmd_parser_8hpp_1a8b6cbada9e913ae4dbc8e00aacdba391" kindref="member">CmdParserString</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if a parameter/flag exists among all other passed command parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>String to look for among the parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="167" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="167" bodyend="176"/>
        <references refid="class_cmd_parser_1a41408f0cf3162798275b5c3afddf1924" compoundref="_cmd_parser_8hpp" startline="106" endline="122">equalCmdParam</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a3d1088255605de22783562edc0672474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CmdParser::setOptIgnoreQuote</definition>
        <argsstring>(bool onOff=true)</argsstring>
        <name>setOptIgnoreQuote</name>
        <qualifiedname>CmdParser::setOptIgnoreQuote</qualifiedname>
        <param>
          <type>bool</type>
          <declname>onOff</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set parser option to ignore " quote for string. Default is off</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>onOff</parametername>
</parameternamelist>
<parameterdescription>
<para>Set option TRUE (on) or FALSE (off) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="246" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1aee137cf60aa0c94f0a662ced8c4e0aae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CmdParser::setOptKeyValue</definition>
        <argsstring>(bool onOff=false)</argsstring>
        <name>setOptKeyValue</name>
        <qualifiedname>CmdParser::setOptKeyValue</qualifiedname>
        <param>
          <type>bool</type>
          <declname>onOff</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set parser option for handling KEY=Value parameter. Default is off</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>onOff</parametername>
</parameternamelist>
<parameterdescription>
<para>Set option TRUE (on) or FALSE (off) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="254" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_parser_1a1ebf11340588db861d4b5383a67b1d04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CmdParser::setOptSeperator</definition>
        <argsstring>(char seperator)</argsstring>
        <name>setOptSeperator</name>
        <qualifiedname>CmdParser::setOptSeperator</qualifiedname>
        <param>
          <type>char</type>
          <declname>seperator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set parser option for cmd seperator. Default is &apos; &apos; or CMDPARSER_CHAR_SP</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seperator</parametername>
</parameternamelist>
<parameterdescription>
<para>Set character for seperator cmd </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="262" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="262" bodyend="262"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_cmd_parser_1a3603aaaebc54b09b669181c0551847d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * CmdParser::getValueFromKey</definition>
        <argsstring>(const char *key, bool progmem)</argsstring>
        <name>getValueFromKey</name>
        <qualifiedname>CmdParser::getValueFromKey</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>progmem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle internal key value search function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progmem</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE key is store in progmem </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String with value or NULL if not exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="289" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdParser.cpp" bodystart="95" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" line="34" column="1" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdParser.hpp" bodystart="35" bodyend="290"/>
    <listofallmembers>
      <member refid="class_cmd_parser_1a20afcca43b5a5231eb1d63ab0f564f91" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>cmdParamExists</name></member>
      <member refid="class_cmd_parser_1a2ea6dfe5c12c9effc1419764e46e076e" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>CmdParser</name></member>
      <member refid="class_cmd_parser_1a41408f0cf3162798275b5c3afddf1924" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>equalCmdParam</name></member>
      <member refid="class_cmd_parser_1ae111b4908ad9a8092488fffaf897ad6f" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>equalCommand</name></member>
      <member refid="class_cmd_parser_1aa8d0e9342798672f251b695c8629d347" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>equalValueFromKey</name></member>
      <member refid="class_cmd_parser_1a49170df1a0052fa1fdb28235a488e7c6" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>getCmdParam</name></member>
      <member refid="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>getCommand</name></member>
      <member refid="class_cmd_parser_1a54becb4ba1ef11de3e51c98b449d0c87" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>getParamCount</name></member>
      <member refid="class_cmd_parser_1a83141b1acb2583532801b2cddce225a5" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>getValueFromKey</name></member>
      <member refid="class_cmd_parser_1a3603aaaebc54b09b669181c0551847d6" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>getValueFromKey</name></member>
      <member refid="class_cmd_parser_1a8b384282fa1081e4398d8905c15c3a17" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_buffer</name></member>
      <member refid="class_cmd_parser_1a817a159699c2ed1cefb1b39ebc5c358c" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_bufferSize</name></member>
      <member refid="class_cmd_parser_1a63e3a33727f7147612adb8d20fface72" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_ignoreQuote</name></member>
      <member refid="class_cmd_parser_1a84bf860714c519fb5ac519996195a645" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_paramCount</name></member>
      <member refid="class_cmd_parser_1ac85fb595442587bfd6dccb2b098a41e7" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_seperator</name></member>
      <member refid="class_cmd_parser_1a55fff4c2e716386f1464448b53ba941c" prot="private" virt="non-virtual"><scope>CmdParser</scope><name>m_useKeyValue</name></member>
      <member refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>parseCmd</name></member>
      <member refid="class_cmd_parser_1a1ae4ac725a5b549a7c3679a72d7d26e9" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>parseCmd</name></member>
      <member refid="class_cmd_parser_1ae95693cfd4aeff4b246f986f7aef55c3" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>parseCmd</name></member>
      <member refid="class_cmd_parser_1a3d1088255605de22783562edc0672474" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>setOptIgnoreQuote</name></member>
      <member refid="class_cmd_parser_1aee137cf60aa0c94f0a662ced8c4e0aae" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>setOptKeyValue</name></member>
      <member refid="class_cmd_parser_1a1ebf11340588db861d4b5383a67b1d04" prot="public" virt="non-virtual"><scope>CmdParser</scope><name>setOptSeperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
