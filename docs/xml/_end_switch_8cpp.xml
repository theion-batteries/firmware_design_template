<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_end_switch_8cpp" kind="file" language="C++">
    <compoundname>EndSwitch.cpp</compoundname>
    <includes refid="_end_switch_8hpp" local="yes">EndSwitch.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>ArduinoSTL.h</label>
      </node>
      <node id="2">
        <label>EndSwitch.hpp</label>
        <link refid="_end_switch_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/EndSwitch.cpp</label>
        <link refid="_end_switch_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>sami dhiab (<ulink url="mailto:sami@theion.de">sami@theion.de</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-02-11</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_end_switch_8hpp" kindref="compound">EndSwitch.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classend_switch_1a8c5f25ad4315e1cb4666131d5cdc1897" refkind="member"><highlight class="normal"><ref refid="classend_switch_1a7790627e38691079eda7e8c41b13ef96" kindref="member">endSwitch::endSwitch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PressedState){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;PressedState=<ref refid="classend_switch_1add742dd51c36b16fecc6421341bf1949" kindref="member">PressedState</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Pin=<ref refid="classend_switch_1a63796161305c364c1783bb936d661dea" kindref="member">Pin</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="classend_switch_1a63796161305c364c1783bb936d661dea" kindref="member">Pin</ref>,<sp/>INPUT_PULLUP);<sp/></highlight><highlight class="comment">//the<sp/>button<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28" refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classend_switch_1ae1f7e6d7200feb02820c02708bca01c0" kindref="member">endSwitch::get_current_state</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debounceButton=</highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debounceButton==</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classend_switch_1af068acae07251502871783ad8b31c88c" kindref="member">current_state</ref>=<ref refid="classend_switch_1ac38e43effb237b61a1f4b09092b5ac53" kindref="member">debounce</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classend_switch_1af068acae07251502871783ad8b31c88c" kindref="member">current_state</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classend_switch_1af068acae07251502871783ad8b31c88c" kindref="member">current_state</ref>=digitalRead(<ref refid="classend_switch_1a63796161305c364c1783bb936d661dea" kindref="member">Pin</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classend_switch_1af068acae07251502871783ad8b31c88c" kindref="member">current_state</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42" refid="classend_switch_1ac38e43effb237b61a1f4b09092b5ac53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classend_switch_1ac38e43effb237b61a1f4b09092b5ac53" kindref="member">endSwitch::debounce</ref>(){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttonState;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>reading<sp/>from<sp/>the<sp/>input<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastButtonState<sp/>=<sp/>HIGH;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>previous<sp/>reading<sp/>from<sp/>the<sp/>input<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>variables<sp/>are<sp/>unsigned<sp/>longs<sp/>because<sp/>the<sp/>time,<sp/>measured<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>milliseconds,<sp/>will<sp/>quickly<sp/>become<sp/>a<sp/>bigger<sp/>number<sp/>than<sp/>can<sp/>be<sp/>stored<sp/>in<sp/>an<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lastDebounceTime<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>last<sp/>time<sp/>the<sp/>output<sp/>pin<sp/>was<sp/>toggled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>debounceDelay<sp/>=<sp/>10;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>debounce<sp/>time;<sp/>increase<sp/>if<sp/>the<sp/>output<sp/>flickers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>state<sp/>of<sp/>the<sp/>switch<sp/>into<sp/>a<sp/>local<sp/>variable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reading<sp/>=<sp/>digitalRead(<ref refid="classend_switch_1a63796161305c364c1783bb936d661dea" kindref="member">Pin</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>you<sp/>just<sp/>pressed<sp/>the<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(i.e.<sp/>the<sp/>input<sp/>went<sp/>from<sp/>LOW<sp/>to<sp/>HIGH),<sp/>and<sp/>you&apos;ve<sp/>waited<sp/>long<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>last<sp/>press<sp/>to<sp/>ignore<sp/>any<sp/>noise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>switch<sp/>changed,<sp/>due<sp/>to<sp/>noise<sp/>or<sp/>pressing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reading<sp/>!=<sp/>lastButtonState)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>debouncing<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDebounceTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((millis()<sp/>-<sp/>lastDebounceTime)<sp/>&gt;<sp/>debounceDelay)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whatever<sp/>the<sp/>reading<sp/>is<sp/>at,<sp/>it&apos;s<sp/>been<sp/>there<sp/>for<sp/>longer<sp/>than<sp/>the<sp/>debounce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delay,<sp/>so<sp/>take<sp/>it<sp/>as<sp/>the<sp/>actual<sp/>current<sp/>state:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>button<sp/>state<sp/>has<sp/>changed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reading<sp/>!=<sp/>buttonState)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buttonState<sp/>=<sp/>reading;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>reading.<sp/>Next<sp/>time<sp/>through<sp/>the<sp/>loop,<sp/>it&apos;ll<sp/>be<sp/>the<sp/>lastButtonState:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>lastButtonState<sp/>=<sp/>reading;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastButtonState;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/EndSwitch.cpp"/>
  </compounddef>
</doxygen>
