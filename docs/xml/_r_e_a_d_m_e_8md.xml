<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Firmware<sp/>Design<sp/>Template</highlight></codeline>
<codeline><highlight class="normal">An<sp/>object<sp/>oriented<sp/>firmware<sp/>design<sp/>Template<sp/>in<sp/>c++<sp/>used<sp/>for<sp/>embedded<sp/>systems.<sp/>Currently<sp/>support<sp/>arduinos<sp/>(Uno,<sp/>Mega,<sp/>Due...).<sp/>The<sp/>Concept<sp/>can<sp/>be<sp/>ported<sp/>for<sp/>Esp<sp/>family<sp/>and<sp/>other<sp/>mcu<sp/>that<sp/>supports<sp/>c++<sp/>and<sp/>the<sp/>standard<sp/>library<sp/>implementation.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Contributon<sp/>and<sp/>Policy</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**First<sp/>Rule**:<sp/>Do<sp/>not<sp/>touch<sp/>the<sp/>main<sp/>branch<sp/>unless<sp/>you<sp/>are<sp/>the<sp/>author<sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Second<sp/>Rule**:<sp/>if<sp/>you<sp/>wish<sp/>to<sp/>contribute,<sp/>create<sp/>a<sp/>derived<sp/>branch<sp/>from<sp/>dev<sp/>with<sp/>your<sp/>feature<sp/>and<sp/>name:<sp/>dev_feature_name</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Third<sp/>Rule**:<sp/>understand<sp/>the<sp/>graph<sp/>below:<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![contribution](docs/uml/contribution.png)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>**Author**:<sp/>sami<sp/>dhiab<sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal">Contact:<sp/>sami@theion.de</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>API<sp/>docs</highlight></codeline>
<codeline><highlight class="normal">This<sp/>docs<sp/>is<sp/>auto<sp/>generated<sp/>with<sp/>doxygen.</highlight></codeline>
<codeline><highlight class="normal">please<sp/>note<sp/>that<sp/>images<sp/>rendering<sp/>from<sp/>markdown<sp/>file<sp/>is<sp/>not<sp/>yet<sp/>supported<sp/>by<sp/>doxygen,</highlight></codeline>
<codeline><highlight class="normal">therefore<sp/>click<sp/>[main](https://theionsami.github.io/firm_Alignment/)<sp/>to<sp/>open<sp/>main<sp/>page<sp/>with<sp/>rendered<sp/>images.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>not<sp/>already<sp/>on<sp/>docs<sp/>page,<sp/>click<sp/>[docs](https://theionsami.github.io/firm_Alignment/docs/html/index.html),<sp/>then<sp/>Under<sp/>Classes<sp/>and<sp/>Files<sp/>you<sp/>find<sp/>the<sp/>full<sp/>API.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>make<sp/>a<sp/>fork<sp/>from<sp/>this<sp/>repo,<sp/>dont<sp/>forget<sp/>to<sp/>run<sp/>doxygen<sp/>from<sp/>inside<sp/>docs/<sp/>after<sp/>any<sp/>changes<sp/>made<sp/>to<sp/>src/<sp/>inc/<sp/>or.md<sp/>files<sp/>and<sp/>push!</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Configuration<sp/>File</highlight></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>configuration<sp/>[file](include/Configs.h)<sp/><sp/>you<sp/>need<sp/>to<sp/>define<sp/>all<sp/>required<sp/>parameters:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>PINS:<sp/>pinout<sp/>related<sp/>to<sp/>respective<sp/>mcu</highlight></codeline>
<codeline><highlight class="normal">-<sp/>MACROS:<sp/>DEBUG,<sp/>VIRTUAL<sp/>,RELEASE<sp/>or<sp/>TEST</highlight></codeline>
<codeline><highlight class="normal">-<sp/>ENUMERATION:<sp/>return<sp/>values</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Simulation<sp/>&amp;<sp/>Virtualization</highlight></codeline>
<codeline><highlight class="normal">To<sp/>develop<sp/>the<sp/>firmware<sp/>and<sp/>test<sp/>it<sp/>in<sp/>complete<sp/>isolation<sp/>from<sp/>the<sp/>hardware,<sp/>a<sp/>virtualisation<sp/>platform<sp/>is<sp/>used<sp/>called<sp/>[wokwi](https://wokwi.com/).</highlight></codeline>
<codeline><highlight class="normal">This<sp/>provide<sp/>a<sp/>way<sp/>to<sp/>simulate<sp/>a<sp/>logic,<sp/>algorithm<sp/>or<sp/>even<sp/>some<sp/>of<sp/>the<sp/>supported<sp/>hardware<sp/>(leds,<sp/>sonar<sp/>sensors,<sp/>buttons,<sp/>motors<sp/>...).<sp/>Here<sp/>is<sp/>an<sp/>example<sp/>with<sp/>arduino<sp/>mega<sp/>and<sp/>connection<sp/>with<sp/>hardware.</highlight></codeline>
<codeline><highlight class="normal">![Simulation<sp/>Legend](docs/img/sim_legend.JPG)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Command<sp/>Design<sp/>Pattern</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>Device<sp/>or<sp/>the<sp/>mcu<sp/>(SLave<sp/>or<sp/>listener)<sp/>will<sp/>wait<sp/>for<sp/>commands<sp/>to<sp/>parse<sp/>from<sp/>the<sp/>server<sp/>or<sp/>master<sp/>side.<sp/>unless<sp/>there<sp/>are<sp/>some<sp/>background<sp/>functions<sp/>that<sp/>run<sp/>independantly<sp/>from<sp/>coming<sp/>commands,<sp/>the<sp/>main<sp/>task<sp/>is<sp/>to<sp/>parse<sp/>the<sp/>commands.<sp/></highlight></codeline>
<codeline><highlight class="normal">To<sp/>be<sp/>able<sp/>to<sp/>parse<sp/>commands<sp/>in<sp/>a<sp/>proper<sp/>way,<sp/>these<sp/>commands<sp/>must<sp/>be<sp/>defined<sp/>inside<sp/>classes,<sp/>the<sp/>receivers<sp/>of<sp/>commands<sp/>are<sp/>objects<sp/>(sensors,<sp/>actuators)<sp/>that<sp/>receive<sp/>commands,<sp/>invokers<sp/>are<sp/>entity<sp/>that<sp/>make<sp/>indirect<sp/>request<sp/>via<sp/>command<sp/>to<sp/>a<sp/>receiver<sp/></highlight></codeline>
<codeline><highlight class="normal">(internal<sp/>controller<sp/>).<sp/>The<sp/>client<sp/>is<sp/>the<sp/>app<sp/>running.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>we<sp/>siimplify<sp/>with<sp/>an<sp/>light<sp/>switch<sp/>example<sp/>here:<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Receiver:<sp/>Light</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Command:<sp/>turnOn,<sp/>TurnOff</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Invoker:<sp/>light<sp/>Switch</highlight></codeline>
<codeline><highlight class="normal">![cmd<sp/>design<sp/>pattern](docs/img/commandPattern.png)<sp/></highlight></codeline>
<codeline><highlight class="normal">#<sp/>Communication<sp/>protocol:<sp/>Definiton<sp/>of<sp/>messages<sp/>and<sp/>return<sp/>values</highlight></codeline>
<codeline><highlight class="normal">In<sp/>many<sp/>cases<sp/>the<sp/>master<sp/>sending<sp/>commands<sp/>via<sp/>Stream<sp/>has<sp/>to<sp/>know<sp/>the<sp/>return<sp/>of<sp/>these<sp/>Commands<sp/>(if<sp/>succes<sp/>or<sp/>fail)<sp/>to<sp/>process<sp/>with<sp/>next<sp/>commands.</highlight></codeline>
<codeline><highlight class="normal">Example<sp/>of<sp/>Commands<sp/>and<sp/>their<sp/>return<sp/>Value:<sp/>retVal<sp/>represents<sp/>an<sp/>enumeration<sp/>that<sp/>has<sp/>ok=0<sp/>or<sp/>err=1<sp/>which<sp/>corresponds<sp/>respectvly<sp/>to<sp/>succes<sp/>and<sp/>failure<sp/>of<sp/>that<sp/>command.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>message<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>action<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>return<sp/>value<sp/><sp/>|<sp/><sp/>return<sp/>type<sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>-------------<sp/>|:-------------:|<sp/>------------------:|------------------:|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>get<sp/>uuid<sp/>|<sp/>get<sp/>device<sp/>uuid<sp/>|<sp/>uuid<sp/><sp/><sp/>|<sp/><sp/>String</highlight></codeline>
<codeline><highlight class="normal">|<sp/>get<sp/>motor<sp/>x<sp/>direction<sp/>|<sp/>return<sp/>motor<sp/>x<sp/>direction<sp/>|<sp/><sp/><sp/>direction<sp/>|<sp/><sp/>String</highlight></codeline>
<codeline><highlight class="normal">|<sp/>set<sp/>motor<sp/>y<sp/>delay<sp/>&lt;value\&gt;<sp/>|<sp/>set<sp/>motor<sp/>y<sp/>delay<sp/>value<sp/>to<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>null<sp/>|<sp/><sp/><sp/>retVal</highlight></codeline>
<codeline><highlight class="normal">|<sp/>move<sp/>z<sp/>up<sp/>&lt;value\&gt;<sp/>|<sp/>move<sp/>up<sp/>z<sp/>to<sp/>value<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>null<sp/>|<sp/><sp/><sp/>retVal</highlight></codeline>
<codeline><highlight class="normal">|<sp/>undo<sp/>|<sp/>execute<sp/>last<sp/>cmd<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>depends<sp/>on<sp/>last<sp/>cmd<sp/>|<sp/><sp/><sp/>depends<sp/>on<sp/>last<sp/>cmd</highlight></codeline>
<codeline><highlight class="normal">|<sp/>reset<sp/>|<sp/>reset<sp/>device<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>null<sp/>|<sp/><sp/><sp/>void</highlight></codeline>
<codeline><highlight class="normal">|<sp/>sleep<sp/>|<sp/>sleep<sp/>device<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>null<sp/>|<sp/><sp/><sp/>void</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>is<sp/>up<sp/>to<sp/>to<sp/>specify<sp/>if<sp/>&lt;value\&gt;<sp/>can<sp/>int,<sp/>float,<sp/>double<sp/>or<sp/>any<sp/>type<sp/>..</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Demonstrartion<sp/>Video</highlight></codeline>
<codeline><highlight class="normal">A<sp/>demo<sp/>value<sp/>is<sp/>coming<sp/>soon..</highlight></codeline>
<codeline><highlight class="normal">#<sp/>UML<sp/>Class<sp/>Diagramm</highlight></codeline>
<codeline><highlight class="normal">Under<sp/>[UML](docs/uml/)<sp/>folder<sp/>are<sp/>previous<sp/>uml<sp/>Diagrams.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>UML<sp/>state<sp/>Diagram</highlight></codeline>
<codeline><highlight class="normal">Deprecated.<sp/><sp/>see<sp/>[UML](docs/uml/)<sp/>folder<sp/>for<sp/>previous<sp/>uml<sp/>Diagrams.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>UML<sp/>Sequence<sp/>Diagram</highlight></codeline>
<codeline><highlight class="normal">see<sp/>[UML](docs/uml/)<sp/>folder<sp/>for<sp/>previous<sp/>uml<sp/>Diagrams.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Test</highlight></codeline>
<codeline><highlight class="normal">please<sp/>refer<sp/>to<sp/>test<sp/>folder<sp/>[readme](test/README.md)<sp/>for<sp/>tests<sp/>and<sp/>definitions.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>V3<sp/>Features</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implementing<sp/>cmd<sp/>design<sp/>pattern</highlight></codeline>
<codeline><highlight class="normal">-<sp/>implementing<sp/>threading/scheduling<sp/>tasks</highlight></codeline>
<codeline><highlight class="normal">-<sp/>generating<sp/>docsumentation<sp/>fully<sp/>with<sp/>doxygen</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Change<sp/>Log</highlight></codeline>
<codeline><highlight class="normal">-<sp/>19.05.2022:<sp/>see<sp/>older<sp/>branch<sp/>(master<sp/>branch<sp/>for<sp/>change<sp/>log)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>ROS<sp/>Concept<sp/>&amp;<sp/>Integration</highlight></codeline>
<codeline><highlight class="normal">For<sp/>upcoming<sp/>version,<sp/>ros<sp/>will<sp/>be<sp/>fully<sp/>supported.</highlight></codeline>
<codeline><highlight class="normal">![here](docs/img/ros_concept_idea.png)<sp/></highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>TODO</highlight></codeline>
<codeline><highlight class="normal">-<sp/>finish<sp/>implementing<sp/>scheduler</highlight></codeline>
<codeline><highlight class="normal">-<sp/>finish<sp/>docs<sp/>for<sp/>all<sp/>files</highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/README.md"/>
  </compounddef>
</doxygen>
