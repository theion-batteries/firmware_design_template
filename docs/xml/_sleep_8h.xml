<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_sleep_8h" kind="file" language="C++">
    <compoundname>Sleep.h</compoundname>
    <includes local="no">avr/sleep.h</includes>
    <includes local="no">Arduino.h</includes>
    <includedby refid="_cmd_pattern_classes_8h" local="yes">C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdPatternClasses.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Sleep.h</label>
        <link refid="_sleep_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>avr/sleep.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdPatternCallbacks.h</label>
        <link refid="_cmd_pattern_callbacks_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdPatternClasses.h</label>
        <link refid="_cmd_pattern_classes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/ComHandler.hpp</label>
        <link refid="_com_handler_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Globals.h</label>
        <link refid="_globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Sleep.h</label>
        <link refid="_sleep_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdPatternCallbacks.cpp</label>
        <link refid="_cmd_pattern_callbacks_8cpp"/>
      </node>
      <node id="6">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/ComHandler.cpp</label>
        <link refid="_com_handler_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/Globals.cpp</label>
        <link refid="_globals_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sleep_hardware" prot="public">SleepHardware</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/sleep.h&gt;</highlight><highlight class="comment">//this<sp/>AVR<sp/>library<sp/>contains<sp/>the<sp/>methods<sp/>that<sp/>controls<sp/>the<sp/>sleep<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_sleep_hardware" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sleep_hardware" kindref="compound">SleepHardware</ref>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interruptPin;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="class_sleep_hardware_1adf757e861fcb9019a98e391e255c1377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sleep_hardware_1adf757e861fcb9019a98e391e255c1377" kindref="member">SleepHardware</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interruptPin)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(LED_BUILTIN,OUTPUT);</highlight><highlight class="comment">//We<sp/>use<sp/>the<sp/>led<sp/>on<sp/>pin<sp/>13<sp/>to<sp/>indecate<sp/>when<sp/>Arduino<sp/>is<sp/>A<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(interruptPin,INPUT_PULLUP);</highlight><highlight class="comment">//Set<sp/>pin<sp/>d2<sp/>to<sp/>input<sp/>using<sp/>the<sp/>buildin<sp/>pullup<sp/>resistor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(LED_BUILTIN,HIGH);</highlight><highlight class="comment">//turning<sp/>LED<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24" refid="class_sleep_hardware_1abc1f56b9c599fefc8e738b9bcae930df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sleep_hardware_1abc1f56b9c599fefc8e738b9bcae930df" kindref="member">Sleep</ref>(){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep_enable();</highlight><highlight class="comment">//Enabling<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>attachInterrupt(0,<sp/><ref refid="class_sleep_hardware_1a89f4ae7f8c68ab0d30a5dcf8c16a6f44" kindref="member">SleepHardware::wakeUp</ref>,<sp/>LOW);</highlight><highlight class="comment">//attaching<sp/>a<sp/>interrupt<sp/>to<sp/>pin<sp/>d2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>set_sleep_mode(SLEEP_MODE_PWR_DOWN);</highlight><highlight class="comment">//Setting<sp/>the<sp/>sleep<sp/>mode,<sp/>in<sp/>our<sp/>case<sp/>full<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(LED_BUILTIN,LOW);</highlight><highlight class="comment">//turning<sp/>LED<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1000);<sp/></highlight><highlight class="comment">//wait<sp/>a<sp/>second<sp/>to<sp/>allow<sp/>the<sp/>led<sp/>to<sp/>be<sp/>turned<sp/>off<sp/>before<sp/>going<sp/>to<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep_cpu();</highlight><highlight class="comment">//activating<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;just<sp/>woke<sp/>up!&quot;</highlight><highlight class="normal">);</highlight><highlight class="comment">//next<sp/>line<sp/>of<sp/>code<sp/>executed<sp/>after<sp/>the<sp/>interrupt<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(LED_BUILTIN,HIGH);</highlight><highlight class="comment">//turning<sp/>LED<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_sleep_hardware_1a89f4ae7f8c68ab0d30a5dcf8c16a6f44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sleep_hardware_1a89f4ae7f8c68ab0d30a5dcf8c16a6f44" kindref="member">wakeUp</ref>(){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Interrrupt<sp/>Fired&quot;</highlight><highlight class="normal">);</highlight><highlight class="comment">//Print<sp/>message<sp/>to<sp/>serial<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>sleep_disable();</highlight><highlight class="comment">//Disable<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>detachInterrupt(0);<sp/></highlight><highlight class="comment">//Removes<sp/>the<sp/>interrupt<sp/>from<sp/>pin<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/Sleep.h"/>
  </compounddef>
</doxygen>
