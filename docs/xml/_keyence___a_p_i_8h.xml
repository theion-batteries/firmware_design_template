<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_keyence___a_p_i_8h" kind="file" language="C++">
    <compoundname>Keyence_API.h</compoundname>
    <includes local="no">ArduinoSTL.h</includes>
    <includes local="no">map</includes>
    <includes refid="_configs_8h" local="yes">Configs.h</includes>
    <includedby refid="_distance_sensor_8hpp" local="yes">C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/DistanceSensor.hpp</includedby>
    <includedby refid="_keyence___a_p_i_8cpp" local="yes">C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/Keyence_API.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>ArduinoSTL.h</label>
      </node>
      <node id="4">
        <label>Configs.h</label>
        <link refid="_configs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h</label>
        <link refid="_keyence___a_p_i_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Alignment.hpp</label>
        <link refid="_alignment_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdPatternCallbacks.h</label>
        <link refid="_cmd_pattern_callbacks_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdPatternClasses.h</label>
        <link refid="_cmd_pattern_classes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/ComHandler.hpp</label>
        <link refid="_com_handler_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/DistanceSensor.hpp</label>
        <link refid="_distance_sensor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Globals.h</label>
        <link refid="_globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h</label>
        <link refid="_keyence___a_p_i_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/Alignment.cpp</label>
        <link refid="_alignment_8cpp"/>
      </node>
      <node id="10">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdPatternCallbacks.cpp</label>
        <link refid="_cmd_pattern_callbacks_8cpp"/>
      </node>
      <node id="8">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/ComHandler.cpp</label>
        <link refid="_com_handler_8cpp"/>
      </node>
      <node id="13">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/DistanceSensor.cpp</label>
        <link refid="_distance_sensor_8cpp"/>
      </node>
      <node id="11">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/Globals.cpp</label>
        <link refid="_globals_8cpp"/>
      </node>
      <node id="14">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/Keyence_API.cpp</label>
        <link refid="_keyence___a_p_i_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_keyence__base" prot="public">Keyence_base</innerclass>
    <innerclass refid="class_keyence__rs232__interface" prot="public">Keyence_rs232_interface</innerclass>
    <innerclass refid="class_keyence__ethernet__interface" prot="public">Keyence_ethernet_interface</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" prot="public" static="no">
        <name>CR</name>
        <initializer>&quot;\r&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h" line="22" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_keyence___a_p_i_8h_1a350c9d6cb81908d59427ee96844d1a9c" prot="public" static="no">
        <name>LF</name>
        <initializer>&apos;\n&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h" line="23" column="9" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>keyence sensors APIs </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>sami dhiab (<ulink url="mailto:sami@theion.de">sami@theion.de</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-04-06</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ArduinoSTL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_configs_8h" kindref="compound">Configs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>layout<sp/>pins<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="17"><highlight class="comment">5V<sp/><sp/>------&gt;<sp/>VCC</highlight></codeline>
<codeline lineno="18"><highlight class="comment">GND<sp/>------&gt;<sp/>GND</highlight></codeline>
<codeline lineno="19"><highlight class="comment">RX3<sp/>------&gt;<sp/>RxOut</highlight></codeline>
<codeline lineno="20"><highlight class="comment">TX3<sp/>------&gt;<sp/>TxIn<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="_keyence___a_p_i_8h_1a876ce77f3c672c7162658151e648389e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CR<sp/>&quot;\r&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//assume<sp/>carriage<sp/>return<sp/>is<sp/>\r<sp/>otherwise<sp/>+<sp/>\n,<sp/>\0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_keyence___a_p_i_8h_1a350c9d6cb81908d59427ee96844d1a9c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LF<sp/>&apos;\n&apos;<sp/></highlight><highlight class="comment">//assume<sp/>next<sp/>line<sp/>or<sp/>Line<sp/>Feed<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*****<sp/>rs232<sp/>basic<sp/>device<sp/>commands<sp/>****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>the<sp/>commands<sp/>must<sp/>be<sp/>sent<sp/>to<sp/>the<sp/>device<sp/>using<sp/>CR<sp/>as<sp/>delimeter,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>and<sp/>the<sp/>response<sp/>must<sp/>be<sp/>received<sp/>also<sp/>with<sp/>CR.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>the<sp/>controller<sp/>(arduino)<sp/>must<sp/>send<sp/>one<sp/>command<sp/>and<sp/>wait<sp/>for</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>the<sp/>response<sp/>to<sp/>send<sp/>next<sp/>one.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>General<sp/>Mode:<sp/>During<sp/>measurement<sp/>The<sp/>measurement<sp/>control<sp/>commands<sp/>are<sp/>accepted.</highlight></codeline>
<codeline lineno="32"><highlight class="comment">Commands<sp/>such<sp/>as<sp/>writing/reading<sp/>setting<sp/>values<sp/>are<sp/>not<sp/>accepted</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/>Communication<sp/>Mode:<sp/>•<sp/>When<sp/>the<sp/>command<sp/>&quot;Q&quot;<sp/>&quot;0&quot;<sp/>&quot;CR&quot;<sp/>is<sp/>received,<sp/>the<sp/>mode<sp/>changes<sp/>to</highlight></codeline>
<codeline lineno="34"><highlight class="comment">the<sp/>communication<sp/>mode,<sp/>and<sp/>the<sp/>setting<sp/>values<sp/>are<sp/>written/read.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">•<sp/>The<sp/>measurement<sp/>stops<sp/>during<sp/>the<sp/>communication<sp/>mode.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>command<sp/>|<sp/>description<sp/>|<sp/>Mode<sp/>|<sp/>response<sp/>|<sp/>ERROR</highlight></codeline>
<codeline lineno="37"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/>Q0<sp/>CR<sp/>|<sp/>Changing<sp/>to<sp/>the<sp/>communication<sp/>mode<sp/><sp/>|<sp/>communication<sp/>|<sp/><sp/>same<sp/>as<sp/>command<sp/><sp/>|<sp/>Err-51</highlight></codeline>
<codeline lineno="39"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*<sp/>R0<sp/>CR<sp/>|<sp/>Changing<sp/>to<sp/>the<sp/>general<sp/>mode<sp/>|<sp/>general<sp/>|<sp/>same<sp/>as<sp/>command<sp/><sp/>|<sp/>ERROR</highlight></codeline>
<codeline lineno="41"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*<sp/>MS,01<sp/>CR<sp/>|<sp/>Measured<sp/>value<sp/>output<sp/>(single)<sp/>01-12<sp/>|<sp/>General<sp/>|<sp/>MS,OUT01,value<sp/>CR<sp/>|<sp/>ERROR</highlight></codeline>
<codeline lineno="43"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/>MM,010010000000<sp/>CR<sp/>|<sp/>Measured<sp/>value<sp/>output<sp/>(multiple)<sp/>01-12<sp/>ex<sp/>here<sp/>out2<sp/>and<sp/>out5|<sp/>General<sp/>|<sp/>MM,010010000000,value[,value,value]<sp/>CR<sp/>|<sp/>ERROR</highlight></codeline>
<codeline lineno="46"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*<sp/>MA<sp/>CR<sp/>|<sp/>Measured<sp/>value<sp/>output<sp/>(all)<sp/>01-12|<sp/>General<sp/>|<sp/>MA,value[,value,value]<sp/>CR<sp/>|<sp/>ERROR</highlight></codeline>
<codeline lineno="48"><highlight class="comment">--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/>Timing<sp/>Diagrams</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/>t:<sp/>time<sp/>between<sp/>receiving<sp/>command<sp/>and<sp/>responding:<sp/>process<sp/>time</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>Mesrument/control<sp/>PW:<sp/>100ms<sp/>+<sp/>number<sp/>of<sp/>heads<sp/>x<sp/>100ms<sp/>:<sp/>if<sp/>one<sp/>head:<sp/>200ms<sp/>if<sp/>3<sp/>heads<sp/>100ms<sp/>+3*100=400ms</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*<sp/>Mode<sp/>Change<sp/>to<sp/>General:<sp/>600<sp/>ms<sp/>+<sp/>Number<sp/>of<sp/>head<sp/>expansion<sp/>units<sp/>x<sp/>750<sp/>ms<sp/>=<sp/>600+3*750<sp/>=<sp/>2850<sp/>ms</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/>Error<sp/>Code</highlight></codeline>
<codeline lineno="54"><highlight class="comment">•<sp/>50:<sp/>Command<sp/>error</highlight></codeline>
<codeline lineno="55"><highlight class="comment">•<sp/>51:<sp/>Status<sp/>error</highlight></codeline>
<codeline lineno="56"><highlight class="comment">•<sp/>60:<sp/>Command<sp/>length<sp/>error</highlight></codeline>
<codeline lineno="57"><highlight class="comment">•<sp/>61:<sp/>Parameter<sp/>count<sp/>error</highlight></codeline>
<codeline lineno="58"><highlight class="comment">•<sp/>62:<sp/>Parameter<sp/>range<sp/>error</highlight></codeline>
<codeline lineno="59"><highlight class="comment">•<sp/>88:<sp/>Timeout<sp/>error</highlight></codeline>
<codeline lineno="60"><highlight class="comment">•<sp/>99:<sp/>Other<sp/>error</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>not<sp/>all<sp/>commands<sp/>were<sp/>included,<sp/>only<sp/>basic<sp/>cmds<sp/>to<sp/>get<sp/>mesured<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//abstract<sp/>class<sp/>keyence<sp/>base:<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_keyence__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_keyence__base" kindref="compound">Keyence_base</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>Raw<sp/>Commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" refkind="member"><highlight class="normal">String<sp/><ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[9]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Q0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;R0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MS,&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MS,01&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MS,02&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MS,03&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MM,1110000000000&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MM,&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MA&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>map<sp/>of<sp/>command<sp/>Strings<sp/>to<sp/>raw<sp/>commands<sp/>+CR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" refkind="member"><highlight class="normal">std::map&lt;String,<sp/>String&gt;<sp/><ref refid="class_keyence__base_1a2862ac325dae8e5793df2764637f8cd4" kindref="member">commands</ref>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;set_communication_mode&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[0]},</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;set_general_mode&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[1]},</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_outputN&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[2]},</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_output1&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[3]},</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_output2&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[4]},</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_output3&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[5]},</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_multiple123&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[6]},</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_multipleN&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[7]},</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;mesure_value_All&quot;</highlight><highlight class="normal">,<ref refid="class_keyence__base_1a19ed4faa2383e1e7b73c25310082d47e" kindref="member">RawCommands</ref>[8]},</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>storing<sp/>number<sp/>of<sp/>heads<sp/>for<sp/>n<sp/>number<sp/>of<sp/>heads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="class_keyence__base_1a0ff7239d111d179849002ddcf45269f7" kindref="member">NumUsedHeads</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>counter<sp/>get<sp/>incremented<sp/>by<sp/>instance:<sp/>every<sp/>instance<sp/>is<sp/>new<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1afe8c07a4197b77ad65d4b53292ff6cf4" kindref="member">HeadsCount</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>[12];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Values<sp/>Array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_keyence__base_1a3b9220df65b8fcc3acdb16dca31272a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__base_1a3b9220df65b8fcc3acdb16dca31272a5" kindref="member">LookUpValues</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>func<sp/>to<sp/>debug<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">String<sp/><ref refid="class_keyence__base_1ac134c2f746ca3fd888e8f6528aa1c786" kindref="member">findCommand</ref>(String&amp;<sp/>command,<sp/>std::map&lt;String,<sp/>String&gt;&amp;<sp/>CommandMap);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>list<sp/>heads<sp/>availble</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a054bc92a833cb7d11ee3144e587ec672" kindref="member">listHeads</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pure<sp/>virtual<sp/>methods:<sp/>must<sp/>be<sp/>defined<sp/>in<sp/>sub<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>a<sp/>output<sp/>value<sp/>of<sp/>single<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_keyence__base_1ae6f70fc4642ba44346a6914bce5e317d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1ae6f70fc4642ba44346a6914bce5e317d" kindref="member">getValueSingleOutputHead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_head_Nr)=0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>output<sp/>multiple<sp/>heads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_keyence__base_1a6a99db9e73c0697f09be9a6a39e3e515" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__base_1a6a99db9e73c0697f09be9a6a39e3e515" kindref="member">getValueMultipleOutputHead</ref>(String<sp/><ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>)=0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>output<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_keyence__base_1acb7f8b41341c1e71e89c81c4481212fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__base_1acb7f8b41341c1e71e89c81c4481212fc" kindref="member">getValueOutputHeadAll</ref>()=0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>general<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_keyence__base_1a7c87aeaf6d28c3444d6358de03028544" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a7c87aeaf6d28c3444d6358de03028544" kindref="member">setGeneralMode</ref>()=0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>communication<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_keyence__base_1aac01671d8d411cd6c9974cbb9830afe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1aac01671d8d411cd6c9974cbb9830afe1" kindref="member">setCommunicationMode</ref>()=0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//usefull<sp/>template<sp/>fucntions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="110" refid="class_keyence__base_1a5c6d3ef94fb9ee56e6fd42574ab0f9f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a5c6d3ef94fb9ee56e6fd42574ab0f9f7" kindref="member">printVectorElements</ref>(std::vector&lt;T&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.size();<sp/>++i)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(vec.at(i))<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="118" refid="class_keyence__base_1a220804a6baf3d85f09da6ec3e1acb84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a220804a6baf3d85f09da6ec3e1acb84e" kindref="member">printArrayElements</ref>(A&amp;<sp/>array)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element:<sp/>array)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;listing<sp/>heads<sp/>in<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(element)<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="127" refid="class_keyence__base_1a5b9de50cb4430de65267b5aacdb1bda5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base_1a5b9de50cb4430de65267b5aacdb1bda5" kindref="member">transformArrayToVector</ref>(A&amp;<sp/>array,<sp/>std::vector&lt;V&gt;&amp;<sp/>vector<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element:<sp/>array)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector.push_back(element);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inherited<sp/>class<sp/>for<sp/>rs232<sp/>interface:<sp/>Arduino<sp/>Framework</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_keyence__rs232__interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_keyence__rs232__interface" kindref="compound">Keyence_rs232_interface</ref>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base" kindref="compound">Keyence_base</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140" refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" refkind="member"><highlight class="normal"><sp/>HardwareSerial*<sp/><ref refid="class_keyence__rs232__interface_1afd7e56526e455ebdfae7fbe0aecd6a75" kindref="member">serialHandler</ref>;</highlight></codeline>
<codeline lineno="141" refid="class_keyence__rs232__interface_1a64dd14bd7eb46191aeda572d048b2b49" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a64dd14bd7eb46191aeda572d048b2b49" kindref="member">baudrate</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="class_keyence__rs232__interface_1a7c4e926bb32658c80ca277032f2b6ab3" kindref="member">Keyence_rs232_interface</ref>(HardwareSerial&amp;<sp/>serHandler,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baud);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1ad32645333a71b52bad892dfd45b8d930" kindref="member">setSerialHandler</ref>(HardwareSerial&amp;<sp/>serHandler);<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a5e4e89b0e72492942b3dbfe59d1c4a8d" kindref="member">setSerialBaudrate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baud);<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a3171bb643c8988df2f3195bb67a1392e" kindref="member">initKeyenceCom</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>a<sp/>output<sp/>value<sp/>of<sp/>single<sp/>head:<sp/>return<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a94a9b8b38fc656ff6edc2fd7043ce243" kindref="member">getValueSingleOutputHead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_head_Nr)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>output<sp/>multiple<sp/>heads:<sp/>return<sp/>array<sp/>of<sp/>doubles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__rs232__interface_1a67984df4c8e54eff602f0cb174069e3d" kindref="member">getValueMultipleOutputHead</ref>(String<sp/><ref refid="class_keyence__base_1af588a8387643ec05ca11f2a825b6c56d" kindref="member">HeadsArray</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>output<sp/>all:<sp/>return<sp/>array<sp/>of<sp/>doubles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="class_keyence__rs232__interface_1ad2606a20f587944928d8cadef8505af3" kindref="member">getValueOutputHeadAll</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>general<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a2b0d0b535e0fb2c9f11ab1fe755f108f" kindref="member">setGeneralMode</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>communication<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_keyence__rs232__interface_1a366c821905c00f922a1a7ff86891d68b" kindref="member">setCommunicationMode</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inherited<sp/>class<sp/>for<sp/>ethernet<sp/>interface:<sp/>this<sp/>probably<sp/>via<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_keyence__ethernet__interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_keyence__ethernet__interface" kindref="compound">Keyence_ethernet_interface</ref>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_keyence__base" kindref="compound">Keyence_base</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/Keyence_API.h"/>
  </compounddef>
</doxygen>
