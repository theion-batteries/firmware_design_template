<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_cmd_callback_object" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>CmdCallbackObject</compoundname>
    <derivedcompoundref refid="class___cmd_callback" prot="public" virt="non-virtual">_CmdCallback&lt; STORESIZE, CmdParserString &gt;</derivedcompoundref>
    <derivedcompoundref refid="class___cmd_callback" prot="public" virt="non-virtual">_CmdCallback&lt; STORESIZE, T &gt;</derivedcompoundref>
    <includes refid="_cmd_callback_8hpp" local="no">CmdCallback.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::loopCmdProcessing</definition>
        <argsstring>(CmdParser *cmdParser, CmdBufferObject *cmdBuffer, Stream *serial)</argsstring>
        <name>loopCmdProcessing</name>
        <qualifiedname>CmdCallbackObject::loopCmdProcessing</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_buffer_object" kindref="compound">CmdBufferObject</ref> *</type>
          <declname>cmdBuffer</declname>
        </param>
        <param>
          <type>Stream *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Endless loop for process incoming data from serial.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdParser</parametername>
</parameternamelist>
<parameterdescription>
<para>Parser object with options set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer object for data handling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Arduino serial interface from comming data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="38" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdCallback.cpp" bodystart="9" bodyend="24"/>
        <references refid="class_cmd_buffer_object_1a9482f941c79ec204712a381b8fc55ac2">CmdBufferObject::clear</references>
        <references refid="_cmd_parser_8hpp_1aa84115565fbd5d676715b34f14228b26" compoundref="_cmd_parser_8hpp" startline="23">CMDPARSER_ERROR</references>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">CmdParser::parseCmd</references>
        <references refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="26" endline="46">processCmd</references>
        <references refid="class_cmd_buffer_object_1aba18a34d82f1b11527cda2d504432923" compoundref="_cmd_buffer_8cpp" startline="9" endline="64">CmdBufferObject::readFromSerial</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::processCmd</definition>
        <argsstring>(CmdParser *cmdParser)</argsstring>
        <name>processCmd</name>
        <qualifiedname>CmdCallbackObject::processCmd</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search command in the buffer and execute the callback function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if found the command in the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="47" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdCallback.cpp" bodystart="26" bodyend="46"/>
        <references refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc">callStoreFunct</references>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
        <references refid="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" compoundref="_cmd_parser_8hpp" startline="70" endline="70">CmdParser::getCommand</references>
        <referencedby refid="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" compoundref="_cmd_callback_8cpp" startline="9" endline="24">loopCmdProcessing</referencedby>
        <referencedby refid="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" compoundref="_cmd_callback_8cpp" startline="66" endline="80">updateCmdProcessing</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::runCmd</definition>
        <argsstring>(char *cmdStr, CmdParser *cmdParser)</argsstring>
        <name>runCmd</name>
        <qualifiedname>CmdCallbackObject::runCmd</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="48" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdCallback.cpp" bodystart="47" bodyend="65"/>
        <references refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc">callStoreFunct</references>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::updateCmdProcessing</definition>
        <argsstring>(CmdParser *cmdParser, CmdBufferObject *cmdBuffer, Stream *serial)</argsstring>
        <name>updateCmdProcessing</name>
        <qualifiedname>CmdCallbackObject::updateCmdProcessing</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_buffer_object" kindref="compound">CmdBufferObject</ref> *</type>
          <declname>cmdBuffer</declname>
        </param>
        <param>
          <type>Stream *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for single new char on serial and if it was the endChar</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdParser</parametername>
</parameternamelist>
<parameterdescription>
<para>Parser object with options set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer object for data handling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Arduino serial interface from comming data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="56" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdCallback.cpp" bodystart="66" bodyend="80"/>
        <references refid="class_cmd_buffer_object_1a9482f941c79ec204712a381b8fc55ac2">CmdBufferObject::clear</references>
        <references refid="_cmd_parser_8hpp_1aa84115565fbd5d676715b34f14228b26" compoundref="_cmd_parser_8hpp" startline="23">CMDPARSER_ERROR</references>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">CmdParser::parseCmd</references>
        <references refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="26" endline="46">processCmd</references>
        <references refid="class_cmd_buffer_object_1a8106cb49ce594259a50e49f43b727a9a" compoundref="_cmd_buffer_8cpp" startline="66" endline="114">CmdBufferObject::readSerialChar</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::hasCmd</definition>
        <argsstring>(char *cmdStr)</argsstring>
        <name>hasCmd</name>
        <qualifiedname>CmdCallbackObject::hasCmd</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search command in the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if found the command in the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="65" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/src/CmdCallback.cpp" bodystart="82" bodyend="94"/>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a587cc6682c2f330f6c363d783d902d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t CmdCallbackObject::getStoreSize</definition>
        <argsstring>()=0</argsstring>
        <name>getStoreSize</name>
        <qualifiedname>CmdCallbackObject::getStoreSize</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a8aadc0bdfd685a87483b149a0240c6e5">getStoreSize</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a8aadc0bdfd685a87483b149a0240c6e5">getStoreSize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Give the size of callback store.</para>
<para><simplesect kind="return"><para>Size of callback Store </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="72" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::checkStorePos</definition>
        <argsstring>(size_t idx)=0</argsstring>
        <name>checkStorePos</name>
        <qualifiedname>CmdCallbackObject::checkStorePos</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a6afbbcbf9da656b0972ad108616ffe45">checkStorePos</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a6afbbcbf9da656b0972ad108616ffe45">checkStorePos</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check is on store idx a valide cmd string and function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if valid or FALSE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="80" column="18"/>
        <referencedby refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" compoundref="_cmd_callback_8cpp" startline="82" endline="94">hasCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="26" endline="46">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="47" endline="65">runCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::equalStoreCmd</definition>
        <argsstring>(size_t idx, char *cmdStr)=0</argsstring>
        <name>equalStoreCmd</name>
        <qualifiedname>CmdCallbackObject::equalStoreCmd</qualifiedname>
        <reimplementedby refid="class_cmd_callback_1a311239af663deaa3c90a5907c4d4fc19">equalStoreCmd</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the cmd string equal to cmd in store. Please check idx with <simplesect kind="see"><para><ref refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" kindref="member">checkStorePos</ref> befor you use this funct!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE is equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="90" column="18"/>
        <referencedby refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" compoundref="_cmd_callback_8cpp" startline="82" endline="94">hasCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="26" endline="46">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="47" endline="65">runCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::callStoreFunct</definition>
        <argsstring>(size_t idx, CmdParser *cmdParser)=0</argsstring>
        <name>callStoreFunct</name>
        <qualifiedname>CmdCallbackObject::callStoreFunct</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a304e5954891af47175a6d90043dda8f8">callStoreFunct</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a304e5954891af47175a6d90043dda8f8">callStoreFunct</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call function from store. Please check idx with <simplesect kind="see"><para><ref refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" kindref="member">checkStorePos</ref> befor you use this funct!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if function is valid and calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="99" column="18"/>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="26" endline="46">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="47" endline="65">runCmd</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>CmdCallback&lt; STORESIZE &gt;</label>
        <link refid="class_cmd_callback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CmdCallbackObject</label>
        <link refid="class_cmd_callback_object"/>
      </node>
      <node id="4">
        <label>_CmdCallback&lt; STORESIZE, T &gt;</label>
        <link refid="class___cmd_callback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>_CmdCallback&lt; STORESIZE, CmdParserString &gt;</label>
        <link refid="class___cmd_callback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" line="28" column="1" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/include/CmdCallback.hpp" bodystart="29" bodyend="100"/>
    <listofallmembers>
      <member refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>callStoreFunct</name></member>
      <member refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>checkStorePos</name></member>
      <member refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>equalStoreCmd</name></member>
      <member refid="class_cmd_callback_object_1a587cc6682c2f330f6c363d783d902d2a" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>getStoreSize</name></member>
      <member refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" prot="public" virt="virtual"><scope>CmdCallbackObject</scope><name>hasCmd</name></member>
      <member refid="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>loopCmdProcessing</name></member>
      <member refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" prot="public" virt="virtual"><scope>CmdCallbackObject</scope><name>processCmd</name></member>
      <member refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>runCmd</name></member>
      <member refid="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>updateCmdProcessing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
