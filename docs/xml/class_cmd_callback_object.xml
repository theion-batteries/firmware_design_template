<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_cmd_callback_object" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>CmdCallbackObject</compoundname>
    <derivedcompoundref refid="class___cmd_callback" prot="public" virt="non-virtual">_CmdCallback&lt; STORESIZE, CmdParserString &gt;</derivedcompoundref>
    <derivedcompoundref refid="class___cmd_callback" prot="public" virt="non-virtual">_CmdCallback&lt; STORESIZE, T &gt;</derivedcompoundref>
    <includes refid="_cmd_callback_8hpp" local="no">CmdCallback.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cmd_callback_object_1a99dcf3ce18083d685c7db12820d0b2a6" prot="private" static="no" mutable="no">
        <type>Thread *</type>
        <definition>Thread* CmdCallbackObject::InternThread</definition>
        <argsstring></argsstring>
        <name>InternThread</name>
        <qualifiedname>CmdCallbackObject::InternThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="30" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_callback_object_1ad05ada2dfe73c372b8d9ce1286702307" prot="private" static="no" mutable="no">
        <type>ThreadController *</type>
        <definition>ThreadController* CmdCallbackObject::InternalScheduler</definition>
        <argsstring></argsstring>
        <name>InternalScheduler</name>
        <qualifiedname>CmdCallbackObject::InternalScheduler</qualifiedname>
        <initializer>= new ThreadController()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="31" column="22" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_callback_object_1a5ffae67737817e05ad1d027be7c8ed16" prot="private" static="no" mutable="no">
        <type><ref refid="_cmd_callback_8hpp_1af311870fc30f3981ec08da54c54dc9f1" kindref="member">CmdCallFunct</ref> *</type>
        <definition>CmdCallFunct* CmdCallbackObject::m_functList</definition>
        <argsstring></argsstring>
        <name>m_functList</name>
        <qualifiedname>CmdCallbackObject::m_functList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="32" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_cmd_callback_object_1af1ca856f966455122ca467c06ca0a517" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CmdCallbackObject::current_idx</definition>
        <argsstring></argsstring>
        <name>current_idx</name>
        <qualifiedname>CmdCallbackObject::current_idx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="35" column="14" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="class___cmd_callback_1a304e5954891af47175a6d90043dda8f8" compoundref="_cmd_callback_8hpp" startline="180" endline="189">_CmdCallback&lt; STORESIZE, T &gt;::callStoreFunct</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_callback_object_1a7e5d6ac7b89c934cc5e5a70885d5e24d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CmdCallbackObject::CmdreadyForExecution</definition>
        <argsstring></argsstring>
        <name>CmdreadyForExecution</name>
        <qualifiedname>CmdCallbackObject::CmdreadyForExecution</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="36" column="8" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cmd_callback_object_1a05c8c5b53e0fc789ab2d384d4c6d34e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Thread *</type>
        <definition>Thread * CmdCallbackObject::getInternalThread</definition>
        <argsstring>() const</argsstring>
        <name>getInternalThread</name>
        <qualifiedname>CmdCallbackObject::getInternalThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="37" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1ac726ccd395ff4cbfa8c421865f75a47a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ThreadController *</type>
        <definition>ThreadController * CmdCallbackObject::getInternalScheduler</definition>
        <argsstring>() const</argsstring>
        <name>getInternalScheduler</name>
        <qualifiedname>CmdCallbackObject::getInternalScheduler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="38" column="20" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a4d42ca130807adfb5b2d91d985bb7495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::createThreadForCmd</definition>
        <argsstring>(CmdParser *cmdParser)</argsstring>
        <name>createThreadForCmd</name>
        <qualifiedname>CmdCallbackObject::createThreadForCmd</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="39" column="8" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::processCmdVoid</definition>
        <argsstring>(CmdParser *cmdParser)</argsstring>
        <name>processCmdVoid</name>
        <qualifiedname>CmdCallbackObject::processCmdVoid</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="40" column="8" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="65" bodyend="85"/>
        <references refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc">callStoreFunct</references>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
        <references refid="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" compoundref="_cmd_parser_8hpp" startline="70" endline="70">CmdParser::getCommand</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a34de4688b050fc89d4b252a14f414698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * CmdCallbackObject::threadCallback</definition>
        <argsstring>(size_t idx, CmdParser *cmdParser)</argsstring>
        <name>threadCallback</name>
        <qualifiedname>CmdCallbackObject::threadCallback</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
<para>internal thread callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdParser</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="class_cmd_buffer" kindref="compound">CmdBuffer</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="48" column="12" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::loopCmdProcessing</definition>
        <argsstring>(CmdParser *cmdParser, CmdBufferObject *cmdBuffer, Stream *serial)</argsstring>
        <name>loopCmdProcessing</name>
        <qualifiedname>CmdCallbackObject::loopCmdProcessing</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_buffer_object" kindref="compound">CmdBufferObject</ref> *</type>
          <declname>cmdBuffer</declname>
        </param>
        <param>
          <type>Stream *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Endless loop for process incoming data from serial.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdParser</parametername>
</parameternamelist>
<parameterdescription>
<para>Parser object with options set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer object for data handling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Arduino serial interface from comming data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="57" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="27" bodyend="42"/>
        <references refid="class_cmd_buffer_object_1a9482f941c79ec204712a381b8fc55ac2">CmdBufferObject::clear</references>
        <references refid="_cmd_parser_8hpp_1aa84115565fbd5d676715b34f14228b26" compoundref="_cmd_parser_8hpp" startline="23">CMDPARSER_ERROR</references>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">CmdParser::parseCmd</references>
        <references refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">processCmd</references>
        <references refid="class_cmd_buffer_object_1aba18a34d82f1b11527cda2d504432923" compoundref="_cmd_buffer_8cpp" startline="9" endline="64">CmdBufferObject::readFromSerial</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::processCmd</definition>
        <argsstring>(CmdParser *cmdParser)</argsstring>
        <name>processCmd</name>
        <qualifiedname>CmdCallbackObject::processCmd</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search command in the buffer and execute the callback function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if found the command in the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="66" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="44" bodyend="64"/>
        <references refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc">callStoreFunct</references>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
        <references refid="class_cmd_parser_1ab4d34a57e1917264f954f93f751f76ea" compoundref="_cmd_parser_8hpp" startline="70" endline="70">CmdParser::getCommand</references>
        <referencedby refid="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" compoundref="_cmd_callback_8cpp" startline="27" endline="42">loopCmdProcessing</referencedby>
        <referencedby refid="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" compoundref="_cmd_callback_8cpp" startline="105" endline="120">updateCmdProcessing</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::runCmd</definition>
        <argsstring>(char *cmdStr, CmdParser *cmdParser)</argsstring>
        <name>runCmd</name>
        <qualifiedname>CmdCallbackObject::runCmd</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="67" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="86" bodyend="104"/>
        <references refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc">callStoreFunct</references>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CmdCallbackObject::updateCmdProcessing</definition>
        <argsstring>(CmdParser *cmdParser, CmdBufferObject *cmdBuffer, Stream *serial)</argsstring>
        <name>updateCmdProcessing</name>
        <qualifiedname>CmdCallbackObject::updateCmdProcessing</qualifiedname>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_buffer_object" kindref="compound">CmdBufferObject</ref> *</type>
          <declname>cmdBuffer</declname>
        </param>
        <param>
          <type>Stream *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for single new char on serial and if it was the endChar</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdParser</parametername>
</parameternamelist>
<parameterdescription>
<para>Parser object with options set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer object for data handling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Arduino serial interface from comming data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="75" column="10" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="105" bodyend="120"/>
        <references refid="class_cmd_buffer_object_1a9482f941c79ec204712a381b8fc55ac2">CmdBufferObject::clear</references>
        <references refid="_cmd_parser_8hpp_1aa84115565fbd5d676715b34f14228b26" compoundref="_cmd_parser_8hpp" startline="23">CMDPARSER_ERROR</references>
        <references refid="class_cmd_parser_1a5df6c3bc15c7d508ec449992f83b3bb0" compoundref="_cmd_parser_8cpp" startline="19" endline="67">CmdParser::parseCmd</references>
        <references refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">processCmd</references>
        <references refid="class_cmd_buffer_object_1a8106cb49ce594259a50e49f43b727a9a" compoundref="_cmd_buffer_8cpp" startline="66" endline="114">CmdBufferObject::readSerialChar</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CmdCallbackObject::hasCmd</definition>
        <argsstring>(char *cmdStr)</argsstring>
        <name>hasCmd</name>
        <qualifiedname>CmdCallbackObject::hasCmd</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search command in the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if found the command in the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="84" column="18" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/src/CmdCallback.cpp" bodystart="122" bodyend="134"/>
        <references refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1">checkStorePos</references>
        <references refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e">equalStoreCmd</references>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a587cc6682c2f330f6c363d783d902d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t CmdCallbackObject::getStoreSize</definition>
        <argsstring>()=0</argsstring>
        <name>getStoreSize</name>
        <qualifiedname>CmdCallbackObject::getStoreSize</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a8aadc0bdfd685a87483b149a0240c6e5">getStoreSize</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a8aadc0bdfd685a87483b149a0240c6e5">getStoreSize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Give the size of callback store.</para>
<para><simplesect kind="return"><para>Size of callback Store </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="91" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::checkStorePos</definition>
        <argsstring>(size_t idx)=0</argsstring>
        <name>checkStorePos</name>
        <qualifiedname>CmdCallbackObject::checkStorePos</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a6afbbcbf9da656b0972ad108616ffe45">checkStorePos</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a6afbbcbf9da656b0972ad108616ffe45">checkStorePos</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check is on store idx a valide cmd string and function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if valid or FALSE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="99" column="18"/>
        <referencedby refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" compoundref="_cmd_callback_8cpp" startline="122" endline="134">hasCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" compoundref="_cmd_callback_8cpp" startline="65" endline="85">processCmdVoid</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="86" endline="104">runCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::equalStoreCmd</definition>
        <argsstring>(size_t idx, char *cmdStr)=0</argsstring>
        <name>equalStoreCmd</name>
        <qualifiedname>CmdCallbackObject::equalStoreCmd</qualifiedname>
        <reimplementedby refid="class_cmd_callback_1a311239af663deaa3c90a5907c4d4fc19">equalStoreCmd</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cmdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the cmd string equal to cmd in store. Please check idx with <simplesect kind="see"><para><ref refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" kindref="member">checkStorePos</ref> befor you use this funct!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdStr</parametername>
</parameternamelist>
<parameterdescription>
<para>Cmd string to search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE is equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="109" column="18"/>
        <referencedby refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" compoundref="_cmd_callback_8cpp" startline="122" endline="134">hasCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" compoundref="_cmd_callback_8cpp" startline="65" endline="85">processCmdVoid</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="86" endline="104">runCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CmdCallbackObject::callStoreFunct</definition>
        <argsstring>(size_t idx, CmdParser *cmdParser)=0</argsstring>
        <name>callStoreFunct</name>
        <qualifiedname>CmdCallbackObject::callStoreFunct</qualifiedname>
        <reimplementedby refid="class___cmd_callback_1a304e5954891af47175a6d90043dda8f8">callStoreFunct</reimplementedby>
        <reimplementedby refid="class___cmd_callback_1a304e5954891af47175a6d90043dda8f8">callStoreFunct</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_parser" kindref="compound">CmdParser</ref> *</type>
          <declname>cmdParser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call function from store. Please check idx with <simplesect kind="see"><para><ref refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" kindref="member">checkStorePos</ref> befor you use this funct!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Store number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if function is valid and calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="118" column="18"/>
        <referencedby refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" compoundref="_cmd_callback_8cpp" startline="44" endline="64">processCmd</referencedby>
        <referencedby refid="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" compoundref="_cmd_callback_8cpp" startline="65" endline="85">processCmdVoid</referencedby>
        <referencedby refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" compoundref="_cmd_callback_8cpp" startline="86" endline="104">runCmd</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>CmdCallback&lt; STORESIZE &gt;</label>
        <link refid="class_cmd_callback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CmdCallbackObject</label>
        <link refid="class_cmd_callback_object"/>
      </node>
      <node id="4">
        <label>_CmdCallback&lt; STORESIZE, T &gt;</label>
        <link refid="class___cmd_callback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>_CmdCallback&lt; STORESIZE, CmdParserString &gt;</label>
        <link refid="class___cmd_callback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" line="27" column="1" bodyfile="C:/Users/SamiDhiab/Theion_Repos/firmware_design_template/include/CmdCallback.hpp" bodystart="28" bodyend="119"/>
    <listofallmembers>
      <member refid="class_cmd_callback_object_1a57d216fe712755cbcdcb1459c41f70dc" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>callStoreFunct</name></member>
      <member refid="class_cmd_callback_object_1a09c721e9352b605208317f8163d373b1" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>checkStorePos</name></member>
      <member refid="class_cmd_callback_object_1a7e5d6ac7b89c934cc5e5a70885d5e24d" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>CmdreadyForExecution</name></member>
      <member refid="class_cmd_callback_object_1a4d42ca130807adfb5b2d91d985bb7495" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>createThreadForCmd</name></member>
      <member refid="class_cmd_callback_object_1af1ca856f966455122ca467c06ca0a517" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>current_idx</name></member>
      <member refid="class_cmd_callback_object_1a5410a5765b358895449a7e0918cd3a4e" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>equalStoreCmd</name></member>
      <member refid="class_cmd_callback_object_1ac726ccd395ff4cbfa8c421865f75a47a" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>getInternalScheduler</name></member>
      <member refid="class_cmd_callback_object_1a05c8c5b53e0fc789ab2d384d4c6d34e1" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>getInternalThread</name></member>
      <member refid="class_cmd_callback_object_1a587cc6682c2f330f6c363d783d902d2a" prot="public" virt="pure-virtual"><scope>CmdCallbackObject</scope><name>getStoreSize</name></member>
      <member refid="class_cmd_callback_object_1ac7a318cd6dcb9c1047b78c741975c701" prot="public" virt="virtual"><scope>CmdCallbackObject</scope><name>hasCmd</name></member>
      <member refid="class_cmd_callback_object_1ad05ada2dfe73c372b8d9ce1286702307" prot="private" virt="non-virtual"><scope>CmdCallbackObject</scope><name>InternalScheduler</name></member>
      <member refid="class_cmd_callback_object_1a99dcf3ce18083d685c7db12820d0b2a6" prot="private" virt="non-virtual"><scope>CmdCallbackObject</scope><name>InternThread</name></member>
      <member refid="class_cmd_callback_object_1ac8aa1ceb9d593be1c562acd8a77b0994" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>loopCmdProcessing</name></member>
      <member refid="class_cmd_callback_object_1a5ffae67737817e05ad1d027be7c8ed16" prot="private" virt="non-virtual"><scope>CmdCallbackObject</scope><name>m_functList</name></member>
      <member refid="class_cmd_callback_object_1a57346a915823fd83800bfbd754fbe131" prot="public" virt="virtual"><scope>CmdCallbackObject</scope><name>processCmd</name></member>
      <member refid="class_cmd_callback_object_1acdb63091c889fe6140a38619be3464f9" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>processCmdVoid</name></member>
      <member refid="class_cmd_callback_object_1a3a5e1c1dfcc4fc828bb24c97574a15ae" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>runCmd</name></member>
      <member refid="class_cmd_callback_object_1a34de4688b050fc89d4b252a14f414698" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>threadCallback</name></member>
      <member refid="class_cmd_callback_object_1a6793737c5d0ecf1fb9e3a9dd48a38d41" prot="public" virt="non-virtual"><scope>CmdCallbackObject</scope><name>updateCmdProcessing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
