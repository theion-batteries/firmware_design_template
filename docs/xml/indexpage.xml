<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Firmware Design Template</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md_C__Users_SamiDhiab_Theion_Repos_firm_Alignment_PrintHead_README"/>An object oriented firmware design Template in c++ used for embedded systems. Currently support arduinos (Uno, Mega, Due...). The Concept can be ported for Esp family and other mcu that supports c++ and the standard library implementation.</para>
<sect1 id="index_1autotoc_md1">
<title>Contributon and Policy</title>
<para><itemizedlist>
<listitem><para><bold>First Rule</bold>: Do not touch the main branch unless you are the author <linebreak/>
</para>
</listitem><listitem><para><bold>Second Rule</bold>: if you wish to contribute, create a derived branch from dev with your feature and name: dev_feature_name</para>
</listitem><listitem><para><bold>Third Rule</bold>: understand the graph below:</para>
</listitem></itemizedlist>
</para>
<para><image type="html" name="docs/uml/contribution.png" alt="contribution" inline="yes"></image>
</para>
<para><itemizedlist>
<listitem><para><bold>Author</bold>: sami dhiab <linebreak/>
 Contact: <ulink url="mailto:sami@theion.de">sami@theion.de</ulink></para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md2">
<title>API docs</title>
<para>This docs is auto generated with doxygen. please note that images rendering from markdown file is not yet supported by doxygen, therefore click <ulink url="https://theionsami.github.io/firm_Alignment/">main</ulink> to open main page with rendered images. If not already on docs page, click <ulink url="https://theionsami.github.io/firm_Alignment/docs/html/index.html">docs</ulink>, then Under Classes and Files you find the full API. If you make a fork from this repo, dont forget to run doxygen from inside docs/ after any changes made to src/ inc/ or.md files and push! </para>
</sect1>
<sect1 id="index_1autotoc_md3">
<title>Configuration File</title>
<para>In the configuration <ulink url="include/Configs.h">file</ulink> you need to define all required parameters:</para>
<para><itemizedlist>
<listitem><para>PINS: pinout related to respective mcu</para>
</listitem><listitem><para>MACROS: DEBUG, VIRTUAL ,RELEASE or TEST</para>
</listitem><listitem><para>ENUMERATION: return values</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md4">
<title>Simulation &amp; Virtualization</title>
<para>To develop the firmware and test it in complete isolation from the hardware, a virtualisation platform is used called <ulink url="https://wokwi.com/">wokwi</ulink>. This provide a way to simulate a logic, algorithm or even some of the supported hardware (leds, sonar sensors, buttons, motors ...). Here is an example with arduino mega and connection with hardware. <image type="html" name="docs/img/sim_legend.JPG" alt="Simulation Legend" inline="yes"></image>
</para>
</sect1>
<sect1 id="index_1autotoc_md5">
<title>Command Design Pattern</title>
<para>The Device or the mcu (SLave or listener) will wait for commands to parse from the server or master side. unless there are some background functions that run independantly from coming commands, the main task is to parse the commands. To be able to parse commands in a proper way, these commands must be defined inside classes, the receivers of commands are objects (sensors, actuators) that receive commands, invokers are entity that make indirect request via command to a receiver (internal controller ). The client is the app running. If we siimplify with an light switch example here:<itemizedlist>
<listitem><para>Receiver: Light</para>
</listitem><listitem><para>Command: turnOn, TurnOff</para>
</listitem><listitem><para><ref refid="class_invoker" kindref="compound">Invoker</ref>: light Switch <image type="html" name="docs/img/commandPattern.png" alt="cmd design pattern" inline="yes"></image>
 </para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md6">
<title>Communication protocol: Definiton of messages and return values</title>
<para>In many cases the master sending commands via Stream has to know the return of these Commands (if succes or fail) to process with next commands. Example of Commands and their return Value: retVal represents an enumeration that has ok=0 or err=1 which corresponds respectvly to succes and failure of that command.</para>
<para><table rows="8" cols="4"><row>
<entry thead="yes"><para>message   </para>
</entry><entry thead="yes" align='center'><para>action   </para>
</entry><entry thead="yes" align='right'><para>return value   </para>
</entry><entry thead="yes" align='right'><para>return type    </para>
</entry></row>
<row>
<entry thead="no"><para>get uuid   </para>
</entry><entry thead="no" align='center'><para>get device uuid   </para>
</entry><entry thead="no" align='right'><para>uuid   </para>
</entry><entry thead="no" align='right'><para>String    </para>
</entry></row>
<row>
<entry thead="no"><para>get motor x direction   </para>
</entry><entry thead="no" align='center'><para>return motor x direction   </para>
</entry><entry thead="no" align='right'><para>direction   </para>
</entry><entry thead="no" align='right'><para>String    </para>
</entry></row>
<row>
<entry thead="no"><para>set motor y delay &lt;value&gt;   </para>
</entry><entry thead="no" align='center'><para>set motor y delay value to   </para>
</entry><entry thead="no" align='right'><para>null   </para>
</entry><entry thead="no" align='right'><para>retVal    </para>
</entry></row>
<row>
<entry thead="no"><para>move z up &lt;value&gt;   </para>
</entry><entry thead="no" align='center'><para>move up z to value   </para>
</entry><entry thead="no" align='right'><para>null   </para>
</entry><entry thead="no" align='right'><para>retVal    </para>
</entry></row>
<row>
<entry thead="no"><para>undo   </para>
</entry><entry thead="no" align='center'><para>execute last cmd   </para>
</entry><entry thead="no" align='right'><para>depends on last cmd   </para>
</entry><entry thead="no" align='right'><para>depends on last cmd    </para>
</entry></row>
<row>
<entry thead="no"><para>reset   </para>
</entry><entry thead="no" align='center'><para>reset device   </para>
</entry><entry thead="no" align='right'><para>null   </para>
</entry><entry thead="no" align='right'><para>void    </para>
</entry></row>
<row>
<entry thead="no"><para>sleep   </para>
</entry><entry thead="no" align='center'><para>sleep device   </para>
</entry><entry thead="no" align='right'><para>null   </para>
</entry><entry thead="no" align='right'><para>void   </para>
</entry></row>
</table>
</para>
<para>It is up to to specify if &lt;value&gt; can int, float, double or any type ..</para>
</sect1>
<sect1 id="index_1autotoc_md7">
<title>Demonstrartion Video</title>
<para>A demo value is coming soon.. </para>
</sect1>
<sect1 id="index_1autotoc_md8">
<title>UML Class Diagramm</title>
<para>Under <ulink url="docs/uml/">UML</ulink> folder are previous uml Diagrams. </para>
</sect1>
<sect1 id="index_1autotoc_md9">
<title>UML state Diagram</title>
<para>Deprecated. see <ulink url="docs/uml/">UML</ulink> folder for previous uml Diagrams. </para>
</sect1>
<sect1 id="index_1autotoc_md10">
<title>UML Sequence Diagram</title>
<para>see <ulink url="docs/uml/">UML</ulink> folder for previous uml Diagrams. </para>
</sect1>
<sect1 id="index_1autotoc_md11">
<title>Test</title>
<para>please refer to test folder readme for tests and definitions.</para>
</sect1>
<sect1 id="index_1autotoc_md12">
<title>V3 Features</title>
<para><itemizedlist>
<listitem><para>implementing cmd design pattern</para>
</listitem><listitem><para>implementing threading/scheduling tasks</para>
</listitem><listitem><para>generating docsumentation fully with doxygen </para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md13">
<title>Change Log</title>
<para><itemizedlist>
<listitem><para>19.05.2022: see older branch (master branch for change log)</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md14">
<title>ROS Concept &amp; Integration</title>
<para>For upcoming version, ros will be fully supported. <image type="html" name="docs/img/ros_concept_idea.png" alt="here" inline="yes"></image>
</para>
</sect1>
<sect1 id="index_1autotoc_md15">
<title>TODO</title>
<para><itemizedlist>
<listitem><para>finish implementing scheduler</para>
</listitem><listitem><para>finish docs for all files </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <location file="C:/Users/SamiDhiab/Theion_Repos/firm_Alignment_PrintHead/README.md"/>
  </compounddef>
</doxygen>
