.TH "CmdBufferObject" 3 "Thu May 19 2022" "Version 0.1" "Firmware Design Template" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CmdBufferObject
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CmdBuffer\&.hpp>\fP
.PP
Inherited by \fBCmdBuffer< BUFFERSIZE >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCmdBufferObject\fP ()"
.br
.ti -1c
.RI "bool \fBreadFromSerial\fP (Stream *serial, uint32_t timeOut=0)"
.br
.ti -1c
.RI "bool \fBreadSerialChar\fP (Stream *serial)"
.br
.ti -1c
.RI "void \fBsetEndChar\fP (uint8_t end)"
.br
.ti -1c
.RI "void \fBsetBackChar\fP (uint8_t backspace)"
.br
.ti -1c
.RI "void \fBsetEcho\fP (bool echo)"
.br
.ti -1c
.RI "char * \fBgetStringFromBuffer\fP ()"
.br
.ti -1c
.RI "virtual void \fBclear\fP ()=0"
.br
.ti -1c
.RI "virtual uint8_t * \fBgetBuffer\fP ()=0"
.br
.ti -1c
.RI "virtual size_t \fBgetBufferSize\fP ()=0"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CmdBufferObject::CmdBufferObject ()\fC [inline]\fP"
Clear buffer and set defaults\&. 
.PP
Definition at line \fB29\fP of file \fBCmdBuffer\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void CmdBufferObject::clear ()\fC [pure virtual]\fP"
Clear buffer with 0x00 
.PP
Implemented in \fBCmdBuffer< BUFFERSIZE >\fP\&.
.SS "virtual uint8_t * CmdBufferObject::getBuffer ()\fC [pure virtual]\fP"
Return a null-terminated ('\\0') string
.PP
\fBReturns\fP
.RS 4
String from Buffer 
.RE
.PP

.PP
Implemented in \fBCmdBuffer< BUFFERSIZE >\fP\&.
.SS "virtual size_t CmdBufferObject::getBufferSize ()\fC [pure virtual]\fP"
Get size of buffer
.PP
\fBReturns\fP
.RS 4
Size of buffer 
.RE
.PP

.PP
Implemented in \fBCmdBuffer< BUFFERSIZE >\fP\&.
.SS "char * CmdBufferObject::getStringFromBuffer ()\fC [inline]\fP"
Cast Buffer to c string\&.
.PP
\fBReturns\fP
.RS 4
Buffer as cstring 
.RE
.PP

.PP
Definition at line \fB96\fP of file \fBCmdBuffer\&.hpp\fP\&.
.SS "bool CmdBufferObject::readFromSerial (Stream * serial, uint32_t timeOut = \fC0\fP)"
Read data from serial communication to buffer\&. It read only printable ASCII character from serial\&. All other will ignore for buffer\&.
.PP
\fBParameters\fP
.RS 4
\fIserial\fP Arduino Serial object from read commands 
.br
\fItimeOut\fP Set a time out in millisec or 0 for none 
.RE
.PP
\fBReturns\fP
.RS 4
TRUE if data readed until end character or FALSE is a timeout receive or buffer is full\&. 
.RE
.PP

.PP
Definition at line \fB9\fP of file \fBCmdBuffer\&.cpp\fP\&.
.SS "bool CmdBufferObject::readSerialChar (Stream * serial)"
Read one char from serial communication to buffer if available\&. It read only printable ASCII character from serial\&. All other will ignore for buffer\&. This function only ready currently available data and doesn't wait for a full command (= end character)
.PP
\fBParameters\fP
.RS 4
\fIserial\fP Arduino Serial object from read commands 
.RE
.PP
\fBReturns\fP
.RS 4
TRUE if data readed until end character or FALSE if not\&. 
.RE
.PP

.PP
Definition at line \fB66\fP of file \fBCmdBuffer\&.cpp\fP\&.
.SS "void CmdBufferObject::setBackChar (uint8_t backspace)\fC [inline]\fP"
Set a ASCII character for serial cmd backspace\&. Default value is BS\&.
.PP
Macros for helping are:
.IP "\(bu" 2
CMDBUFFER_CHAR_BS
.IP "\(bu" 2
CMDBUFFER_CHAR_DEL
.PP
.PP
\fBParameters\fP
.RS 4
\fIbackspace\fP ASCII character 
.RE
.PP

.PP
Definition at line \fB82\fP of file \fBCmdBuffer\&.hpp\fP\&.
.SS "void CmdBufferObject::setEcho (bool echo)\fC [inline]\fP"
Set echo serial on (true) or off (false)
.PP
\fBParameters\fP
.RS 4
\fIecho\fP bool 
.RE
.PP

.PP
Definition at line \fB89\fP of file \fBCmdBuffer\&.hpp\fP\&.
.SS "void CmdBufferObject::setEndChar (uint8_t end)\fC [inline]\fP"
Set a ASCII character for serial cmd end\&. Default value is LF\&.
.PP
Macros for helping are:
.IP "\(bu" 2
CMDBUFFER_CHAR_LF
.IP "\(bu" 2
CMDBUFFER_CHAR_CR
.PP
.PP
\fBParameters\fP
.RS 4
\fIend\fP ASCII character 
.RE
.PP

.PP
Definition at line \fB70\fP of file \fBCmdBuffer\&.hpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Firmware Design Template from the source code\&.
